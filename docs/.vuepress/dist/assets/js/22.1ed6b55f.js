(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{274:function(s,a,n){"use strict";n.r(a);var t=n(13),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"结构型设计模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结构型设计模式"}},[s._v("#")]),s._v(" 结构型设计模式")]),s._v(" "),n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),n("p",[s._v("本人平时学习及收集内容，欢迎参入一起讨论。")]),s._v(" "),n("h2",{attrs:{id:"内容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内容"}},[s._v("#")]),s._v(" 内容")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#%E4%B8%80%E3%80%81%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F"}},[s._v("外观模式")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E4%BA%8C%E3%80%81%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F"}},[s._v("适配器模式")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E4%B8%89%E3%80%81%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F"}},[s._v("代理模式")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E5%9B%9B%E3%80%81%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F"}},[s._v("装饰者模式")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E4%BA%94%E3%80%81%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F"}},[s._v("桥接模式")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E5%85%AD%E3%80%81%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F"}},[s._v("组合模式")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E4%B8%83%E3%80%81%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F"}},[s._v("享元模式")])])]),s._v(" "),n("h3",{attrs:{id:"一、外观模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、外观模式"}},[s._v("#")]),s._v(" 一、外观模式")]),s._v(" "),n("h4",{attrs:{id:"_1-1-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-介绍"}},[s._v("#")]),s._v(" 1.1 介绍")]),s._v(" "),n("p",[s._v("为子系统的一组接口提供一个一致的界面，定义了一个高层接口，这个接口使子系统更加容易使用")]),s._v(" "),n("h4",{attrs:{id:"_1-2-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-代码"}},[s._v("#")]),s._v(" 1.2 代码")]),s._v(" "),n("p",[s._v("兼容浏览器事件绑定")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let addMyEvent = function(el,ev,fn){\n    if(el.addEventListener){\n        el.addEventListener(ev,fn,false)\n    }else if(el.attachEvent){\n        el.attachEvent('on' + ev,fn)\n    }else{\n        el['on' + ev] = fn\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("封装接口")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let myEvent = {\n    // ...\n    stop: e = >{\n        e.stopPropagation()\n        e.preventDefault()\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h4",{attrs:{id:"_1-3-优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-优点"}},[s._v("#")]),s._v(" 1.3 优点")]),s._v(" "),n("ul",[n("li",[s._v("减少系统相互依赖")]),s._v(" "),n("li",[s._v("提高灵活性")]),s._v(" "),n("li",[s._v("提高了安全性")])]),s._v(" "),n("h4",{attrs:{id:"_1-4-缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-缺点"}},[s._v("#")]),s._v(" 1.4 缺点")]),s._v(" "),n("ul",[n("li",[s._v("不符合开闭原则，如果要改东西很麻烦，继承重写都不合适")])]),s._v(" "),n("h4",{attrs:{id:"_1-5-场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-场景"}},[s._v("#")]),s._v(" 1.5 场景")]),s._v(" "),n("ul",[n("li",[s._v("设计初期，应该要有意识将不同的两个层分离，比如经典的三层结构，在数据访问层和业务逻辑层、业务逻辑层和表示层之间建立外观 Facade")]),s._v(" "),n("li",[s._v("在开发阶段，子系统往往因为不断的重构演化而变得越来越复杂，增加外观 Facade 可以提供一个简单的接口，减少他们之间的依赖。")]),s._v(" "),n("li",[s._v("在维护一个遗留的大型系统时，可能这个系统已经很难维护了，这时候使用外观 Facade 也是非常合适的，为系统开发一个外观 Facade 类，为设计粗糙和高度复杂的遗留代码提供比较清晰的接口，让新系统和 Facade 对象交互，Facade 与遗留代码交互所有的复杂工作。")])]),s._v(" "),n("h3",{attrs:{id:"二、适配器模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、适配器模式"}},[s._v("#")]),s._v(" 二、适配器模式")]),s._v(" "),n("h4",{attrs:{id:"_2-1-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-介绍"}},[s._v("#")]),s._v(" 2.1 介绍")]),s._v(" "),n("p",[s._v("将一个类的接口转化为了另外一接口，以满足用户需求，使类之间接口不兼容问题通过适配器得以解决")]),s._v(" "),n("h4",{attrs:{id:"_2-2-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-代码"}},[s._v("#")]),s._v(" 2.2 代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Plug{\n    getName(){\n        return 'iphone充电头'\n    }\n}\n\nclass Target{\n    constructor(){\n        this.plug = new Plug();\n    }\n    getName(){\n        return this.plug.getName() + ' 适配器Type-c充电头';\n    }\n}\n\nlet target = new Target();\ntarget.getName();       // iphone充电头 适配器转Type-c充电头\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h4",{attrs:{id:"_2-3-优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-优点"}},[s._v("#")]),s._v(" 2.3 优点")]),s._v(" "),n("ul",[n("li",[s._v("可以让任何两个没有关联的类一起运行")]),s._v(" "),n("li",[s._v("提高了类的复用")]),s._v(" "),n("li",[s._v("适配对象，适配库，适配数据")])]),s._v(" "),n("h4",{attrs:{id:"_2-4-缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-缺点"}},[s._v("#")]),s._v(" 2.4 缺点")]),s._v(" "),n("ul",[n("li",[s._v("额外对象的创建，非直接调用，存在一定的开销（且不像代理模式在某些功能点上可以实现性能优化）")]),s._v(" "),n("li",[s._v("如果没必要使用适配器模式的放，可以考虑重构，如果使用的话，尽量把文档完善")])]),s._v(" "),n("h4",{attrs:{id:"_2-5-场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-场景"}},[s._v("#")]),s._v(" 2.5 场景")]),s._v(" "),n("ul",[n("li",[s._v("整合第三方 SDK")]),s._v(" "),n("li",[s._v("封装旧接口")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 自己封装的ajax，使用方式如下\najax({\n    url: '/getData',\n    type: 'post',\n    dataType: 'json',\n    data:{\n        test:111\n    }\n}).done(function(){})\n\n// 做一层适配器\nvar $ = {\n    ajax: function(options){\n        return ajax(options)\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("ul",[n("li",[s._v("vue 的 computed")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<template>\n    <div id=\"example\">\n    </div>\n</template>\n<script type=\"text/javascript\">\nexport default{\n    name: 'demo',\n    data(){\n        return {\n            message: 'Hello'\n        }\n    },\n    computed:{\n        reversedMessage:function(){\n            return this.message.split('').reverse().join('')\n        }\n    }\n}\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("原有 data 中的数据不满足当前的要求，通过计算属性的规则来适配成我们需要的格式，对原有数据并没有改变，只改变了原有数据的表现形式")]),s._v(" "),n("h4",{attrs:{id:"适配器与代码模式相似"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#适配器与代码模式相似"}},[s._v("#")]),s._v(" 适配器与代码模式相似")]),s._v(" "),n("ul",[n("li",[s._v("适配器模式：提供一个不同的接口（如不同版本的插头）")]),s._v(" "),n("li",[s._v("代码模式：提供一模一样的接口")])]),s._v(" "),n("h3",{attrs:{id:"三、代理模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、代理模式"}},[s._v("#")]),s._v(" 三、代理模式")]),s._v(" "),n("h4",{attrs:{id:"_3-1-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-介绍"}},[s._v("#")]),s._v(" 3.1 介绍")]),s._v(" "),n("p",[s._v("是为了一个对象提供一个借用品或占位符，以便控制对它的访问")]),s._v(" "),n("h4",{attrs:{id:"_3-2-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-代码"}},[s._v("#")]),s._v(" 3.2 代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let Flower = function() {}\nlet xiaoming = {\n    sendFlower: function(target){\n        let flower = new Flower()\n        target.receiveFlower(flower)\n    }\n}\nlet B = {\n    receiveFlower:function(flower){\n        A.listenGoodMood(function(){\n            A.receiveFlower(flower)\n        })\n    }\n}\nlet A = {\n    receiveFlower:function(flower){\n        console.log('收到花'+flower)\n    },\n    listenGoodMood:function(fn){\n        setTimeout(function(){\n            fn()\n        },1000)\n    }\n}\nxiaoming.sendFlower(B)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("h4",{attrs:{id:"_3-3-优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-优点"}},[s._v("#")]),s._v(" 3.3 优点")]),s._v(" "),n("ul",[n("li",[s._v("代理模式能将代理对象与被调用对象分离，降低了系统的耦合度。代理模式在客户端和目标对象之间起到一个中介作用，这样可以走到保护目标对象的作用、")]),s._v(" "),n("li",[s._v("代理对象可以扩展目标对象的功能；通过修改代理对象就可以了，符合开闭原则；")])]),s._v(" "),n("h4",{attrs:{id:"_3-4-缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-缺点"}},[s._v("#")]),s._v(" 3.4 缺点")]),s._v(" "),n("ul",[n("li",[s._v("处理请求速度可能有差别，非直接访问存在开销")])]),s._v(" "),n("h4",{attrs:{id:"_3-5-场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-场景"}},[s._v("#")]),s._v(" 3.5 场景")]),s._v(" "),n("ul",[n("li",[s._v("HTML 元素事件代理")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<ul id=\"ul\">\n    <li>1</li>\n    <li>2</li>\n    <li>3</li>\n</ul>\n<script>\n    let ul = document.querySelector('#ul');\n    ul.addEventListener('click',event=>{\n        console.log(event.target);\n    })\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("ul",[n("li",[s._v("ES6 的 proxy")]),s._v(" "),n("li",[s._v("jQuery.proxy()方法")])]),s._v(" "),n("h3",{attrs:{id:"四、装饰者模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、装饰者模式"}},[s._v("#")]),s._v(" 四、装饰者模式")]),s._v(" "),n("h4",{attrs:{id:"_4-1-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-介绍"}},[s._v("#")]),s._v(" 4.1 介绍")]),s._v(" "),n("ul",[n("li",[s._v("动态地给某个对象添加一些额外的职责，是一种实现的替代方案")]),s._v(" "),n("li",[s._v("在不改变原对象的基础上，通过对其进行包装扩展，使原有对象可以满足用户的更复杂需求，而不会影响从这个类中派生的其他对象")])]),s._v(" "),n("h4",{attrs:{id:"_4-2-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-代码"}},[s._v("#")]),s._v(" 4.2 代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Cellphone{\n    create(){\n        console.log('生成一个手机')\n    }\n}\nclass Decorator{\n    constructor(cellphone){\n        this.cellphone = cellphone\n    }\n    create(){\n        this.cellphone.create()\n        this.createShell(cellphone)\n    }\n    createShell(){\n        console.log('生成手机壳')\n    }\n}\n// 测试代码\nlet cellphone = new Cellphone()\ncellphone.create()\n\nconsole.log('----------')\nlet dec = new Decorator(cellphone)\ndec.create()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("h4",{attrs:{id:"_4-3-优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-优点"}},[s._v("#")]),s._v(" 4.3 优点")]),s._v(" "),n("ul",[n("li",[s._v("装饰类和被装饰类都只关心自身的核心业务，实现了解耦")]),s._v(" "),n("li",[s._v("方便动态的扩展功能，且提供了比继承更多的灵活性")])]),s._v(" "),n("h4",{attrs:{id:"_4-4-缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-缺点"}},[s._v("#")]),s._v(" 4.4 缺点")]),s._v(" "),n("ul",[n("li",[s._v("多层装饰比较复杂")]),s._v(" "),n("li",[s._v("常常会引入许多小对象，看起来比较相似，实际功能大相径庭，从而使得我们的应用程序架构变得复杂起来")])]),s._v(" "),n("h4",{attrs:{id:"_4-5-场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-场景"}},[s._v("#")]),s._v(" 4.5 场景")]),s._v(" "),n("ul",[n("li",[s._v("比如现在有 4 种型号的自行车，我们为每种自行车定义了一个单独的类。现在要给每种自行车都装上前灯、尾灯和铃铛这 3 种配件。如果使用继承的方式来给每种自行车创建子类，则需要 "),n("code",[s._v("4*3=12")]),s._v("个子类。但是如果把前灯、尾灯、铃铛这些对象动态组合到自行车上面，则只需要额外增加 3 个类")]),s._v(" "),n("li",[s._v("ES7 Decorator")]),s._v(" "),n("li",[s._v("core-decorators")])]),s._v(" "),n("h3",{attrs:{id:"五、桥接模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五、桥接模式"}},[s._v("#")]),s._v(" 五、桥接模式")]),s._v(" "),n("h4",{attrs:{id:"_5-1-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-介绍"}},[s._v("#")]),s._v(" 5.1 介绍")]),s._v(" "),n("p",[s._v("桥接模式将抽象部分与它的实现部分分离，使它们都可以独立地变化。")]),s._v(" "),n("h4",{attrs:{id:"_5-2-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-代码"}},[s._v("#")]),s._v(" 5.2 代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Color{\n    constructor(name){\n        this.name = name\n    }\n}\nclass Shape{\n    constructor(name,color){\n        this.name = name\n        this.color = color\n    }\n    draw(){\n        console.log(`${this.color.name} ${this.name}`)\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h4",{attrs:{id:"_5-3-优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-优点"}},[s._v("#")]),s._v(" 5.3 优点")]),s._v(" "),n("ul",[n("li",[s._v("有助于独立地管理各组成部分，把抽象化与实现化解耦")]),s._v(" "),n("li",[s._v("提高可扩充性")])]),s._v(" "),n("h4",{attrs:{id:"_5-4-缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-缺点"}},[s._v("#")]),s._v(" 5.4 缺点")]),s._v(" "),n("ul",[n("li",[s._v("大量的类将导致开发成本增加，同时在性能方面可能也会有所减少。")])]),s._v(" "),n("h4",{attrs:{id:"_5-5-场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-场景"}},[s._v("#")]),s._v(" 5.5 场景")]),s._v(" "),n("h3",{attrs:{id:"六、组合模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#六、组合模式"}},[s._v("#")]),s._v(" 六、组合模式")]),s._v(" "),n("h4",{attrs:{id:"_6-1-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-介绍"}},[s._v("#")]),s._v(" 6.1 介绍")]),s._v(" "),n("ul",[n("li",[s._v("将对象组合成树形结构，以表示“整体-部分”的层次结构。")]),s._v(" "),n("li",[s._v("通过对象的多态表现，使得用户对单个对象和组合对象的使用具有一致性。")])]),s._v(" "),n("h4",{attrs:{id:"_6-2-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-代码"}},[s._v("#")]),s._v(" 6.2 代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class TrainOrder(){\n    create(){\n        console.log('创建火车票订单')\n    }\n}\nclass HoteOrder(){\n    create(){\n        console.log('创建酒店订单')\n    }\n}\nclass TotalOrder(){\n    constructor(){\n        this.orderList = []\n    }\n    addOrder(order){\n        this.orderList.push(order)\n        return this\n    }\n    create(){\n        this.orderList.forEach(item=>{\n            item.create(0)\n        })\n        return this\n    }\n}\n\n// 可以在购票网站买车同时也订房间\nlet train = new TrainOrder()\nlet hotel = new HotelOrder()\nlet total = new TotalOrder()\ntotal.addOrder(train).addOrder(hotal).create()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("h4",{attrs:{id:"_6-3-优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-优点"}},[s._v("#")]),s._v(" 6.3 优点")]),s._v(" "),n("h4",{attrs:{id:"_6-4-缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-缺点"}},[s._v("#")]),s._v(" 6.4 缺点")]),s._v(" "),n("ul",[n("li",[s._v("如果通过组合模式创建了太多的对象，那么这些对象可能会让系统负担不起。")])]),s._v(" "),n("h4",{attrs:{id:"_6-5-场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-场景"}},[s._v("#")]),s._v(" 6.5 场景")]),s._v(" "),n("ul",[n("li",[s._v("表示对象-整体层次结构")]),s._v(" "),n("li",[s._v("希望用户忽略组合对象和单个对象的不同，用户将统一地使用组合结构中的所有对象（方法）")])]),s._v(" "),n("h3",{attrs:{id:"七、享元模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#七、享元模式"}},[s._v("#")]),s._v(" 七、享元模式")]),s._v(" "),n("h4",{attrs:{id:"_7-1-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-介绍"}},[s._v("#")]),s._v(" 7.1 介绍")]),s._v(" "),n("p",[s._v("运用共享技术有效地支持大量粒度对象的复用。系统只使用少量的对象，而这些对象都很相似，状态变化很小，可以实现对象的多次复用。由于享元模式要求能够共享的对象必须是细粒度对象，因此它又称轻量级模式，它是一种对象结构型模式")]),s._v(" "),n("h4",{attrs:{id:"_7-2-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-代码"}},[s._v("#")]),s._v(" 7.2 代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let examCarNum = 0\n/* 驾考车对象 */\nclass ExamCar{\n    constructor(carType){\n        examCarNum++\n        this.carId = examCarNum\n        this.carType = carType ? '手动档' : '自动档'\n        this.usingState = false // 是否存在使用\n    }\n\n    /* 在本车上考试 */\n    examine(candidateId){\n        return new Promise((resolve)=>{\n            this.usingState = true\n            console.log(``)\n            setTimeout(()=>{\n                this.usingState = false\n                console.log(`%c考生- ${candidateId}驾考车- ${this.carId}上考试`)\n                resolve()\n            },Math.random() * 2000)\n        })\n    }\n}\n\n/* 手动档汽车对象池  */\nManualExamCarPool = {\n    _pool: [],          // 驾考车对象\n    _candidateQueue: [],    // 考生队列\n\n    /* 注册考生ID列表 */\n    registCandidates(candidateList){\n        candidateList.forEach(candidateId => this.registCandidate(candidateId))\n    },\n\n    /* 注册手动档考生 */\n    registCandidate(candidateId){\n        const examCar = this.getManualExamCar()     // 找一个未被占用手动档驾考车\n        if(examCar){\n            examCar.examine(candidateId).then(()=>{\n                const nextCandidateId = this._candidateQueue.length && this._candidateQueue.shift()\n                nextCandidateId && this.registCandidate(nextCandidateId)\n            })\n        }else{\n            this._candidateQueue.push(candidateId)\n        }\n    },\n\n    /* 注册手动档车 */\n    initManualExamCar(manualExamCarNum){\n        for(let i = 1; i<= manualExamCarNum;i++){\n            this._pool.push(new ExamCar(true))\n        }\n    },\n\n    /* 获取状态为未被占用的手动档车 */\n    getManualExamCar(){\n        return this._pool.find(car => !car.usingState)\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br")])]),n("h4",{attrs:{id:"_7-3-优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-优点"}},[s._v("#")]),s._v(" 7.3 优点")]),s._v(" "),n("ul",[n("li",[s._v("大大减少对象的创建，降低系统的内存，使效率提高。")])]),s._v(" "),n("h4",{attrs:{id:"_7-4-缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-缺点"}},[s._v("#")]),s._v(" 7.4 缺点")]),s._v(" "),n("ul",[n("li",[s._v("提高了系统的复杂度，需要分离出外部状态和内部状态，而且外部状态具有固有化的性质，不应该随着内部状态的变化而变化，否则会千万系统的混乱。")])]),s._v(" "),n("h4",{attrs:{id:"_7-5-场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-场景"}},[s._v("#")]),s._v(" 7.5 场景")]),s._v(" "),n("ul",[n("li",[s._v("文件上传需要创建多个文件实例的时候")]),s._v(" "),n("li",[s._v("如果一个应用程序使用了大量的对象，而这些大量的对象千万了很大存储开销时应该考虑使用享元模式")])]),s._v(" "),n("h2",{attrs:{id:"参考资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),n("ul",[n("li",[s._v("《JavaScript 设计模式》")]),s._v(" "),n("li",[n("a",{attrs:{href:"https://mp.weixin.qq.com/s/ns8jwFlLtSh4PNObWjSMrA",target:"_blank",rel:"noopener noreferrer"}},[s._v("一文读懂 JS 装饰器，这是一个会打扮的装饰器"),n("OutboundLink")],1)])]),s._v(" "),n("h3",{attrs:{id:"联系作者"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#联系作者"}},[s._v("#")]),s._v(" 联系作者")]),s._v(" "),n("div",{attrs:{align:"center"}},[n("p",[s._v("\n        平凡世界，贵在坚持。\n    ")]),s._v(" "),n("img",{attrs:{src:s.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);a.default=e.exports}}]);