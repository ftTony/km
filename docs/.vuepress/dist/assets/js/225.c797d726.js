(window.webpackJsonp=window.webpackJsonp||[]).push([[225],{245:function(s,a,e){"use strict";e.r(a);var t=e(4),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"git-常用命令与-gitflow-工作流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-常用命令与-gitflow-工作流","aria-hidden":"true"}},[s._v("#")]),s._v(" git 常用命令与 gitflow 工作流")]),s._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),e("p",[s._v("本人平时学习及收集内容，欢迎参入一起讨论。")]),s._v(" "),e("h2",{attrs:{id:"内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内容","aria-hidden":"true"}},[s._v("#")]),s._v(" 内容")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E4%B8%80%E3%80%81%E5%88%86%E6%94%AF%E6%A8%A1%E5%9E%8B"}},[s._v("分支模型")])]),s._v(" "),e("li",[e("a",{attrs:{href:"#%E4%BA%8C%E3%80%81Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B8%85%E5%8D%95"}},[s._v("Git 常用命令清单")])]),s._v(" "),e("li",[e("a",{attrs:{href:"#%E4%B8%89%E3%80%81Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%AF%BC%E5%9B%BE"}},[s._v("Git 常用命令导图")])])]),s._v(" "),e("h3",{attrs:{id:"一、分支模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、分支模型","aria-hidden":"true"}},[s._v("#")]),s._v(" 一、分支模型")]),s._v(" "),e("p",[s._v("用 git flow 初始化工程目录完成后，只能看到两个分支（长期分支）：")]),s._v(" "),e("ul",[e("li",[s._v("master 分支：用于上线的分支，保护性分支，只包含经过测试的稳定代码，开发人员不能直接工作在此分支上，也不能直接提交改动到 master 分支上。")]),s._v(" "),e("li",[s._v("develop 分支：是开发人员进行任何新的开发的基础分支，当开始一个新的 feature 分支的时候，要从 develop 分出去；另外此分支也汇集所有的已完成的功能，等待合并到 master 分支上线。上面两个分支被称为 长期分支 ，存在于项目的整个生命周期中，其他分支，是临时性的，根据需要来创建，当完成了自己的任务后，就会被删掉。")]),s._v(" "),e("li",[s._v("feature 分支：平常的开发工作使用最频繁的分支。")])]),s._v(" "),e("p",[s._v("创建功能分支，如下命令会创建一个名为”feature/” 的功能分支，该分支默认从 develop 检出，在做功能性开发的时候，检出一个独立的分支，是版本控制中一个重要 的原则。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("git flow feature start <branch-name>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("完成功能分支：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("git flow feature finish <branch-name>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("该命令会把我们在当前分支的代码整合到‘develop’分支中去，之后，git-flow 会进行清理操作，删除当下完成的功能分支，将分支切换到‘develop’。")]),s._v(" "),e("ul",[e("li",[s._v("release 分支：发布分支")])]),s._v(" "),e("p",[s._v("创建 release 分支命令如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("git flow release start 1.1.5\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("当你认为现在的‘develop’分支的代码已经是一个成熟的 release 版本的时候，这意味着，首先它包括所有新功能和必要的修复；其二，它已经被彻底的测试过了。如果上述两点都满足，那就是时候创建 release 分支了。\nnote：release 分支是使用版本号命名的，这个命名方案会让 Git-flow 在我们完成 release 后，适当的自动去标记那些 release 提交。")]),s._v(" "),e("p",[s._v("完成 release 分支：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("git flow release finish 1.1.5\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("上述命令会完成如下一系列操作：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("git-flow")]),s._v("会拉取远程仓库，确保目前是最新的版本。")]),s._v(" "),e("li",[e("code",[s._v("release")]),s._v(" 内容会被合并到 master 和 develop 两个长期分支中去。这样不仅产品代码是最新的，新开的功能分支也将基于最新的代码。")])]),s._v(" "),e("p",[s._v("为了便于识别和做历史参考，release 提交会被标记上这个"),e("code",[s._v("release")]),s._v("的名字清理操作，版本分支会被删除，并且回到 develop 分支。")]),s._v(" "),e("blockquote",[e("p",[s._v("note： 从 Git 的角度看来，release 版本现在已经完成，依据设置，对 master 的提交可能已经触发了编译部署流程。或者手动部署。")])]),s._v(" "),e("ul",[e("li",[s._v("hotfix 分支：很多时候，当对 release 版本做全面测试的时候，可能就会发现一些小错误，在这种情况下，git-flow 会提供一个特定的 hotfix 工作流程。")])]),s._v(" "),e("p",[s._v("创建 hotfix 分支:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("git flow hotfix start bug-fixed\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("上述命令会创建一个名为："),e("code",[s._v("hotfix/bug-fixed")]),s._v(" 的分支，这是对产品代码的修复，所以"),e("code",[s._v("hotfix")]),s._v("分支是基于"),e("code",[s._v("master")]),s._v("分支检出的。\n这也是和"),e("code",[s._v("release")]),s._v("分支最明显的区别，"),e("code",[s._v("release")]),s._v("分支是基于"),e("code",[s._v("develop")]),s._v("分支检出的。因为不能再一个还不完全稳定的分支上对产品代码进行修复。\n就像"),e("code",[s._v("release")]),s._v("一样，修复这个错误，会直接影响到项目的版本号。")]),s._v(" "),e("p",[s._v("完成 hotfix 分支：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("git flow hotfix finish bug-fixed\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("上述命令类似于发布一个"),e("code",[s._v("release")]),s._v("版本：")]),s._v(" "),e("ul",[e("li",[s._v("完成的改动会被合并到"),e("code",[s._v("master")]),s._v("中，同样也会合并到"),e("code",[s._v("develop")]),s._v("分支中，这样就可以确保这个错误不会再次出现在下一个"),e("code",[s._v("release")]),s._v("中；")]),s._v(" "),e("li",[s._v("这个"),e("code",[s._v("hotfix")]),s._v("将会被标记起来以便于参考；")]),s._v(" "),e("li",[s._v("当前的"),e("code",[s._v("hotfix")]),s._v("分支将会被删除，然后切换到"),e("code",[s._v("develop")]),s._v("分支；")])]),s._v(" "),e("blockquote",[e("p",[s._v("note： 完成"),e("code",[s._v("hotfix")]),s._v("分支之后，自动或手动启动编译部署流程")])]),s._v(" "),e("p",[s._v("下图为整体流程图：")]),s._v(" "),e("p",[e("img",{attrs:{src:"git01.png",alt:"images"}})]),s._v(" "),e("h4",{attrs:{id:"主要分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主要分支","aria-hidden":"true"}},[s._v("#")]),s._v(" 主要分支")]),s._v(" "),e("ul",[e("li",[s._v("master: 永远处在即将发布(production-ready)状态")]),s._v(" "),e("li",[s._v("develop: 最新的开发状态")])]),s._v(" "),e("h4",{attrs:{id:"辅助分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#辅助分支","aria-hidden":"true"}},[s._v("#")]),s._v(" 辅助分支")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("feature")]),s._v(": 开发新功能的分支, 基于 develop, 完成后 merge 回 develop")]),s._v(" "),e("li",[e("code",[s._v("release")]),s._v(": 准备要发布版本的分支, 用来修复 bug. 基于 develop, 完成后 merge 回 develop 和 master")]),s._v(" "),e("li",[e("code",[s._v("hotfix")]),s._v(": 修复 master 上的问题, 等不及 release 版本就必须马上上线. 基于 master, 完成后 merge 回 master 和 develop")])]),s._v(" "),e("h4",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),e("p",[e("strong",[s._v("主要分支")])]),s._v(" "),e("ul",[e("li",[s._v("master: 永远处在即将发布(production-ready)状态")]),s._v(" "),e("li",[s._v("develop: 最新的开发状态")])]),s._v(" "),e("p",[e("strong",[s._v("辅助分支")])]),s._v(" "),e("ul",[e("li",[s._v("feature: 开发新功能的分支, 基于 develop, 完成后 merge 回 develop")]),s._v(" "),e("li",[s._v("release: 准备要发布版本的分支, 用来修复 bug. 基于 develop, 完成后 merge 回 develop 和 master")]),s._v(" "),e("li",[s._v("hotfix: 修复 master 上的问题, 等不及 release 版本就必须马上上线. 基于 master, 完成后 merge 回 master 和 develop")])]),s._v(" "),e("h3",{attrs:{id:"二、git-常用命令清单"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、git-常用命令清单","aria-hidden":"true"}},[s._v("#")]),s._v(" 二、Git 常用命令清单")]),s._v(" "),e("p",[s._v("git 整体流程图：")]),s._v(" "),e("p",[e("img",{attrs:{src:"git02.png",alt:"images"}})]),s._v(" "),e("ul",[e("li",[s._v("初始化仓库")]),s._v(" "),e("li",[s._v("配置 Git")]),s._v(" "),e("li",[s._v("增加删除文件")]),s._v(" "),e("li",[s._v("代码提交")]),s._v(" "),e("li",[s._v("分支命令")]),s._v(" "),e("li",[s._v("标签命令")]),s._v(" "),e("li",[s._v("查看信息")]),s._v(" "),e("li",[s._v("远程同步")]),s._v(" "),e("li",[s._v("撤销")])]),s._v(" "),e("h3",{attrs:{id:"初始化仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化仓库","aria-hidden":"true"}},[s._v("#")]),s._v(" 初始化仓库")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 在当前目录新建一个Git代码库\n$ git init\n\n# 新建一个目录，将其初始化为Git代码库\n$ git init [project-name]\n\n# 下载一个项目和它的整个代码历史\n$ git clone [url]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h3",{attrs:{id:"配置-git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置-git","aria-hidden":"true"}},[s._v("#")]),s._v(" 配置 Git")]),s._v(" "),e("p",[s._v("Git 的设置文件为 .gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('# 显示当前的Git配置\n$ git config --list\n\n# 编辑Git配置文件\n$ git config -e [--global]\n\n# 设置提交代码时的用户信息\n$ git config [--global] user.name "[name]"\n$ git config [--global] user.email "[email address]"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h3",{attrs:{id:"增加删除文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增加删除文件","aria-hidden":"true"}},[s._v("#")]),s._v(" 增加删除文件")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 添加指定文件到暂存区\n$ git add [file1] [file2] ...\n\n# 添加指定目录到暂存区，包括子目录\n$ git add [dir]\n\n# 添加当前目录的所有文件到暂存区\n$ git add .\n\n# 添加每个变化前，都会要求确认\n# 对于同一个文件的多处变化，可以实现分次提交\n$ git add -p\n\n# 删除工作区文件，并且将这次删除放入暂存区\n$ git rm [file1] [file2] ...\n\n# 停止追踪指定文件，但该文件会保留在工作区\n$ git rm --cached [file]\n\n# 改名文件，并且将这个改名放入暂存区\n$ git mv [file-original] [file-renamed]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("h3",{attrs:{id:"代码提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码提交","aria-hidden":"true"}},[s._v("#")]),s._v(" 代码提交")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 提交暂存区到仓库区\n$ git commit -m [message]\n\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n# 提交时显示所有diff信息\n$ git commit -v\n\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("h3",{attrs:{id:"分支命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支命令","aria-hidden":"true"}},[s._v("#")]),s._v(" 分支命令")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 列出所有本地分支\n$ git branch\n\n# 列出所有远程分支\n$ git branch -r\n\n# 列出所有本地分支和远程分支\n$ git branch -a\n\n# 新建一个分支，但依然停留在当前分支\n$ git branch [branch-name]\n\n# 新建一个分支，并切换到该分支\n$ git checkout -b [branch]\n\n# 新建一个分支，指向指定commit\n$ git branch [branch] [commit]\n\n# 新建一个分支，与指定的远程分支建立追踪关系\n$ git branch --track [branch] [remote-branch]\n\n# 切换到指定分支，并更新工作区\n$ git checkout [branch-name]\n\n# 切换到上一个分支\n$ git checkout -\n\n# 建立追踪关系，在现有分支与指定的远程分支之间\n$ git branch --set-upstream [branch] [remote-branch]\n\n# 合并指定分支到当前分支\n$ git merge [branch]\n\n# 选择一个commit，合并进当前分支\n$ git cherry-pick [commit]\n\n# 删除分支\n$ git branch -d [branch-name]\n\n# 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br")])]),e("h3",{attrs:{id:"标签命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标签命令","aria-hidden":"true"}},[s._v("#")]),s._v(" 标签命令")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 列出所有tag\n$ git tag\n\n# 新建一个tag在当前commit\n$ git tag [tag]\n\n# 新建一个tag在指定commit\n$ git tag [tag] [commit]\n\n# 删除本地tag\n$ git tag -d [tag]\n\n# 删除远程tag\n$ git push origin :refs/tags/[tagName]\n\n# 查看tag信息\n$ git show [tag]\n\n# 提交指定tag\n$ git push [remote] [tag]\n\n# 提交所有tag\n$ git push [remote] --tags\n\n# 新建一个分支，指向某个tag\n$ git checkout -b [branch] [tag]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("h3",{attrs:{id:"查看信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看信息","aria-hidden":"true"}},[s._v("#")]),s._v(" 查看信息")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('# 显示有变更的文件\n$ git status\n\n# 显示当前分支的版本历史\n$ git log\n\n# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n\n# 搜索提交历史，根据关键词\n$ git log -S [keyword]\n\n# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] HEAD --pretty=format:%s\n\n# 显示某个commit之后的所有变动，其"提交说明"必须符合搜索条件\n$ git log [tag] HEAD --grep feature\n\n# 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n\n# 显示指定文件相关的每一次diff\n$ git log -p [file]\n\n# 显示过去5次提交\n$ git log -5 --pretty --oneline\n\n# 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n\n# 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n\n# 显示暂存区和工作区的差异\n$ git diff\n\n# 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n\n# 显示工作区与当前分支最新commit之间的差异\n$ git diff HEAD\n\n# 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n\n# 显示今天你写了多少行代码\n$ git diff --shortstat "@{0 day ago}"\n\n# 显示某次提交的元数据和内容变化\n$ git show [commit]\n\n# 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n\n# 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n\n# 显示当前分支的最近几次提交\n$ git reflog\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br")])]),e("h3",{attrs:{id:"远程同步"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#远程同步","aria-hidden":"true"}},[s._v("#")]),s._v(" 远程同步")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 下载远程仓库的所有变动\n$ git fetch [remote]\n\n# 显示所有远程仓库\n$ git remote -v\n\n# 显示某个远程仓库的信息\n$ git remote show [remote]\n\n# 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n\n# 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n\n# 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n\n# 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n\n# 推送所有分支到远程仓库\n$ git push [remote] --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("h4",{attrs:{id:"撤销"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#撤销","aria-hidden":"true"}},[s._v("#")]),s._v(" 撤销")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n\n# 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n\n# 恢复暂存区的所有文件到工作区\n$ git checkout .\n\n# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n\n# 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n\n# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n\n# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n\n# 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n\n# 新建一个commit，用来撤销指定commit\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n\n# 暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("h4",{attrs:{id:"git-reset、git-revert-和-git-checkout-有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset、git-revert-和-git-checkout-有什么区别","aria-hidden":"true"}},[s._v("#")]),s._v(" git reset、git revert 和 git checkout 有什么区别")]),s._v(" "),e("p",[s._v("这个问题同样也需要先了解 git 仓库的三个组成部分：工作区（Working Directory）、暂存区（Stage）和历史记录区（History）。")]),s._v(" "),e("ul",[e("li",[s._v("工作区：在 git 管理下的正常目录都算是工作区，我们平时的编辑工作都是在工作区完成")]),s._v(" "),e("li",[s._v("暂存区：临时区域。里面存放将要提交文件的快照")]),s._v(" "),e("li",[s._v("历史记录区：git commit 后记录区")])]),s._v(" "),e("p",[s._v("三个区的转换关系以及转换所使用的命令：")]),s._v(" "),e("p",[e("img",{attrs:{src:"git03.png",alt:"images"}})]),s._v(" "),e("p",[e("code",[s._v("git reset")]),s._v("、"),e("code",[s._v("git revert")]),s._v(" 和 "),e("code",[s._v("git checkout")]),s._v("的共同点：用来撤销代码仓库中的某些更改。")]),s._v(" "),e("p",[s._v("不同点：")]),s._v(" "),e("ul",[e("li",[s._v("从"),e("code",[s._v("commit")]),s._v("层面来说：\n"),e("ul",[e("li",[e("code",[s._v("git reset")]),s._v("可以将一个分支的末端指向之前的一个"),e("code",[s._v("commit")]),s._v("。然后再下次"),e("code",[s._v("git")]),s._v("执行垃圾回收的时候，会把这个"),e("code",[s._v("commit")]),s._v("之后的"),e("code",[s._v("commit")]),s._v("都扔掉。"),e("code",[s._v("git reset")]),s._v("还支持三种标记，用来标记"),e("code",[s._v("reset")]),s._v("指令影响的范围：\n"),e("ul",[e("li",[e("code",[s._v("--mixed")]),s._v("：会影响到暂存区和历史记录区。也是默认选项")]),s._v(" "),e("li",[e("code",[s._v("--soft")]),s._v("：只影响历史记录区")]),s._v(" "),e("li",[e("code",[s._v("--hard")]),s._v("：影响工作区、暂存区和历史记录区\n"),e("blockquote",[e("p",[s._v("注意：因为 git reset 是删除 commit 记录，从而会影响到其他开发人员的分支，所以不要在公共分支（比如 develop）做这个操作。")])])])])]),s._v(" "),e("li",[e("code",[s._v("gitcheckout")]),s._v("：可以 HEAD 移到一个新的分支，并更新工作目录。因为可能会覆盖本地的修改，所以执行这个指令之前，你需要 stash 或者 commit 暂存区和工作区的更改。")]),s._v(" "),e("li",[e("code",[s._v("git revert")]),s._v("和"),e("code",[s._v("git reset")]),s._v("的目的是一样的，但是做法不同，它会以创建新的 commit 的方式来撤销 commit，这样能保留之前的 commit 历史，比较安全。另外，同样因为可能会覆盖本地的修改，所以执行这个指令之前，你需要 stash 或者 commit 暂存区和工作区的更改。")])])]),s._v(" "),e("li",[s._v("从文件层面来说：\n"),e("ul",[e("li",[e("code",[s._v("git reset")]),s._v("只是把文件从历史记录区拿到暂存区，不影响工作区的内容，而且不支持"),e("code",[s._v("--mixed")]),s._v("、"),e("code",[s._v("--soft")]),s._v("和"),e("code",[s._v("--hard")]),s._v("。")]),s._v(" "),e("li",[e("code",[s._v("git checkout")]),s._v("则是把文件从历史记录拿到工作，不影响暂存区的内容。")]),s._v(" "),e("li",[e("code",[s._v("git revert")]),s._v("不支持文件层面的操作。")])])])]),s._v(" "),e("h4",{attrs:{id:"rebase-与-merge的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rebase-与-merge的区别","aria-hidden":"true"}},[s._v("#")]),s._v(" rebase 与 merge的区别?")]),s._v(" "),e("p",[e("code",[s._v("git rebase")]),s._v("和"),e("code",[s._v("git merge")]),s._v("一样都是用于从一个分支获取并且合并到当前分支。")]),s._v(" "),e("p",[s._v("假设一个场景，就是我们开发的"),e("code",[s._v("[feature/todo]")]),s._v("分支要合并到master主分支，那么用"),e("code",[s._v("rebase")]),s._v("或者"),e("code",[s._v("merge")]),s._v("有什么不同呢？")]),s._v(" "),e("p",[e("img",{attrs:{src:"git04.png",alt:"images"}})]),s._v(" "),e("ul",[e("li",[s._v("merge特点：自动创建创建一个新的commit如果合并的时候遇到冲突，仅需要修改后重新commit")]),s._v(" "),e("li",[s._v("优点：记录了真实的commit情况，包括每个分支的详情")]),s._v(" "),e("li",[s._v("缺点：因为每次merge会自动产生一个"),e("code",[s._v("merge commit")]),s._v("，所以在使用git的GUI tools，特别是commit比较频繁时，看到分支很杂乱。")])]),s._v(" "),e("p",[e("img",{attrs:{src:"git05.png",alt:"images"}})]),s._v(" "),e("ul",[e("li",[s._v("rebase特点：会合并之前的commit历史")]),s._v(" "),e("li",[s._v("优点：得到更简洁的项目历史，去掉了merge commit")]),s._v(" "),e("li",[s._v("缺点：如果合并出现代码问题不容易定位，因为re-write了history")])]),s._v(" "),e("p",[s._v("因此，当需要保留详细的合并信息的时候建议使用git merge，特别是需要将分支合并进入master分支时；当发现自己修改某个功能时，频繁进行了git commit提交时，发现其实过多的提交信息没必要时，可以尝试git rebase。")]),s._v(" "),e("h3",{attrs:{id:"三、git-常用命令导图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、git-常用命令导图","aria-hidden":"true"}},[s._v("#")]),s._v(" 三、Git 常用命令导图")]),s._v(" "),e("p",[e("img",{attrs:{src:"git-Commands.png",alt:"images"}})]),s._v(" "),e("h3",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://juejin.im/post/5ad99c05f265da0b9265231b",target:"_blank",rel:"noopener noreferrer"}},[s._v("git 常用命令收集与 git-flow 简介"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://www.cnblogs.com/jiuyi/p/7690615.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Gitflow 工作流"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://www.git-tower.com/learn/git/ebook/cn/command-line/advanced-topics/git-flow",target:"_blank",rel:"noopener noreferrer"}},[s._v("git-flow 的工作流程"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/frank-lam/fullstack-tutorial/blob/master/notes/Git%E5%B7%A5%E4%BD%9C%E6%B5%81.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git 工作流"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/geeeeeeeeek/git-recipes",target:"_blank",rel:"noopener noreferrer"}},[s._v("git 学习"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/oldratlee/translations/tree/master/git-workflows-and-tutorials",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git 工作流指南"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/ftTony/blog/issues/27",target:"_blank",rel:"noopener noreferrer"}},[s._v("git 常用命令"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/521xueweihan/git-tips",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git 的奇技淫巧"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/geeeeeeeeek/git-recipes",target:"_blank",rel:"noopener noreferrer"}},[s._v("高质量的 Git 中文教程"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"http://gitbook.liuhui998.com/index.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git Community Book 中文版"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/phodal/github",target:"_blank",rel:"noopener noreferrer"}},[s._v("GitHub 漫游指南"),e("OutboundLink")],1)])]),s._v(" "),e("h2",{attrs:{id:"联系作者"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#联系作者","aria-hidden":"true"}},[s._v("#")]),s._v(" 联系作者")]),s._v(" "),e("div",{attrs:{align:"center"}},[e("p",[s._v("\n        平凡世界，贵在坚持。\n    ")]),s._v(" "),e("img",{attrs:{src:s.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);a.default=n.exports}}]);