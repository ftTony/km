(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{244:function(t,n,e){"use strict";e.r(n);var s=e(4),a=Object(s.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vue-双向数据绑定原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-双向数据绑定原理","aria-hidden":"true"}},[t._v("#")]),t._v(" vue 双向数据绑定原理")]),t._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("p",[t._v("本人平时学习及收集内容，欢迎参入一起讨论。")]),t._v(" "),e("h2",{attrs:{id:"内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内容","aria-hidden":"true"}},[t._v("#")]),t._v(" 内容")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E4%B8%80%E3%80%81%E5%87%A0%E7%A7%8D%E5%AE%9E%E7%8E%B0%E5%8F%8C%E5%90%91%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A%E5%81%9A%E6%B3%95"}},[t._v("几种实现双向数据绑定做法")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E4%BA%8C%E3%80%81%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86object-defineproperty"}},[t._v("重新认识Object.defineProperty")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E4%B8%89%E3%80%81%E6%80%9D%E8%B7%AF%E6%95%B4%E7%90%86"}},[t._v("思路整理")])])]),t._v(" "),e("h3",{attrs:{id:"一、几种实现双向数据绑定做法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、几种实现双向数据绑定做法","aria-hidden":"true"}},[t._v("#")]),t._v(" 一、几种实现双向数据绑定做法")]),t._v(" "),e("p",[t._v("目前几种主流的mvc(vm)框架都实现了单向数据绑定，而我所理解的双向数据绑定无非就是在单向绑定的基础上给可输入元素（input、textare等）添加了change(input)事件，来动态修改model和 view，并没有多高深。所以无需太过介怀是实现的单向或双向绑定。")]),t._v(" "),e("p",[t._v("实现数据绑定的做法有大致如下几种：")]),t._v(" "),e("ul",[e("li",[t._v("发布者-订阅者模式（"),e("code",[t._v("backbone.js")]),t._v("）")]),t._v(" "),e("li",[t._v("脏值检查（"),e("code",[t._v("angular.js")]),t._v("）")]),t._v(" "),e("li",[t._v("数据劫持（"),e("code",[t._v("vue.js")]),t._v("）")])]),t._v(" "),e("p",[e("strong",[t._v("发布者-订阅者模式:")]),t._v(" 一般通过sub, pub的方式实现数据和视图的绑定监听，更新数据方式通常做法是 vm.set('property', value)，这里有篇文章讲的比较详细，有兴趣可点"),e("a",{attrs:{href:"http://www.html-js.com/article/Study-of-twoway-data-binding-JavaScript-talk-about-JavaScript-every-day",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("这种方式现在毕竟太low了，我们更希望通过 vm.property = value 这种方式更新数据，同时自动更新视图，于是有了下面两种方式")]),t._v(" "),e("p",[e("strong",[t._v("脏值检查:")]),t._v(" "),e("code",[t._v("angular.js")]),t._v("是通过脏值检测的方式比对数据是否有变更，来决定是否更新视图，最简单的方式就是通过 setInterval() 定时轮询检测数据变动，当然Google不会这么low，angular只有在指定的事件触发时进入脏值检测，大致如下：")]),t._v(" "),e("ul",[e("li",[t._v("DOM事件，譬如用户输入文本，点击按钮等。("),e("code",[t._v("ng-click")]),t._v(")")]),t._v(" "),e("li",[t._v("XHR响应事件 ("),e("code",[t._v("$http")]),t._v(")")]),t._v(" "),e("li",[t._v("浏览器Location变更事件 ("),e("code",[t._v("$location")]),t._v(")")]),t._v(" "),e("li",[t._v("Timer事件("),e("code",[t._v("$timeout")]),t._v(", "),e("code",[t._v("$interval")]),t._v(")")]),t._v(" "),e("li",[t._v("执行 "),e("code",[t._v("$digest()")]),t._v(" 或 "),e("code",[t._v("$apply()")])])]),t._v(" "),e("p",[e("strong",[t._v("数据劫持:")]),t._v(" "),e("code",[t._v("vue.js")]),t._v("则是采用数据劫持结合发布者-订阅者模式的方式，通过Object.defineProperty()来劫持各个属性的"),e("code",[t._v("setter")]),t._v("，"),e("code",[t._v("getter")]),t._v("，在数据变动时发布消息给订阅者，触发相应的监听回调。")]),t._v(" "),e("h3",{attrs:{id:"二、重新认识object-defineproperty"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、重新认识object-defineproperty","aria-hidden":"true"}},[t._v("#")]),t._v(" 二、重新认识Object.defineProperty()")]),t._v(" "),e("p",[e("code",[t._v("Object.defineProperty()")]),t._v("方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性， 并返回这个对象。")]),t._v(" "),e("h4",{attrs:{id:"_2-1-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-参数","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1 参数")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("obj")]),t._v(" 要在其上定义属性。")]),t._v(" "),e("li",[e("code",[t._v("prop")]),t._v("要定义或修改的属性的名称")]),t._v(" "),e("li",[e("code",[t._v("descriptor")]),t._v(" 将被定义或个性的属性描述符。")])]),t._v(" "),e("p",[t._v("属性描述符具有以下可选键值：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("configurable")]),t._v("当且仅当该属性的configurable为true时，该属性描述符才能被改变，同时该属性也能从对应的对象上被删除。默认为false.")]),t._v(" "),e("li",[e("code",[t._v("enumerable")]),t._v(" 当且仅当该属性的"),e("code",[t._v("enumerable")]),t._v("为"),e("code",[t._v("true")]),t._v("时，该属性才能够出现在对象的枚举属性中。"),e("strong",[t._v("默认为false")]),t._v("。")])]),t._v(" "),e("p",[e("strong",[t._v("数据描述符同时具有以下可选键值：")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("value")]),t._v("该属性对应的值。可以是任何有效的 JavaScript 值（数值，对象，函数等）。默认为 undefined。")]),t._v(" "),e("li",[e("code",[t._v("writable")]),t._v("当且仅当该属性的writable为true时，value才能被赋值运算符改变。默认为 false。")])]),t._v(" "),e("p",[e("strong",[t._v("存取描述符同时具有以下可选键值：")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("get")]),t._v("一个给属性提供 "),e("code",[t._v("getter")]),t._v("的方法，如果没有"),e("code",[t._v("getter")]),t._v("则为"),e("code",[t._v("undefined")]),t._v("。该方法返回值被用作属性值。默认为 "),e("code",[t._v("undefined")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("set")]),t._v("一个给属性提供"),e("code",[t._v("setter")]),t._v("的方法，如果没有"),e("code",[t._v("setter")]),t._v("则为"),e("code",[t._v("undefined")]),t._v("。该方法将接受唯一参数，并将该参数的新值分配给该属性。默认为"),e("code",[t._v("undefined")]),t._v("。")])]),t._v(" "),e("p",[e("strong",[t._v("描述符可同时具有键值")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("configurable")]),t._v(" "),e("th",[t._v("enumerable")]),t._v(" "),e("th",[t._v("value")]),t._v(" "),e("th",[t._v("writable")]),t._v(" "),e("th",[t._v("get")]),t._v(" "),e("th",[t._v("set")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("数据描述符")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("No")])]),t._v(" "),e("tr",[e("td",[t._v("存取描述符")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("Yes")]),t._v(" "),e("td",[t._v("No")]),t._v(" "),e("td",[t._v("No")]),t._v(" "),e("td",[t._v("Yes")])])])]),t._v(" "),e("p",[e("strong",[t._v("如果一个描述符不具有value，writable，get和set任意一个关键字，那么它将被认为是一个数据描述符。如果一个描述符同时有(value或writable)和(get或set)关键字，将会产生一个异常。")])]),t._v(" "),e("p",[t._v("示例：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('var o = {}; // 创建一个新对象\n\n// 在对象中添加一个属性与数据描述符的示例\nObject.defineProperty(o, "a", {\n  value : 37,\n  writable : true,\n  enumerable : true,\n  configurable : true\n});\n\n//对象o拥有了属性a，值为37\n\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("p",[t._v("关于"),e("code",[t._v("Object.defineProperty()")]),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty",target:"_blank",rel:"noopener noreferrer"}},[t._v("详细使用请点击这里阅读更多用法"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"三、思路整理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、思路整理","aria-hidden":"true"}},[t._v("#")]),t._v(" 三、思路整理")]),t._v(" "),e("p",[t._v("要实现mvvm的双向绑定，就必须要实现以下几点：")]),t._v(" "),e("ul",[e("li",[t._v("实现一个数据监听器"),e("code",[t._v("Observer")]),t._v("，能够对数据对象的所有属性进行监听，如有变动可拿到最新值并通知订阅者")]),t._v(" "),e("li",[t._v("实现一个指令解析器"),e("code",[t._v("Compile")]),t._v("，对每个元素节点的指令进行扫描和解析，根据指令模板替换以及绑定相应的更新函数。")]),t._v(" "),e("li",[t._v("实现一个"),e("code",[t._v("Watcher")]),t._v("，作为连接"),e("code",[t._v("Observer")]),t._v("和"),e("code",[t._v("Compile")]),t._v("的桥梁，能够订阅并收到每个属性变动的通知，执行指令绑定的相应回调函数，从而更新视图。")]),t._v(" "),e("li",[e("code",[t._v("mvvm")]),t._v("入口函数，整合以上三者")])]),t._v(" "),e("p",[t._v("上述流程如图所示：")]),t._v(" "),e("p",[e("img",{attrs:{src:"vue01.png",alt:"img"}})]),t._v(" "),e("h4",{attrs:{id:"_3-1-实现observer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-实现observer","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.1 实现Observer")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var data={name:'tony'};\nobserve(data);\ndata.name='xiaowuzi';\n\nfunction observe(data){\n\tif(!data || typeof data!=='object') return;\n\t//取出所有属性遍历\n\tObject.keys(data).forEach(function(key){\n\t\tdefineReactive(data,key,data[key]);\n\t});\n}\n\nfunction defineReactive(data,key,val){\n\tobserve(val);\t//监听子属性\n\tObject.defineProperty(data,key,{\n\t\tenumerable:true,\t\t//可枚举\n\t\tconfigurable:false,\t//不能再define\n\t\tget:function(){\n\t\t\treturn val;\n\t\t},\n\t\tset:function(newVal){\n\t\t\tconsole.log('监听到值的变化了',val,'--\x3e',newVal);\n\t\t\tval=newVal;\n\t\t}\n\t});\n\t\n}\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br")])]),e("p",[t._v("这样我们已经可以监听每个数据的变化了，那么监听到变化之后就是怎么通知订阅者了，所以接下来我们需要实现一个消息订阅器，很简单，维护一个数组，用来收集订阅者，数据变动触发"),e("code",[t._v("notify")]),t._v("，再调用订阅者的"),e("code",[t._v("update")]),t._v("方法，代码改善之后是这样：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var data={name:'tony'};\nobserve(data);\ndata.name='xiaowuzi';\n\nfunction observe(data){\n\tif(!data || typeof data!=='object') return;\n\t//取出所有属性遍历\n\tObject.keys(data).forEach(function(key){\n\t\tdefineReactive(data,key,data[key]);\n\t});\n}\n\nfunction defineReactive(data,key,val){\n\tobserve(val);\t//监听子属性\n\tObject.defineProperty(data,key,{\n\t\tenumerable:true,\t\t//可枚举\n\t\tconfigurable:false,\t//不能再define\n\t\tget:function(){\n\t\t\treturn val;\n\t\t},\n\t\tset:function(newVal){\n            if(val === newVal) return;\n\t\t\tconsole.log('监听到值的变化了',val,'--\x3e',newVal);\n\t\t\tval = newVal;\n            dep.notify();   // 通知所有订阅者\n\t\t}\n\t});\n\t\n}\n\nfunction Dep(){\n\tthis.subs=[];\n}\n\nDep.prototype={\n\taddSub:function(sub){\n\t\tthis.subs.push(sub);\n\t},\n\tnotify:function(){\n\t\tthis.subs.forEach(function(sub){\n\t\t\tsub.update();\n\t\t});\n\t}\n};\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br")])]),e("p",[t._v("上面的思路整理中我们已经明确订阅者应该是"),e("code",[t._v("Watcher")]),t._v(", 而且"),e("code",[t._v("var dep = new Dep();")]),t._v("是在"),e("code",[t._v("defineReactive")]),t._v("方法内部定义的，所以想通过"),e("code",[t._v("dep")]),t._v("添加订阅者，就必须要在闭包内操作，所以我们可以在"),e("code",[t._v("getter")]),t._v("里面动手脚：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var data={name:'tony'};\nobserve(data);\ndata.name='xiaowuzi';\n\nfunction observe(data){\n\tif(!data || typeof data!=='object') return;\n\t//取出所有属性遍历\n\tObject.keys(data).forEach(function(key){\n\t\tdefineReactive(data,key,data[key]);\n\t});\n}\n\nfunction defineReactive(data,key,val){\n\tobserve(val);\t//监听子属性\n\tObject.defineProperty(data,key,{\n\t\tenumerable:true,\t\t//可枚举\n\t\tconfigurable:false,\t//不能再define\n\t\tget:function(){\n\t\t\t//由于需要在装饰内添加watcher，所以通过Dep定义一个全局target属性，暂存watcher，添加完移除\n\t\t\tDep.target && dep.addDep(Dep.target);\n\t\t\treturn val;\n\t\t},\n\t\tset:function(newVal){\n\t\t\tconsole.log('监听到值的变化了',val,'--\x3e',newVal);\n\t\t\tval = newVal;\n\t\t}\n\t});\n\t\n}\n\nfunction Dep(){\n\tthis.subs=[];\n}\n\nDep.prototype={\n\taddSub:function(sub){\n\t\tthis.subs.push(sub);\n\t},\n\tnotify:function(){\n\t\tthis.subs.forEach(function(sub){\n\t\t\tsub.update();\n\t\t});\n\t}\n};\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br")])]),e("p",[t._v("这里已经实现了一个"),e("code",[t._v("Observer")]),t._v("了，已经具备了监听数据和数据变化通知订阅者的功能。")]),t._v(" "),e("h4",{attrs:{id:"_3-2-实现compile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-实现compile","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.2 实现Compile")]),t._v(" "),e("p",[e("code",[t._v("compile")]),t._v("主要做的事情是解析模板指令，将模板中的变量替换成数据，然后初始化渲染页面视图，并将每个指令对应的节点绑定更新函数，添加监听数据的订阅者，一旦数据有变动，收到通知，更新视图，如图所示：")]),t._v(" "),e("p",[e("img",{attrs:{src:"vue02.png",alt:"image"}})]),t._v(" "),e("p",[t._v("因为遍历解析的过程有多次操作"),e("code",[t._v("dom")]),t._v("节点，为提高性能和效率，会先将跟节点"),e("code",[t._v("el")]),t._v("转换成文档碎片"),e("code",[t._v("fragment")]),t._v("进行解析编译操作，解析完成，再将"),e("code",[t._v("fragment")]),t._v("添加回原来的真实"),e("code",[t._v("dom")]),t._v("节点中")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("function Compile(el){\n\tthis.$el=this.isElementNode(el)? el : document.querySelector(el);\n\tif(this.$el){\n\t\tthis.$fragment=this.node2Fragment(this.$el);\n\t\tthis.init();\n\t\tthis.$el.appendChild(this.$fragment);\n\t}\n}\nCompile.prototype = {\n\tinit:function(){this.compileElement(this.$fragment);},\n\tnode2Fragment:function(el){\n\t\tvar fragment=document.createDocumentFragment(),child;\n\t\t//将原生节点拷贝到fragment\n\t\twhile(child==el.firstChild){\n\t\t\tfragment.appendChild(child);\n\t\t}\n\t\treturn;\n\t}\n}\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[e("code",[t._v("compileElement")]),t._v("方法将遍历所有节点及其子节点，进行扫描解析编译，调用对应的指令渲染函数进行数据渲染，并调用对应的指令更新函数进行绑定，详看代码及注释说明：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("function Compile(el){\n\tthis.$el=this.isElementNode(el)?el:document.querySelector(el);\n\tif(this.$el){\n\t\tthis.$fragment=this.node2Fragment(this.$el);\n\t\tthis.init();\n\t\tthis.$el.appendChild(this.$fragment);\n\t}\n}\nCompile.prototype={\n\tinit:function(){this.compileElement(this.$fragment);},\n\tnode2Fragment:function(el){\n\t\tvar fragment=document.createDocumentFragment(),child;\n\t\t//将原生节点拷贝到fragment\n\t\twhile(child==el.firstChild){\n\t\t\tfragment.appendChild(child);\n\t\t}\n\t\treturn;\n\t}\n\tcompileElement:function(el){\n\t\tvar childNodes=el.childNodes,me=this;\n\t[].slice.call(childNodes).forEach(function(node){\n\t\t\tvar text=node.textContent;\n\t\t\tvar reg=/\\{(.*)\\}\\}/;\t//表达式文本\n\t\t\t//按元素节点方式编译\n\t\t\tif(me.isElementNode(node)){\n\t\t\t\tme.compile(node);\n\t\t\t}else if(me.isTextNode(node) && reg.test(text)){\n\t\t\t\tme.compileText(node,RegExp.$1);\n\t\t\t}\n\t\t\t//遍历编译子节点\n\t\t\tif(node.childNodes && node.childNodes.length){\n\t\t\t\tme.compileElement(node);\n\t\t\t}\n\t\t});\n\t},\n\tcompile:function(node){\n\t\tvar nodeAttrs=node.attributes,me=this;\n\t\t[].slice.call(nodeAttrs).forEach(function(attr){\n\t\t//规定：指令v-xx命名\n\t\t//如<span v-text=\"content\"></span>中指令为v-text\n\t\t\tvar attrName=attr.name;\t//v-text\n\t\t\tif(me.isDirective(attrName)){\n\t\t\t\tvar exp=attr.value;\n\t\t\t\tvar dir=attrName.substring(2);\n\t\t\t\tif(me.isEventDirective(dir)){\n\t\t\t\t\t//事件指令，如v-on:click\n\t\t\t\t\tcompileUtil.eventHandler(node,me.$vm,exp,dir);\n\t\t\t\t}else{\n\t\t\t\t\t//普通指令\n\t\t\t\t\tcompileUtil[dir] && compileUtil[dir](node,me.$vm,exp);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\n//指令处理集合\nvar compileUtil={\n\ttext:function(node,vm,exp){\n\t\tthis.bind(node,vm,exp,'text');\n\t},\n\tbind:function(node,vm,exp,dir){\n\t\tvar updateFn=updater[dir+'Updater'];\n\t\t//第一次初始化视图\n\t\tupdateFn && updateFn(node,vm[exp]);\n\t\t//实例化订阅者，此操作会在对应的属性消息订阅器中添加了该订阅者watcher\n\t\tnew Watcher(vm,exp,function(value,oldVale){\n\t\t\t//一旦属性值有变化，会收到通知执行此更新函数，更新视图\n\t\t\tupdateFn && updateFn(node,value,oldValue);\n\t\t});\n\t},\n\t\n}\n\n//更新函数\nvar updater={\n\ttextUpdater:function(node,value){\n\t\tnode.textContent=typeof value=='undefined'?'':value;\n\t}\n}\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br"),e("span",{staticClass:"line-number"},[t._v("70")]),e("br"),e("span",{staticClass:"line-number"},[t._v("71")]),e("br"),e("span",{staticClass:"line-number"},[t._v("72")]),e("br"),e("span",{staticClass:"line-number"},[t._v("73")]),e("br"),e("span",{staticClass:"line-number"},[t._v("74")]),e("br"),e("span",{staticClass:"line-number"},[t._v("75")]),e("br"),e("span",{staticClass:"line-number"},[t._v("76")]),e("br"),e("span",{staticClass:"line-number"},[t._v("77")]),e("br"),e("span",{staticClass:"line-number"},[t._v("78")]),e("br"),e("span",{staticClass:"line-number"},[t._v("79")]),e("br"),e("span",{staticClass:"line-number"},[t._v("80")]),e("br")])]),e("p",[t._v("这里通过递归遍历保证了每个节点及子节点都会解析编译到，包括了双括号表达式声明的文本节点。指令的声明规定是通过特定前缀的节点属性来标记，如"),e("code",[t._v('<span v-text="content" other-attr')]),t._v("中"),e("code",[t._v("v-text")]),t._v("便是指令，而"),e("code",[t._v("other-attr")]),t._v("不是指令，只是普通的属性。")]),t._v(" "),e("p",[t._v("监听数据、绑定更新函数的处理是在"),e("code",[t._v("compileUtil.bind()")]),t._v("这个方法中，通过"),e("code",[t._v("new Watcher()")]),t._v("添加回调来接收数据变化的通知")]),t._v(" "),e("h4",{attrs:{id:"_3-3-实现watcher"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-实现watcher","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.3 实现Watcher")]),t._v(" "),e("p",[t._v("Watcher订阅者作为Observer和Compile之间通信的桥梁，主要做的事情是:")]),t._v(" "),e("ol",[e("li",[t._v("在自身实例化时往属性订阅器(dep)里面添加自己")]),t._v(" "),e("li",[t._v("自身必须有一个update()方法")]),t._v(" "),e("li",[t._v("待属性变动dep.notice()通知时，能调用自身的update()方法，并触发Compile中绑定的回调，则功成身退。")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("function Watcher(vm,exp,cb){\n\tthis.cb=cb;\n\tthis.vm=vm;\n\tthis.exp=exp;\n\t//此处为了触发属性的getter，从而在dep添加自己，结合Observer更易理解\n\tthis.value=this.get();\n}\n\nWatcher.prototype={\n\tupdate:function(){\n\t\tthis.run();\t//属性值变化收到通知\n\t},\n\trun:function(){\n\t\tvar value=this.get(); // 取到最新值\n\t\tvar oldVal=this.value;\n\t\tif(value!==oldVal){\n\t\t\tthis.value=value;\n\t\t\tthis.cb.call(this.vm,value,oldVal); // 执行Compile中绑定的回调，更新视图\n\t\t}\n\t},\n\tget:function(){\n\t\tDep.target=this;// 将当前订阅者指向自己\n\t\tvar value=this.vm[exp];// 触发getter，添加自己到属性订阅器中\n\t\tDep.target=null; // 添加完毕，重置\n\t\treturn value;\n\t}\n};\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br")])]),e("p",[t._v("实例化"),e("code",[t._v("Watcher")]),t._v("的时候，调用"),e("code",[t._v("get()")]),t._v("方法，通过"),e("code",[t._v("Dep.target = watcherInstance")]),t._v("标记订阅者是当前"),e("code",[t._v("watcher")]),t._v("实例，强行触发属性定义的"),e("code",[t._v("getter")]),t._v("方法，"),e("code",[t._v("getter")]),t._v("方法执行的时候，就会在属性的订阅器"),e("code",[t._v("dep")]),t._v("添加当前"),e("code",[t._v("watcher")]),t._v("实例，从而在属性值有变化的时候，"),e("code",[t._v("watcherInstance")]),t._v("就能收到更新通知。")]),t._v(" "),e("h4",{attrs:{id:"_3-4-实现mvvm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-实现mvvm","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.4 实现MVVM")]),t._v(" "),e("p",[t._v("MVVM作为数据绑定的入口，整合Observer、Compile和Watcher三者，通过Observer来监听自己的model数据变化，通过Compile来解析编译模板指令，最终利用Watcher搭起Observer和Compile之间的通信桥梁，达到数据变化 -> 视图更新；视图交互变化(input) -> 数据model变更的双向绑定效果。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("function MVVM(options){\n\tthis.$options=options;\n\tvar data=this._data=this.$options.data;\n\tobserve(data,this);\n\tthis.$compile=new Compile(optiosn.el || document.body,this);\n}\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v("但是这里有个问题，从代码中可看出监听的数据对象是options.data，每次需要更新视图，则必须通过"),e("code",[t._v("var vm = new MVVM({data:{name: 'kindeng'}}); vm._data.name = 'dmq';")]),t._v(" 这样的方式来改变数据。")]),t._v(" "),e("p",[t._v("显然不符合我们一开始的期望，我们所期望的调用方式应用是这样的："),e("code",[t._v("var vm = new MVVM({data: {name: 'kindeng'}}); vm.name = 'dmq';")])]),t._v(" "),e("p",[t._v("所以这里需要给MVVM实例添加一个属性代理的方法，使访问vm的属性代理为访问vm._data的属性，改造后的代码如下：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("function MVVM(options){\n\tthis.$options=options;\n\tvar data=this._data=this.$options.data,me=this;\n\t//属性代理，实现 vm.xxx->vm._data.xxx\n\tObject.keys(data).forEach(function(key){\n\t\tme._proxy(key);\n\t});\n\tobserve(data,this);\n\tthis.$compile=new Compile(options.el || document.body,this);\n\t\n}\nMVVM.prototye={\n\t_proxy:function(key){\n\t\tvar me=this;\n\t\t_proxy:function(key){\n\t\t\tconfigurable:false,\n\t\t\tenumerable:true,\n\t\t\tget:function proxyGetter(){\n\t\t\t\treturn me._data[key];\n\t\t\t},\n\t\t\tset:function proxySetter(newVal){\n\t\t\t\tme._data[key]=newVal;\n\t\t\t}\n\t\t}\n\t}\n};\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br")])]),e("p",[t._v("这里主要还是利用"),e("code",[t._v("Object.definedProperty()")]),t._v("这个方法来支持了vm实例对象的属性的读写权，使读写vm实例的属性转成读写了"),e("code",[t._v("vm._data")]),t._v("的属性值，达到鱼目混珠的效果")]),t._v(" "),e("p",[t._v("至此，全部模块和功能已经完成了，如本文开头所承诺的两点。一个简单的MVVM模块已经实现，其思想和原理大部分来自经过简化改造的vue"),e("a",{attrs:{href:"https://github.com/vuejs/vue",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码"),e("OutboundLink")],1),t._v("，猛戳"),e("a",{attrs:{href:"https://github.com/DMQ/mvvm",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),e("OutboundLink")],1),t._v("可以看到本文的所有相关代码。")]),t._v(" "),e("h3",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://www.cnblogs.com/kidney/p/6052935.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue.js双向绑定的实现原理"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://segmentfault.com/a/1190000006599500",target:"_blank",rel:"noopener noreferrer"}},[t._v("剖析Vue原理&实现双向绑定MVVM"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/DDFE/DDFE-blog/issues/7",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入响应式原理"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"联系作者"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#联系作者","aria-hidden":"true"}},[t._v("#")]),t._v(" 联系作者")]),t._v(" "),e("div",{attrs:{align:"center"}},[e("p",[t._v("\n        平凡世界，贵在坚持。\n    ")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);n.default=a.exports}}]);