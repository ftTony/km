(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{257:function(v,t,a){"use strict";a.r(t);var _=a(4),s=Object(_.a)({},(function(){var v=this,t=v.$createElement,a=v._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h1",{attrs:{id:"表达式与运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表达式与运算符","aria-hidden":"true"}},[v._v("#")]),v._v(" 表达式与运算符")]),v._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),a("p",[v._v("本人平时学习及收集内容，欢迎参入一起讨论。")]),v._v(" "),a("h2",{attrs:{id:"内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内容","aria-hidden":"true"}},[v._v("#")]),v._v(" 内容")]),v._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E4%B8%80%E3%80%81%E5%8E%9F%E5%A7%8B%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[v._v("原始表达式")])]),v._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BA%8C%E3%80%81%E5%AF%B9%E8%B1%A1%E5%92%8C%E6%95%B0%E7%BB%84%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[v._v("对象和数组的初始化表达式")])]),v._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B8%89%E3%80%81%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[v._v("函数定义表达式")])]),v._v(" "),a("li",[a("a",{attrs:{href:"#%E5%9B%9B%E3%80%81%E5%B1%9E%E6%80%A7%E8%AE%BF%E9%97%AE%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[v._v("属性访问表达式")])]),v._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BA%94%E3%80%81%E8%B0%83%E7%94%A8%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[v._v("调用表达式")])]),v._v(" "),a("li",[a("a",{attrs:{href:"#%E5%85%AD%E3%80%81%E5%AF%B9%E8%B1%A1%E5%88%9B%E5%BB%BA%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[v._v("对象创建表达式")])]),v._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B8%83%E3%80%81%E4%B8%80%E5%85%83%E6%93%8D%E4%BD%9C%E7%AC%A6"}},[v._v("一元操作符")])]),v._v(" "),a("li",[a("a",{attrs:{href:"#%E5%85%AB%E3%80%81%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6"}},[v._v("算术运算符")])]),v._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B9%9D%E3%80%81%E5%85%B3%E7%B3%BB%E6%93%8D%E4%BD%9C%E7%AC%A6"}},[v._v("关系操作符")])]),v._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8D%81%E3%80%81%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6"}},[v._v("逻辑运算符")])]),v._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8D%81%E4%B8%80%E3%80%81%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6"}},[v._v("赋值运算符")])]),v._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8D%81%E4%BA%8C%E3%80%81%E4%B8%89%E5%85%83%E8%BF%90%E7%AE%97%E7%AC%A6"}},[v._v("三元运算符")])]),v._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8D%81%E4%B8%89%E3%80%81%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6"}},[v._v("位运算符")])]),v._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8D%81%E5%9B%9B%E3%80%81%E8%BF%90%E7%AE%97%E4%BC%98%E5%85%88%E7%BA%A7"}},[v._v("运算优先级")])])]),v._v(" "),a("h3",{attrs:{id:"一、原始表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、原始表达式","aria-hidden":"true"}},[v._v("#")]),v._v(" 一、原始表达式")]),v._v(" "),a("p",[v._v("javascript中的原始表达式包含"),a("em",[v._v("常量")]),v._v("或"),a("em",[v._v("直接量")]),v._v("、"),a("em",[v._v("关键字")]),v._v("和"),a("em",[v._v("变量")]),v._v("。")]),v._v(" "),a("p",[a("em",[v._v("直接量")])]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v('1.23  // 数字直接量\n"hello" // 字符串直接量\n/pattern/   // 正则表达式直接量\n\n')])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br"),a("span",{staticClass:"line-number"},[v._v("4")]),a("br")])]),a("p",[a("em",[v._v("关键字")])]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("true    //  返回一个布尔值：真\nfalse   // 返回一个布尔值：假\nnull    // 返回一个值：空\nthis    // 返回“当前”对象\n\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br"),a("span",{staticClass:"line-number"},[v._v("4")]),a("br"),a("span",{staticClass:"line-number"},[v._v("5")]),a("br")])]),a("p",[a("em",[v._v("变量")])]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("i   // 返回变量i的值\nsum // 返回sum的值\nundefined   // undefined是全局变量，和null不同，它不是一个关键字\n\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br"),a("span",{staticClass:"line-number"},[v._v("4")]),a("br")])]),a("h3",{attrs:{id:"二、对象和数组的初始化表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、对象和数组的初始化表达式","aria-hidden":"true"}},[v._v("#")]),v._v(" 二、对象和数组的初始化表达式")]),v._v(" "),a("p",[a("em",[v._v("数组")])]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("\n[]  //一个空数组：[]内留空即表示该数组没有任何元素\n[1+2,3+4]   // 拥有两个元素的数组，第一个是3，第二个是7\n\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br"),a("span",{staticClass:"line-number"},[v._v("4")]),a("br")])]),a("p",[a("em",[v._v("对象")])]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("var p={x:2.3,y:-2.3};\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("h3",{attrs:{id:"三、函数定义表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、函数定义表达式","aria-hidden":"true"}},[v._v("#")]),v._v(" 三、函数定义表达式")]),v._v(" "),a("p",[v._v("关于函数，后续有更详细的文章介绍")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("var square=function(x){return x*x;}\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("h3",{attrs:{id:"四、属性访问表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、属性访问表达式","aria-hidden":"true"}},[v._v("#")]),v._v(" 四、属性访问表达式")]),v._v(" "),a("p",[v._v("属性访问表达式运算得到一个对象属性或一个数组元素的值。")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("var o={x:1,y:{z:3}};     // 一个示例对象\nvar o={x:1,y:{z:3}};    // 一个包含这个对象的示例数组\no.x     // =>1:表达式o的x属性\no.y.z   // =>3:表达式o.y的z属性\no['x']  // =>1:对象o的x属性\na[1]    // =>4:表达式a中索引为1的元素\na[2]['1']  // =>6:表达式a[2]中索引为1的元素\na[0].x      // =>1:表达式a[0]的x属性\n\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br"),a("span",{staticClass:"line-number"},[v._v("4")]),a("br"),a("span",{staticClass:"line-number"},[v._v("5")]),a("br"),a("span",{staticClass:"line-number"},[v._v("6")]),a("br"),a("span",{staticClass:"line-number"},[v._v("7")]),a("br"),a("span",{staticClass:"line-number"},[v._v("8")]),a("br"),a("span",{staticClass:"line-number"},[v._v("9")]),a("br")])]),a("h3",{attrs:{id:"五、调用表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、调用表达式","aria-hidden":"true"}},[v._v("#")]),v._v(" 五、调用表达式")]),v._v(" "),a("p",[v._v("javascript中的调用表达式是一种调用函数或方法的语法表示。函数表达式后跟随一对圆括号，括号内是一个以逗号隔开的参数列表。")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("f(0)       // f是一个函数表达式，0是一个参数表达式\nmath.max(x,y,z)     //math.max是一个函数；x,y和z是参数\na.sort()    // a.sort是一个函数，它没有参数\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br")])]),a("h3",{attrs:{id:"六、对象创建表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、对象创建表达式","aria-hidden":"true"}},[v._v("#")]),v._v(" 六、对象创建表达式")]),v._v(" "),a("p",[v._v("对象创建表达式创建不念旧恶对象并调用一个函数初始化新对象的属性。")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("new Object()\nnew Object(2,3)\n\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br")])]),a("h3",{attrs:{id:"七、一元操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七、一元操作符","aria-hidden":"true"}},[v._v("#")]),v._v(" 七、一元操作符")]),v._v(" "),a("p",[v._v("只能操作一个值的操作叫做一元操作符。")]),v._v(" "),a("h4",{attrs:{id:"_7-1-递增和递减操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-递增和递减操作符","aria-hidden":"true"}},[v._v("#")]),v._v(" 7.1 递增和递减操作符")]),v._v(" "),a("p",[v._v("递增和递减，各有两个版本：前置型和后置型。")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("    var n = 123;\n    n++  //把变量累加1，相当于n = n + 1\n    ++n  //把变量累加1，相当于n = n + 1\n    n--  //把变量累减1，相当于n = n - 1\n    --n  //把变量累减1，相当于n = n - 1\n\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br"),a("span",{staticClass:"line-number"},[v._v("4")]),a("br"),a("span",{staticClass:"line-number"},[v._v("5")]),a("br"),a("span",{staticClass:"line-number"},[v._v("6")]),a("br")])]),a("p",[v._v("递增和递减操作符遵循下列规则：")]),v._v(" "),a("ol",[a("li",[v._v("在应用于一个包含有效数字字符的字符串时，先将其为数字值，再执行加减1的操作。字符串变量变成数值变量。")]),v._v(" "),a("li",[v._v("在应用一个不包含有效数字字符的符串时，将变量的值设置为NaN。字符串变量变成数值变量。")]),v._v(" "),a("li",[v._v("在应用于布尔值false时，先将其转换为0再执行加减1的操作。布尔值变量变成数值变量。")]),v._v(" "),a("li",[v._v("在应用于布尔值true时，先将其转换为1再执行加减1的操作。布尔值变量变成数值变量。")]),v._v(" "),a("li",[v._v("在应用于浮点数值时，执行加减1的操作。")]),v._v(" "),a("li",[v._v("在应用于对象时，先调用对象的valueof()方法以取得一个可供操作的值。对象变量变成数值变量。")])]),v._v(" "),a("h4",{attrs:{id:"_7-2-一元加和减操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-一元加和减操作符","aria-hidden":"true"}},[v._v("#")]),v._v(" 7.2 一元加和减操作符")]),v._v(" "),a("p",[v._v("主要用于类型转换")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v('var s1="01";\nvar s2="1.1";\nvar s3="z";\nvar b=false;\nvar f=1.1;\nvar o={\n    valueOf:function(){\n        return -1;\n    }\n}\n\ns1=+s1;     // 值变成数值1\ns2=+s2;     // 值变成数值1.1\ns3=+s3;     // 值变成NaN\nb=+b;       // 值变成数值0\nf=+f;       // 值未变，仍然是1.1\no=+o;       // 值变成数值-1\n\n')])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br"),a("span",{staticClass:"line-number"},[v._v("4")]),a("br"),a("span",{staticClass:"line-number"},[v._v("5")]),a("br"),a("span",{staticClass:"line-number"},[v._v("6")]),a("br"),a("span",{staticClass:"line-number"},[v._v("7")]),a("br"),a("span",{staticClass:"line-number"},[v._v("8")]),a("br"),a("span",{staticClass:"line-number"},[v._v("9")]),a("br"),a("span",{staticClass:"line-number"},[v._v("10")]),a("br"),a("span",{staticClass:"line-number"},[v._v("11")]),a("br"),a("span",{staticClass:"line-number"},[v._v("12")]),a("br"),a("span",{staticClass:"line-number"},[v._v("13")]),a("br"),a("span",{staticClass:"line-number"},[v._v("14")]),a("br"),a("span",{staticClass:"line-number"},[v._v("15")]),a("br"),a("span",{staticClass:"line-number"},[v._v("16")]),a("br"),a("span",{staticClass:"line-number"},[v._v("17")]),a("br"),a("span",{staticClass:"line-number"},[v._v("18")]),a("br")])]),a("h3",{attrs:{id:"八、算术运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八、算术运算符","aria-hidden":"true"}},[v._v("#")]),v._v(" 八、算术运算符")]),v._v(" "),a("h4",{attrs:{id:"_8-1-乘法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-乘法","aria-hidden":"true"}},[v._v("#")]),v._v(" 8.1 乘法")]),v._v(" "),a("p",[v._v("乘法操作符由一个星号（*）表示，用于计算两个数值的乘积。")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("    var result=34*56;\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("乘法操作符遵循下列特殊的规则：")]),v._v(" "),a("ol",[a("li",[v._v("如果操作数都是数值，执行常规乘法计算，即两个正数或两个负数相乘的结果还是正数，而如果只有一个操作数有符号，那么结果就是负数。如果乘积超过了ECMAScript数值的表示范围，则返回Infinity或-Infinity;")]),v._v(" "),a("li",[v._v("如果有一个操作数是NaN，则结果是NaN;")]),v._v(" "),a("li",[v._v("如果是Infinity与0相乘，则结果是NaN;")]),v._v(" "),a("li",[v._v("如果是Infinity与非0数值相乘，则结果是Infinity或-Infinity，取决于有符号操作的符号")]),v._v(" "),a("li",[v._v("如果Infinity与Infinity相乘，则结果是Infinity；")]),v._v(" "),a("li",[v._v("如果有一个操作数不是数值，则在后台调用Number()将其转换为数值，然后再应用上面的规则。")])]),v._v(" "),a("h4",{attrs:{id:"_8-2-加法操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-加法操作符","aria-hidden":"true"}},[v._v("#")]),v._v(" 8.2 加法操作符")]),v._v(" "),a("p",[v._v("加法操作符的用法如下所示：")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("var result=1+2;\n\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br")])]),a("p",[v._v("如果两个操作符都是数值，执行常规的加法计算，然后根据下列规则返回结果：")]),v._v(" "),a("ol",[a("li",[v._v("如果有一个操作数是NaN,则结果是NaN;")]),v._v(" "),a("li",[v._v("如果是Infinity加Infinity，则结果是Infinity;")]),v._v(" "),a("li",[v._v("如果是-Infinity加-Infinity，则结果是-Infinity;")]),v._v(" "),a("li",[v._v("如果是Infinity加-Infinity，则结果是NaN;")]),v._v(" "),a("li",[v._v("如果是+0加+0，则结果是+0;")]),v._v(" "),a("li",[v._v("如果是-0加-0，则结果是-0;")]),v._v(" "),a("li",[v._v("如果是+0加-0，则结果是+0;")]),v._v(" "),a("li",[v._v("如果两个操作数是字符串，则将第二个操作数与第一个操作数拼接起来；")]),v._v(" "),a("li",[v._v("如果只有一个操作数是字符串，则将另一个操作数转换为字符串，然后再将两个字符串拼接起来")])]),v._v(" "),a("h4",{attrs:{id:"_8-3-减法操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-减法操作符","aria-hidden":"true"}},[v._v("#")]),v._v(" 8.3 减法操作符")]),v._v(" "),a("p",[v._v("减法操作符的用法如下所示：")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("var result=2-1;\n\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br")])]),a("p",[v._v("减法操作符遵循下列特殊的规则：")]),v._v(" "),a("ol",[a("li",[v._v("如果两个操作符都是数值，则执行常规的自述减法操作并返回结果；")]),v._v(" "),a("li",[v._v("如果有一个操作数是NaN,则结果是NaN;")]),v._v(" "),a("li",[v._v("如果是Infinity减Infinity，则结果是NaN;")]),v._v(" "),a("li",[v._v("如果是-Infinity减-Infinity，则结果是NaN;")]),v._v(" "),a("li",[v._v("如果是Infinity减-Infinity，则结果是Infinity;")]),v._v(" "),a("li",[v._v("如果是+0减+0，则结果是+0;")]),v._v(" "),a("li",[v._v("如果是-0减-0，则结果是+0;")]),v._v(" "),a("li",[v._v("如果是+0加-0，则结果是-0;")]),v._v(" "),a("li",[v._v("如果有一个操作数是字符串，布尔值、null或undefined，则先在后台调用Number()函数将其换为数值，然后再根据前面的规则执行减法计算。如果转换的结果是NaN，则减法的结果就是NaN;")]),v._v(" "),a("li",[v._v("如果有一个操作数是对象，则调用对象的valueOf()方法以取得表示该对象的数值。如果得到的值是NaN，则减法的结果就是NaN。如果对象没有valueOf()方法，则调用其toString()方法并将得到的字符串转换为数值。")])]),v._v(" "),a("h4",{attrs:{id:"_8-4-除法操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-除法操作符","aria-hidden":"true"}},[v._v("#")]),v._v(" 8.4 除法操作符")]),v._v(" "),a("p",[v._v("除法操作符由一个斜线符号（/）表示，执行第二个操作数除第一个操作数的计算。")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("\nvar result=66/11;\n\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br")])]),a("p",[v._v("除法操作符遵循下列特殊的规则：")]),v._v(" "),a("ol",[a("li",[v._v("如果操作数都是数值，执行常规除法计算，即两个正数或两个负数相除的结果还是正数，而如果只有一个操作数有符号，那么结果就是负数。如果乘积超过了ECMAScript数值的表示范围，则返回Infinity或-Infinity;")]),v._v(" "),a("li",[v._v("如果有一个操作数是NaN，则结果是NaN;")]),v._v(" "),a("li",[v._v("如果是Infinity被Infinity除，则结果是NaN;")]),v._v(" "),a("li",[v._v("如果是0被0除，则结果是NaN;")]),v._v(" "),a("li",[v._v("如果是非0的有限数被0除，则结果是Infinity或-Infinity，取决于有符号操作数的符号；")]),v._v(" "),a("li",[v._v("如果是Infinity被任何非0数值除，则结果是Infinity或-Infinity，取决于有符号操作数的符号；")]),v._v(" "),a("li",[v._v("如果有一个操作数不是数值，则在后台调用Number()将其转换为数值，然后再应用上面的规则")])]),v._v(" "),a("h4",{attrs:{id:"_8-5-求模操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-求模操作符","aria-hidden":"true"}},[v._v("#")]),v._v(" 8.5 求模操作符")]),v._v(" "),a("p",[v._v("求模操作符由一个百分号（%）表示")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("\nvar result=26%5;    // 等于1\n\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br")])]),a("p",[v._v("求模操作符遵循下列特殊的规则：")]),v._v(" "),a("ol",[a("li",[v._v("如果操作数都是数值，执行常规的除法计算，返回除得的余数；")]),v._v(" "),a("li",[v._v("如果被除数是无穷大值而除数是有限大的数值，则结果是NaN;")]),v._v(" "),a("li",[v._v("如果被除数是有限大的数值而除数是0，则结果NaN;")]),v._v(" "),a("li",[v._v("如果是Infinity被Infinity除，则结果是NaN;")]),v._v(" "),a("li",[v._v("如果被除数是有限大的数值，而除数是无穷大的数值，则结果是被除数；")]),v._v(" "),a("li",[v._v("如果被除数是0，则结果是0；")]),v._v(" "),a("li",[v._v("如果有一个操作数不是数值，则在后台调用Number()将期转换为数值，然后再应用上面的规则；")])]),v._v(" "),a("h3",{attrs:{id:"九、关系操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#九、关系操作符","aria-hidden":"true"}},[v._v("#")]),v._v(" 九、关系操作符")]),v._v(" "),a("p",[v._v("用于比较的运算符称作为关系运算符：小于 "),a("code",[v._v("<")]),v._v("、大于 "),a("code",[v._v(">")]),v._v("、小于等于 "),a("code",[v._v("<=")]),v._v("、大于等于 "),a("code",[v._v(">=")]),v._v("、相等 "),a("code",[v._v("==")]),v._v("、不等 "),a("code",[v._v("!=")]),v._v("、全等(恒等) "),a("code",[v._v("===")]),v._v("、不全等(不恒等) "),a("code",[v._v("!==")])]),v._v(" "),a("p",[v._v("关系操作符遵循下列特殊的规则：")]),v._v(" "),a("ol",[a("li",[v._v("如果两个操作数都是数值，则执行数值比较。")]),v._v(" "),a("li",[v._v("如果两个操作数都是字符串，则比较两个字符串对应的字符编码值。")]),v._v(" "),a("li",[v._v("如果一个操作数是数值，则将另一个操作数转换为一个数值，然后执行数值比较。")]),v._v(" "),a("li",[v._v("如果一个操作数是对象，则调用这个对象的valueOf()方法，用得到的结果按照前面的规则执行比较。如果没有valueOf()方法，则调用toString()方法，并用得到的结果根据前面的规则执行比较。")]),v._v(" "),a("li",[v._v("如果一个操作数是布尔值，则先将其转换为数值，然后再执行比较。")])]),v._v(" "),a("p",[v._v("在相等和不等的比较上，如果操作数是非数值，则遵循一下规则：")]),v._v(" "),a("ol",[a("li",[v._v("一个操作数是布尔值，则比较之前将其转换为数值，false 转成 0，true 转成 1；")]),v._v(" "),a("li",[v._v("一个操作数是字符串，则比较之前将其转成为数值再比较；")]),v._v(" "),a("li",[v._v("一个操作数是对象，则先调用 valueOf() 或 toString() 方法后再和返回值比较；\n不需要任何转换的情况下，null 和 undefined 是相等的；")]),v._v(" "),a("li",[v._v("一个操作数是 NaN，则 == 返回 false，!= 返回 true；并且 NaN 和自身不等；\n两个操作数都是对象，则比较他们是否是同一个对象，如果都指向同一个对象，则返回 true，否则返回 false；")]),v._v(" "),a("li",[v._v("在全等和全不等的判断上，只有值和类型都相等，才返回 true，否则返回 false。")]),v._v(" "),a("li",[v._v("如果两个操作数都是对象，则比较它们是不是同一个对象。如果两个操作数都是指向同一个对象，则相等操作符返回true；否则，返回false")])]),v._v(" "),a("h3",{attrs:{id:"十、逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十、逻辑运算符","aria-hidden":"true"}},[v._v("#")]),v._v(" 十、逻辑运算符")]),v._v(" "),a("p",[v._v("逻辑运算符通常用于布尔值的操作，一般和关系运算符配合使用，有三个逻辑运算符：")]),v._v(" "),a("ol",[a("li",[v._v("逻辑与(AND):&&")]),v._v(" "),a("li",[v._v("逻辑或(AND):||")]),v._v(" "),a("li",[v._v("逻辑非(NOT):!")])]),v._v(" "),a("p",[a("em",[v._v("逻辑非操作符")]),v._v("遵循下列规则：")]),v._v(" "),a("ul",[a("li",[v._v("如果操作数是一个对象，返回false;")]),v._v(" "),a("li",[v._v("如果操作数是一空子字符串，返回true;")]),v._v(" "),a("li",[v._v("如果操作数是一个非空字符串，返回false;")]),v._v(" "),a("li",[v._v("如果操作数是数值0，返回true;")]),v._v(" "),a("li",[v._v("如果操作数是任意非0数值（包括Infinity），返回false;")]),v._v(" "),a("li",[v._v("如果操作数是null，返回true;")]),v._v(" "),a("li",[v._v("如果操作数是NaN，返回true;")]),v._v(" "),a("li",[v._v("如果操作数是undefined，返回true;")])]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("var tony = !(123 > 12); //false\nvar tony = !{}; //false\nvar tony = !''; //true\nvar tony = !'xzavier'; //false\nvar tony = !0; //true\nvar tony = !123; //false\nvar tony = !null; //true\nvar tony = !NaN; //true\nvar tony = !undefined; //true\n\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br"),a("span",{staticClass:"line-number"},[v._v("4")]),a("br"),a("span",{staticClass:"line-number"},[v._v("5")]),a("br"),a("span",{staticClass:"line-number"},[v._v("6")]),a("br"),a("span",{staticClass:"line-number"},[v._v("7")]),a("br"),a("span",{staticClass:"line-number"},[v._v("8")]),a("br"),a("span",{staticClass:"line-number"},[v._v("9")]),a("br"),a("span",{staticClass:"line-number"},[v._v("10")]),a("br")])]),a("p",[a("em",[v._v("逻辑与操作符")]),v._v("有一个操作数不是布尔值的情况下，遵循下列规则：")]),v._v(" "),a("ul",[a("li",[v._v("如果第一个操作数是对象，则返回第二个操作数；")]),v._v(" "),a("li",[v._v("如果第二个操作数是对象，则只有在第一个操作数返回 true的情况下才会返回该对象；")]),v._v(" "),a("li",[v._v("如果两个操作数都对象，则返回第二个操作数；")]),v._v(" "),a("li",[v._v("如果有一个操作数是NaN，则返回NaN;")]),v._v(" "),a("li",[v._v("如果有一个操作数是 null，则返回 null；")]),v._v(" "),a("li",[v._v("如果有一个操作数是 undefined，则返回 undefined。")])]),v._v(" "),a("p",[a("em",[v._v("逻辑与")]),v._v("真值表如下：")]),v._v(" "),a("table",[a("thead",[a("tr",[a("th",[v._v("第一操作数")]),v._v(" "),a("th",[v._v("第二操作数")]),v._v(" "),a("th",[v._v("结果")])])]),v._v(" "),a("tbody",[a("tr",[a("td",[v._v("true")]),v._v(" "),a("td",[v._v("true")]),v._v(" "),a("td",[v._v("true")])]),v._v(" "),a("tr",[a("td",[v._v("true")]),v._v(" "),a("td",[v._v("false")]),v._v(" "),a("td",[v._v("false")])]),v._v(" "),a("tr",[a("td",[v._v("false")]),v._v(" "),a("td",[v._v("true")]),v._v(" "),a("td",[v._v("false")])]),v._v(" "),a("tr",[a("td",[v._v("false")]),v._v(" "),a("td",[v._v("false")]),v._v(" "),a("td",[v._v("false")])])])]),v._v(" "),a("p",[a("em",[v._v("逻辑或操作符")]),v._v("遵循下列规则：")]),v._v(" "),a("ul",[a("li",[v._v("如果第一个操作数是对象，则返回第一个操作数；")]),v._v(" "),a("li",[v._v("如果第一个操作数的求值为false，则返回第二个操作数；")]),v._v(" "),a("li",[v._v("如果两个操作数都对象，则返回第一个操作数；")]),v._v(" "),a("li",[v._v("如果有两个操作数是NaN，则返回NaN;")]),v._v(" "),a("li",[v._v("有两个操作数是 null，则返回 null；")]),v._v(" "),a("li",[v._v("有两个操作数是 undefined，则返回 undefined。")])]),v._v(" "),a("p",[a("em",[v._v("逻辑或")]),v._v("真值表如下：")]),v._v(" "),a("table",[a("thead",[a("tr",[a("th",[v._v("第一操作数")]),v._v(" "),a("th",[v._v("第二操作数")]),v._v(" "),a("th",[v._v("结果")])])]),v._v(" "),a("tbody",[a("tr",[a("td",[v._v("true")]),v._v(" "),a("td",[v._v("true")]),v._v(" "),a("td",[v._v("true")])]),v._v(" "),a("tr",[a("td",[v._v("true")]),v._v(" "),a("td",[v._v("false")]),v._v(" "),a("td",[v._v("true")])]),v._v(" "),a("tr",[a("td",[v._v("false")]),v._v(" "),a("td",[v._v("true")]),v._v(" "),a("td",[v._v("true")])]),v._v(" "),a("tr",[a("td",[v._v("false")]),v._v(" "),a("td",[v._v("false")]),v._v(" "),a("td",[v._v("false")])])])]),v._v(" "),a("h3",{attrs:{id:"十一、赋值运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十一、赋值运算符","aria-hidden":"true"}},[v._v("#")]),v._v(" 十一、赋值运算符")]),v._v(" "),a("p",[v._v("简单的赋值操作符由等于号（=）表示，其作用就是把右侧的值赋给右侧的变量，例子如下：")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("var num=10;\n\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br")])]),a("p",[v._v("如果在等于号（=）前面再添加乘性操作符、加性操作符或位操作符，就可以完成复合赋值操作。例子如下：")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("\nvar num=10;\nnum+=10;\n\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br"),a("span",{staticClass:"line-number"},[v._v("4")]),a("br")])]),a("p",[v._v("更多赋值操作符如下：")]),v._v(" "),a("ol",[a("li",[v._v("乘/赋值（*=）；")]),v._v(" "),a("li",[v._v("除/赋值（/=）；")]),v._v(" "),a("li",[v._v("模/赋值（%=）；")]),v._v(" "),a("li",[v._v("加/赋值（+=）；")]),v._v(" "),a("li",[v._v("减/赋值（-=）；")]),v._v(" "),a("li",[v._v("左移/赋值（<<=）；")]),v._v(" "),a("li",[v._v("有符号右移/赋值（>>=）；")])]),v._v(" "),a("h3",{attrs:{id:"十二、三元运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十二、三元运算符","aria-hidden":"true"}},[v._v("#")]),v._v(" 十二、三元运算符")]),v._v(" "),a("p",[v._v("例子如下：")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("var iable = boolean_expression ? true_value : false_value\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("这行代码的含义就是基于对boolean_expression求值的结果，决定给变量iable赋什么值。如果求值结果为true,则给变量iable赋true_value值；如果求值结果为false，则给变量iable赋false_value值")]),v._v(" "),a("h3",{attrs:{id:"十三、位运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十三、位运算符","aria-hidden":"true"}},[v._v("#")]),v._v(" 十三、位运算符")]),v._v(" "),a("p",[v._v("位运算符一共七个，分别如下：")]),v._v(" "),a("ol",[a("li",[v._v("按位非NOT（~）")]),v._v(" "),a("li",[v._v("按位与AND（&）")]),v._v(" "),a("li",[v._v("按位异或XOR（^）")]),v._v(" "),a("li",[v._v("左移（<<）")]),v._v(" "),a("li",[v._v("有符号右移（>>）")]),v._v(" "),a("li",[v._v("无符号右移（>>>）")])]),v._v(" "),a("p",[a("em",[v._v("按位非NOT")]),v._v(" "),a("em",[v._v("按位与AND")]),v._v(" "),a("em",[v._v("按位异或XOR")]),v._v(" "),a("em",[v._v("左移")]),v._v(" "),a("em",[v._v("有符号右移")]),v._v(" "),a("em",[v._v("无符号右移")])]),v._v(" "),a("h3",{attrs:{id:"十四、运算优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十四、运算优先级","aria-hidden":"true"}},[v._v("#")]),v._v(" 十四、运算优先级")]),v._v(" "),a("table",{staticClass:"fullwidth-table"},[a("tbody",[a("tr",[a("th",[v._v("优先级")]),v._v(" "),a("th",[v._v("运算类型")]),v._v(" "),a("th",[v._v("关联性")]),v._v(" "),a("th",[v._v("运算符")])]),v._v(" "),a("tr",[a("td",[v._v("20")]),v._v(" "),a("td",[a("code",[v._v("圆括号")])]),v._v(" "),a("td",[v._v("n/a")]),v._v(" "),a("td",[a("code",[v._v("( … )")])])]),v._v(" "),a("tr",[a("td",{attrs:{rowspan:"4"}},[v._v("19")]),v._v(" "),a("td",[a("code",[v._v("成员访问")])]),v._v(" "),a("td",[v._v("从左到右")]),v._v(" "),a("td",[a("code",[v._v("… . …")])])]),v._v(" "),a("tr",[a("td",[a("code",[v._v("需计算的成员访问")])]),v._v(" "),a("td",[v._v("从左到右")]),v._v(" "),a("td",[a("code",[v._v("… [ … ]")])])]),v._v(" "),a("tr",[a("td",[a("code",[v._v("new")]),v._v(" (带参数列表)")]),v._v(" "),a("td",[v._v("n/a")]),v._v(" "),a("td",[a("code",[v._v("new … ( … )")])])]),v._v(" "),a("tr",[a("td",[v._v("函数调用")]),v._v(" "),a("td",[v._v("从左到右")]),v._v(" "),a("td",[a("code",[v._v("… ( "),a("var",[v._v("… ")]),v._v(")")])])]),v._v(" "),a("tr",[a("td",{attrs:{rowspan:"1"}},[v._v("18")]),v._v(" "),a("td",[v._v("new (无参数列表)")]),v._v(" "),a("td",[v._v("从右到左")]),v._v(" "),a("td",[a("code",[v._v("new …")])])]),v._v(" "),a("tr",[a("td",{attrs:{rowspan:"2"}},[v._v("17")]),v._v(" "),a("td",[v._v("后置递增(运算符在后)")]),v._v(" "),a("td",{attrs:{colspan:"1",rowspan:"2"}},[v._v("n/a"),a("br"),v._v("\n     ")]),v._v(" "),a("td",[a("code",[v._v("… ++")])])]),v._v(" "),a("tr",[a("td",[v._v("后置递减(运算符在后)")]),v._v(" "),a("td",[a("code",[v._v("… --")])])]),v._v(" "),a("tr",[a("td",{attrs:{colspan:"1",rowspan:"10"}},[v._v("16")]),v._v(" "),a("td",[v._v("逻辑非")]),v._v(" "),a("td",{attrs:{colspan:"1",rowspan:"10"}},[v._v("从右到左")]),v._v(" "),a("td",[a("code",[v._v("! …")])])]),v._v(" "),a("tr",[a("td",[v._v("按位非")]),v._v(" "),a("td",[a("code",[v._v("~ …")])])]),v._v(" "),a("tr",[a("td",[v._v("一元加法")]),v._v(" "),a("td",[a("code",[v._v("+ …")])])]),v._v(" "),a("tr",[a("td",[v._v("一元减法")]),v._v(" "),a("td",[a("code",[v._v("- …")])])]),v._v(" "),a("tr",[a("td",[v._v("前置递增")]),v._v(" "),a("td",[a("code",[v._v("++ …")])])]),v._v(" "),a("tr",[a("td",[v._v("前置递减")]),v._v(" "),a("td",[a("code",[v._v("-- …")])])]),v._v(" "),a("tr",[a("td",[v._v("typeof")]),v._v(" "),a("td",[a("code",[v._v("typeof …")])])]),v._v(" "),a("tr",[a("td",[v._v("void")]),v._v(" "),a("td",[a("code",[v._v("void …")])])]),v._v(" "),a("tr",[a("td",[v._v("delete")]),v._v(" "),a("td",[a("code",[v._v("delete …")])])]),v._v(" "),a("tr",[a("td",[v._v("await")]),v._v(" "),a("td",[a("code",[v._v("await …")])])]),v._v(" "),a("tr",[a("td",[v._v("15")]),v._v(" "),a("td",[v._v("幂")]),v._v(" "),a("td",[v._v("从右到左")]),v._v(" "),a("td",[a("code",[v._v("… ** …")])])]),v._v(" "),a("tr",[a("td",{attrs:{rowspan:"3"}},[v._v("14")]),v._v(" "),a("td",[v._v("乘法")]),v._v(" "),a("td",{attrs:{colspan:"1",rowspan:"3"}},[v._v("从左到右"),a("br"),v._v("\n     ")]),v._v(" "),a("td",[a("code",[v._v("… * …")])])]),v._v(" "),a("tr",[a("td",[v._v("除法")]),v._v(" "),a("td",[a("code",[v._v("… / …")])])]),v._v(" "),a("tr",[a("td",[v._v("取模")]),v._v(" "),a("td",[a("code",[v._v("… % …")])])]),v._v(" "),a("tr",[a("td",{attrs:{rowspan:"2"}},[v._v("13")]),v._v(" "),a("td",[v._v("加法")]),v._v(" "),a("td",{attrs:{colspan:"1",rowspan:"2"}},[v._v("从左到右"),a("br"),v._v("\n     ")]),v._v(" "),a("td",[a("code",[v._v("… + …")])])]),v._v(" "),a("tr",[a("td",[v._v("减法")]),v._v(" "),a("td",[a("code",[v._v("… - …")])])]),v._v(" "),a("tr",[a("td",{attrs:{rowspan:"3"}},[v._v("12")]),v._v(" "),a("td",[v._v("按位左移")]),v._v(" "),a("td",{attrs:{colspan:"1",rowspan:"3"}},[v._v("从左到右")]),v._v(" "),a("td",[a("code",[v._v("… << …")])])]),v._v(" "),a("tr",[a("td",[v._v("按位右移")]),v._v(" "),a("td",[a("code",[v._v("… >> …")])])]),v._v(" "),a("tr",[a("td",[v._v("无符号右移")]),v._v(" "),a("td",[a("code",[v._v("… >>> …")])])]),v._v(" "),a("tr",[a("td",{attrs:{rowspan:"6"}},[v._v("11")]),v._v(" "),a("td",[v._v("小于")]),v._v(" "),a("td",{attrs:{colspan:"1",rowspan:"6"}},[v._v("从左到右")]),v._v(" "),a("td",[a("code",[v._v("… < …")])])]),v._v(" "),a("tr",[a("td",[v._v("小于等于")]),v._v(" "),a("td",[a("code",[v._v("… <= …")])])]),v._v(" "),a("tr",[a("td",[v._v("大于")]),v._v(" "),a("td",[a("code",[v._v("… > …")])])]),v._v(" "),a("tr",[a("td",[v._v("大于等于")]),v._v(" "),a("td",[a("code",[v._v("… >= …")])])]),v._v(" "),a("tr",[a("td",[v._v("in")]),v._v(" "),a("td",[a("code",[v._v("… in …")])])]),v._v(" "),a("tr",[a("td",[v._v("instanceof")]),v._v(" "),a("td",[a("code",[v._v("… instanceof …")])])]),v._v(" "),a("tr",[a("td",{attrs:{rowspan:"4"}},[v._v("10")]),v._v(" "),a("td",[v._v("等号")]),v._v(" "),a("td",{attrs:{colspan:"1",rowspan:"4"}},[v._v("从左到右"),a("br"),v._v("\n     ")]),v._v(" "),a("td",[a("code",[v._v("… == …")])])]),v._v(" "),a("tr",[a("td",[v._v("非等号")]),v._v(" "),a("td",[a("code",[v._v("… != …")])])]),v._v(" "),a("tr",[a("td",[v._v("全等号")]),v._v(" "),a("td",[a("code",[v._v("… === …")])])]),v._v(" "),a("tr",[a("td",[v._v("非全等号")]),v._v(" "),a("td",[a("code",[v._v("… !== …")])])]),v._v(" "),a("tr",[a("td",[v._v("9")]),v._v(" "),a("td",[v._v("按位与")]),v._v(" "),a("td",[v._v("从左到右")]),v._v(" "),a("td",[a("code",[v._v("… & …")])])]),v._v(" "),a("tr",[a("td",[v._v("8")]),v._v(" "),a("td",[v._v("按位异或")]),v._v(" "),a("td",[v._v("从左到右")]),v._v(" "),a("td",[a("code",[v._v("… ^ …")])])]),v._v(" "),a("tr",[a("td",[v._v("7")]),v._v(" "),a("td",[v._v("按位或")]),v._v(" "),a("td",[v._v("从左到右")]),v._v(" "),a("td",[a("code",[v._v("… | …")])])]),v._v(" "),a("tr",[a("td",[v._v("6")]),v._v(" "),a("td",[v._v("逻辑与")]),v._v(" "),a("td",[v._v("从左到右")]),v._v(" "),a("td",[a("code",[v._v("… && …")])])]),v._v(" "),a("tr",[a("td",[v._v("5")]),v._v(" "),a("td",[v._v("逻辑或")]),v._v(" "),a("td",[v._v("从左到右")]),v._v(" "),a("td",[a("code",[v._v("… || …")])])]),v._v(" "),a("tr",[a("td",[v._v("4")]),v._v(" "),a("td",[v._v("条件运算符")]),v._v(" "),a("td",[v._v("从右到左")]),v._v(" "),a("td",[a("code",[v._v("… ? … : …")])])]),v._v(" "),a("tr",[a("td",{attrs:{rowspan:"12"}},[v._v("3")]),v._v(" "),a("td",{attrs:{rowspan:"12"}},[v._v("赋值")]),v._v(" "),a("td",{attrs:{rowspan:"12"}},[v._v("从右到左")]),v._v(" "),a("td",[a("code",[v._v("… = …")])])]),v._v(" "),a("tr",[a("td",[a("code",[v._v("… += …")])])]),v._v(" "),a("tr",[a("td",[a("code",[v._v("… -= …")])])]),v._v(" "),a("tr",[a("td",[a("code",[v._v("… *= …")])])]),v._v(" "),a("tr",[a("td",[a("code",[v._v("… /= …")])])]),v._v(" "),a("tr",[a("td",[a("code",[v._v("… %= …")])])]),v._v(" "),a("tr",[a("td",[a("code",[v._v("… <<= …")])])]),v._v(" "),a("tr",[a("td",[a("code",[v._v("… >>= …")])])]),v._v(" "),a("tr",[a("td",[a("code",[v._v("… >>>= …")])])]),v._v(" "),a("tr",[a("td",[a("code",[v._v("… &= …")])])]),v._v(" "),a("tr",[a("td",[a("code",[v._v("… ^= …")])])]),v._v(" "),a("tr",[a("td",[a("code",[v._v("… |= …")])])]),v._v(" "),a("tr",[a("td",{attrs:{colspan:"1",rowspan:"2"}},[v._v("2")]),v._v(" "),a("td",[v._v("yield")]),v._v(" "),a("td",{attrs:{colspan:"1",rowspan:"2"}},[v._v("从右到左")]),v._v(" "),a("td",[a("code",[v._v("yield …")])])]),v._v(" "),a("tr",[a("td",[v._v("yield*")]),v._v(" "),a("td",[a("code",[v._v("yield* …")])])]),v._v(" "),a("tr",[a("td",[v._v("1")]),v._v(" "),a("td",[v._v("展开运算符")]),v._v(" "),a("td",[v._v("n/a")]),v._v(" "),a("td",[a("code",[v._v("...")]),v._v(" …")])]),v._v(" "),a("tr",[a("td",[v._v("0")]),v._v(" "),a("td",[v._v("逗号")]),v._v(" "),a("td",[v._v("从左到右")]),v._v(" "),a("td",[a("code",[v._v("… , …")])])])])]),v._v(" "),a("h3",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[v._v("#")]),v._v(" 参考资料")]),v._v(" "),a("ul",[a("li",[v._v("《权威指南第六版》")]),v._v(" "),a("li",[v._v("《高级编程第三版》")])]),v._v(" "),a("h2",{attrs:{id:"联系作者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#联系作者","aria-hidden":"true"}},[v._v("#")]),v._v(" 联系作者")]),v._v(" "),a("div",{attrs:{align:"center"}},[a("p",[v._v("\n        平凡世界，贵在坚持。\n    ")]),v._v(" "),a("img",{attrs:{src:v.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);t.default=s.exports}}]);