(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{242:function(s,a,n){"use strict";n.r(a);var t=n(13),r=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"创建型设计模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建型设计模式"}},[s._v("#")]),s._v(" 创建型设计模式")]),s._v(" "),n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),n("p",[s._v("本人平时学习及收集内容，欢迎参入一起讨论。")]),s._v(" "),n("h2",{attrs:{id:"内容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内容"}},[s._v("#")]),s._v(" 内容")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#%E4%B8%80%E3%80%81%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F"}},[s._v("简单工厂模式")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E4%BA%8C%E3%80%81%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F"}},[s._v("工厂方法模式")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E4%B8%89%E3%80%81%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F"}},[s._v("抽象工厂模式")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E5%9B%9B%E3%80%81%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F"}},[s._v("建造者模式")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E4%BA%94%E3%80%81%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F"}},[s._v("原型模式")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E5%85%AD%E3%80%81%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F"}},[s._v("单例模式")])])]),s._v(" "),n("h3",{attrs:{id:"一、简单工厂模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、简单工厂模式"}},[s._v("#")]),s._v(" 一、简单工厂模式")]),s._v(" "),n("h4",{attrs:{id:"_1-1-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-介绍"}},[s._v("#")]),s._v(" 1.1 介绍")]),s._v(" "),n("p",[s._v("类都封装到一个函数里面，这样在模块调用的时候只需要记住这个函数，通过这个函数创建用户需要的对象就可以了，这个函数就是被称为工厂函数，这种设计模式就被称为简单工厂设计模式。")]),s._v(" "),n("h4",{attrs:{id:"_1-2-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-代码"}},[s._v("#")]),s._v(" 1.2 代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("/* 饭店方法 */\nclass Restaurant {\n    static getMenu(menu) {\n        switch (menu) {\n            case '鱼香肉丝':\n                return new YuXiangRouSi()\n            case '宫保鸡丁':\n                return new GongBaoJiDin()\n            default:\n                throw new Error('这个菜本店没有 -。-')\n        }\n    }\n}\n/* 鱼香肉丝类 */\nclass YuXiangRouSi {\n    constructor() { this.type = '鱼香肉丝' }\n\n    eat() { console.log(this.type + ' 真香~') }\n}\n/* 宫保鸡丁类 */\nclass GongBaoJiDin {\n    constructor() { this.type = '宫保鸡丁' }\n\n    eat() { console.log(this.type + ' 让我想起了外婆做的菜~') }\n}\nconst dish1 = Restaurant.getMenu('鱼香肉丝')\ndish1.eat()                                  // 输出: 鱼香肉丝 真香~\nconst dish2 = Restaurant.getMenu('红烧排骨')  // 输出: Error 这个菜本店没有 -\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("h3",{attrs:{id:"二、工厂方法模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、工厂方法模式"}},[s._v("#")]),s._v(" 二、工厂方法模式")]),s._v(" "),n("h4",{attrs:{id:"_2-1-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-介绍"}},[s._v("#")]),s._v(" 2.1 介绍")]),s._v(" "),n("p",[s._v("工厂模式定义一个用于创建对象的接口，这个接口由子类决定实例化哪一个类。该模式使用一个类的实例化延迟到了子类。而子类可以重写接口方法以便创建的时候指定自己的对象类型。")]),s._v(" "),n("h4",{attrs:{id:"_2-2-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-代码"}},[s._v("#")]),s._v(" 2.2 代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("/* 工厂类 */\nclass Factory {\n    static getInstance(type) {\n        switch (type) {\n            case 'Product1':\n                return new Product1()\n            case 'Product2':\n                return new Product2()\n            default:\n                throw new Error('当前没有这个产品')\n        }\n    }\n}\n/* 产品类1 */\nclass Product1 {\n    constructor() { this.type = 'Product1' }\n\n    operate() { console.log(this.type) }\n}\n/* 产品类2 */\nclass Product2 {\n    constructor() { this.type = 'Product2' }\n\n    operate() { console.log(this.type) }\n}\nconst prod1 = Factory.getInstance('Product1')\nprod1.operate()                                 // 输出: Product1\nconst prod2 = Factory.getInstance('Product3')   // 输出: Error 当前没有这个产品\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("h4",{attrs:{id:"_2-3-优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-优点"}},[s._v("#")]),s._v(" 2.3 优点")]),s._v(" "),n("ul",[n("li",[s._v("良好的封装，代码结构清晰，访问者无需知道对象的创建流程，特别是创建比较复杂的情况下；")]),s._v(" "),n("li",[s._v("扩展性优良，通过工厂方法隔离了用户和创建流程隔离，符合开放封闭原则；")]),s._v(" "),n("li",[s._v("解耦了高层逻辑和底层产品类，符合最少知识原则，不需要的就不要去交流；")])]),s._v(" "),n("h4",{attrs:{id:"_2-4-缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-缺点"}},[s._v("#")]),s._v(" 2.4 缺点")]),s._v(" "),n("ul",[n("li",[s._v("带来了额外的系统复杂度，增加了抽象性；")])]),s._v(" "),n("h4",{attrs:{id:"_2-3-适用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-适用场景"}},[s._v("#")]),s._v(" 2.3 适用场景")]),s._v(" "),n("ul",[n("li",[s._v("对象的创建比较复杂，而访问者无需知道创建的具体流程；")]),s._v(" "),n("li",[s._v("处理大量具有相同属性的小对象；")]),s._v(" "),n("li",[s._v("源码 Vue-router")])]),s._v(" "),n("h3",{attrs:{id:"三、抽象工厂模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、抽象工厂模式"}},[s._v("#")]),s._v(" 三、抽象工厂模式")]),s._v(" "),n("h4",{attrs:{id:"_3-1-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-介绍"}},[s._v("#")]),s._v(" 3.1 介绍")]),s._v(" "),n("p",[s._v("提供一个创建一系列相关或相互依赖对象的接口，而无需制定它们具体的类。")]),s._v(" "),n("h4",{attrs:{id:"_3-2-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-代码"}},[s._v("#")]),s._v(" 3.2 代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("/* 工厂 抽象类 */\nclass AbstractFactory {\n    constructor() {\n        if (new.target === AbstractFactory)\n            throw new Error('抽象类不能直接实例化!')\n    }\n\n    /* 抽象方法 */\n    createProduct1() { throw new Error('抽象方法不能调用!') }\n}\n/* 具体饭店类 */\nclass Factory extends AbstractFactory {\n    constructor() { super() }\n\n    createProduct1(type) {\n        switch (type) {\n            case 'Product1':\n                return new Product1()\n            case 'Product2':\n                return new Product2()\n            default:\n                throw new Error('当前没有这个产品 -。-')\n        }\n    }\n}\n/* 抽象产品类 */\nclass AbstractProduct {\n    constructor() {\n        if (new.target === AbstractProduct)\n            throw new Error('抽象类不能直接实例化!')\n        this.kind = '抽象产品类1'\n    }\n\n    /* 抽象方法 */\n    operate() { throw new Error('抽象方法不能调用!') }\n}\n/* 具体产品类1 */\nclass Product1 extends AbstractProduct {\n    constructor() {\n        super()\n        this.type = 'Product1'\n    }\n\n    operate() { console.log(this.kind + ' - ' + this.type) }\n}\n/* 具体产品类2 */\nclass Product2 extends AbstractProduct {\n    constructor() {\n        super()\n        this.type = 'Product2'\n    }\n\n    operate() { console.log(this.kind + ' - ' + this.type) }\n}\nconst factory = new Factory()\nconst prod1 = factory.createProduct1('Product1')\nprod1.operate()                                   // 输出: 抽象产品类1 - Product1\nconst prod2 = factory.createProduct1('Product3')  // 输出: Error 当前没有这个产品 -。-\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br")])]),n("h4",{attrs:{id:"_3-3-优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-优点"}},[s._v("#")]),s._v(" 3.3 优点")]),s._v(" "),n("ul",[n("li",[s._v("抽象产品类将产品的结构抽象出来，访问者不需要知道产品的具体实现，只需要面向产品的结构编程即可，从产品的具体实现中解耦；")])]),s._v(" "),n("h4",{attrs:{id:"_3-4-缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-缺点"}},[s._v("#")]),s._v(" 3.4 缺点")]),s._v(" "),n("ul",[n("li",[s._v("扩展新类簇的产品类比较困难，因为需要创建新的抽象产品类，并且还要修改工厂类，违反开闭原则；")]),s._v(" "),n("li",[s._v("带来了系统复杂度，增加了新的类，和新的继承关系；")])]),s._v(" "),n("h4",{attrs:{id:"_3-5-场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-场景"}},[s._v("#")]),s._v(" 3.5 场景")]),s._v(" "),n("ul",[n("li",[s._v("如果一组实例都有相同的结构，那么就可以使用抽象工厂模式。")])]),s._v(" "),n("h4",{attrs:{id:"参考资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://www.yuque.com/wubinhp/uxiv5i/wgk0bg",target:"_blank",rel:"noopener noreferrer"}},[s._v("抽象工厂模式"),n("OutboundLink")],1)])]),s._v(" "),n("h3",{attrs:{id:"四、建造者模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、建造者模式"}},[s._v("#")]),s._v(" 四、建造者模式")]),s._v(" "),n("h4",{attrs:{id:"_4-1-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-介绍"}},[s._v("#")]),s._v(" 4.1 介绍")]),s._v(" "),n("p",[s._v("建造者模式又称生成器模式，将一个复杂的逻辑或者功能通过有条理的分工来一步步实现")]),s._v(" "),n("h4",{attrs:{id:"_4-2-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-代码"}},[s._v("#")]),s._v(" 4.2 代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 建造者，部件生产\nclass ProductBuilder {\n    constructor(param) {\n        this.param = param\n    }\n\n    /* 生产部件，part1 */\n    buildPart1() {\n        // ... Part1 生产过程\n        this.part1 = 'part1'\n\n    }\n\n    /* 生产部件，part2 */\n    buildPart2() {\n        // ... Part2 生产过程\n        this.part2 = 'part2'\n    }\n}\n/* 指挥者，负责最终产品的装配 */\nclass Director {\n    constructor(param) {\n        const _product = new ProductBuilder(param)\n        _product.buildPart1()\n        _product.buildPart2()\n        return _product\n    }\n}\n// 获得产品实例\nconst product = new Director('param')\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("h4",{attrs:{id:"_4-3-优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-优点"}},[s._v("#")]),s._v(" 4.3 优点")]),s._v(" "),n("ul",[n("li",[s._v("使用建造者模式可以使产品的构建流程和产品的表现分离，也就是将产品的创建算法和产品组成的实现隔离，访问者不必知道产品部件实现的细节；")]),s._v(" "),n("li",[s._v("扩展方便，如果希望征生产一个装配顺序或方式不同的新产品，那么直接新建一个指挥者即可，不用修改既有代码，符合开闭原则；")]),s._v(" "),n("li",[s._v("更好的复用性，建造者模式将产品的创建算法和产品组成的实现分离，所以产品创建的算法可以复用，产品部件的实现也可以复用，带来很大的灵活性。")])]),s._v(" "),n("h4",{attrs:{id:"_4-4-缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-缺点"}},[s._v("#")]),s._v(" 4.4 缺点")]),s._v(" "),n("ul",[n("li",[s._v("建造者模式一般适用于产品之间组成部件类似的情况，如果产品之间差异性很大、复用性不高，那么不要使用建造者模式；")]),s._v(" "),n("li",[s._v("实例的创建增加了许多额外的结构，无疑增加了许多复杂度，如果对象粒度不大，那么我们最好直接创建对象；")])]),s._v(" "),n("h4",{attrs:{id:"_4-5-场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-场景"}},[s._v("#")]),s._v(" 4.5 场景")]),s._v(" "),n("ul",[n("li",[s._v("相同的方法，不同的执行顺序，产生不一样的产品时，可以采用建造者模式；")]),s._v(" "),n("li",[s._v("产品的组成部件类似，通过组装不同的组件获得不同产品时，可以采用建造者模式；")])]),s._v(" "),n("h4",{attrs:{id:"五、原型模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五、原型模式"}},[s._v("#")]),s._v(" 五、原型模式")]),s._v(" "),n("h4",{attrs:{id:"_5-1-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-介绍"}},[s._v("#")]),s._v(" 5.1 介绍")]),s._v(" "),n("p",[s._v("原型模式（prototype）是 rxet 原型实例指向创建对象的种类，并且通过拷贝这些原型创建新的对象。")]),s._v(" "),n("h4",{attrs:{id:"_5-2-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-代码"}},[s._v("#")]),s._v(" 5.2 代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Person{\n    constructor(name){\n        this.name = name\n    }\n    getName(){\n        return this.name\n    }\n}\nclass Student extends Person{\n    constructor(name){\n        super(name)\n    }\n    sayHello(){\n        console.log(`Hello,My name is ${this.name}`)\n    }\n}\n\nlet student = new Student('xiaoming')\nstudent.sayHello()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h3",{attrs:{id:"六、单例模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#六、单例模式"}},[s._v("#")]),s._v(" 六、单例模式")]),s._v(" "),n("h4",{attrs:{id:"_6-1-介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-介绍"}},[s._v("#")]),s._v(" 6.1 介绍")]),s._v(" "),n("p",[s._v("一个类只有一个实例，并提供一个访问它的全局访问点。")]),s._v(" "),n("h4",{attrs:{id:"_6-2-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-代码"}},[s._v("#")]),s._v(" 6.2 代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const Singleton = (function() {\n    let _instance = null        // 存储单例\n\n    const Singleton = function() {\n        if (_instance) return _instance     // 判断是否已有单例\n        _instance = this\n        this.init()                         // 初始化操作\n        return _instance\n    }\n\n    Singleton.prototype.init = function() {\n        this.foo = 'Singleton Pattern'\n    }\n\n    return Singleton\n})()\nconst visitor1 = new Singleton()\nconst visitor2 = new Singleton()\nconsole.log(visitor1 === visitor2)\t// true\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h4",{attrs:{id:"_6-3-优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-优点"}},[s._v("#")]),s._v(" 6.3 优点")]),s._v(" "),n("ul",[n("li",[s._v("划分命名空间，减少全局变量")]),s._v(" "),n("li",[s._v("增强模块性，把自己的代码组织在一个全局变量名下，放在单一位置，便于维护")]),s._v(" "),n("li",[s._v("且只会实例化一次。简化了代码的调试和维护")])]),s._v(" "),n("h4",{attrs:{id:"_6-4-缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-缺点"}},[s._v("#")]),s._v(" 6.4 缺点")]),s._v(" "),n("ul",[n("li",[s._v("由于单例模式提供的是一种单点访问，所以它有可能导致模块童年强耦合从而不得单元测试。无法单独测试一个调用了来自单例的方法的类，而只能把它与那个单例作为一个单元一起测试。")])]),s._v(" "),n("h4",{attrs:{id:"_6-5-场景例子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-场景例子"}},[s._v("#")]),s._v(" 6.5 场景例子")]),s._v(" "),n("ul",[n("li",[s._v("定义命名空间和实现分支型方法")]),s._v(" "),n("li",[s._v("登录框")]),s._v(" "),n("li",[s._v("vuex 和 redux 中的 store")])]),s._v(" "),n("h3",{attrs:{id:"参考资料-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考资料-2"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),n("ul",[n("li",[s._v("《JavaScript 设计模式》")]),s._v(" "),n("li",[s._v("《JavaScript 设计模式与开发实践》")]),s._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/yanlele/node-index/blob/master/book/04%E3%80%81js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02%E7%AF%87%E3%80%81%E5%88%9B%E5%BB%BA%E5%9E%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/README.md#class02-08",target:"_blank",rel:"noopener noreferrer"}},[s._v("第二篇、创建型设计模式"),n("OutboundLink")],1)])]),s._v(" "),n("h2",{attrs:{id:"联系作者"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#联系作者"}},[s._v("#")]),s._v(" 联系作者")]),s._v(" "),n("div",{attrs:{align:"center"}},[n("p",[s._v("\n        平凡世界，贵在坚持。\n    ")]),s._v(" "),n("img",{attrs:{src:s.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);a.default=r.exports}}]);