(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{260:function(t,r,a){"use strict";a.r(r);var e=a(4),s=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"动态规划算法（一）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态规划算法（一）","aria-hidden":"true"}},[t._v("#")]),t._v(" 动态规划算法（一）")]),t._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("本人平时学习及收集内容，欢迎参入一起讨论。")]),t._v(" "),a("h2",{attrs:{id:"内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内容","aria-hidden":"true"}},[t._v("#")]),t._v(" 内容")]),t._v(" "),a("ul",[a("li",[t._v("概念")]),t._v(" "),a("li",[t._v("动态规划问题的四个步骤")])]),t._v(" "),a("h3",{attrs:{id:"一、概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 一、概念")]),t._v(" "),a("p",[a("strong",[t._v("动态规划")]),t._v("算法是通过拆分问题，定义问题状态和状态之间的关系，使得问题能够以递推（或者说分治）的方式去解决。它的几个重要概念如下所述。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("阶段：")]),t._v(" 对于一个完整的问题过程，适当的切分为若干个相互联系的子问题，每次在求解一个子问题，则对应一个阶段，整个问题的求解转化为按照阶段次序去求解。")]),t._v(" "),a("li",[a("strong",[t._v("状态：")]),t._v(" 状态表示每个阶段开始时所处的客观条件，即在求解子问题的已知条件。状态描述了研究的问题过程中的状态。")]),t._v(" "),a("li",[a("strong",[t._v("决策：")]),t._v(" 决策表示当求解过程牌某一阶段的某一状态时，可以根据当前条件作出不同的选择，从而确定下一个阶段的状态，这种选择称为决策。")]),t._v(" "),a("li",[a("strong",[t._v("策略：")]),t._v(" 由所有阶段的决策组成的决策序列称为全过程策略，简称策略。")]),t._v(" "),a("li",[a("strong",[t._v("最优策略：")]),t._v(" 在所有的策略中，找到代价最小，性能最优的策略，此策略称为最优策略。")]),t._v(" "),a("li",[a("strong",[t._v("状态转移方程：")]),t._v(" 状态转移方程是确定两个相邻阶段状态的演变过程，描述了状态之间是如何演变的。")])]),t._v(" "),a("h3",{attrs:{id:"二、动态规划问题的四个步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、动态规划问题的四个步骤","aria-hidden":"true"}},[t._v("#")]),t._v(" 二、动态规划问题的四个步骤")]),t._v(" "),a("p",[t._v("一般解决动态规划问题，分为四个步骤，分别是")]),t._v(" "),a("ul",[a("li",[t._v("问题拆解，找到问题之间的具体联系")]),t._v(" "),a("li",[t._v("状态定义")]),t._v(" "),a("li",[t._v("递推方程推导")]),t._v(" "),a("li",[t._v("实现")])]),t._v(" "),a("h3",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/po9s6cod7AGGqKsh5ufBjw",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端高频算法面试——动态规划"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5cde316f6fb9a07ed9118f01",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端跳槽面试算法——动态规划"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/GtnJYvvOoyeXH0h3tZZAkA",target:"_blank",rel:"noopener noreferrer"}},[t._v("递归和动态规划"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/fivestudy/p/11855853.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("有了四步解题法模板，再也不害怕动态规划！（看不懂算我输）"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"联系作者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#联系作者","aria-hidden":"true"}},[t._v("#")]),t._v(" 联系作者")]),t._v(" "),a("div",{attrs:{align:"center"}},[a("p",[t._v("\n        平凡世界，贵在坚持。\n    ")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);r.default=s.exports}}]);