(window.webpackJsonp=window.webpackJsonp||[]).push([[252],{472:function(e,t,r){"use strict";r.r(t);var a=r(13),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"vue-服务端渲染（ssr）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue-服务端渲染（ssr）"}},[e._v("#")]),e._v(" Vue 服务端渲染（SSR）")]),e._v(" "),r("h2",{attrs:{id:"前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),r("blockquote",[r("p",[e._v("Vue.js 是构建客户端应用程序的框架。默认情况下，可以在浏览器中输出 Vue 组件，进行生成 DOM 和操作 DOM。然而，也可以将同一个组件渲染为服务端的 HTML 字符串，将它们直接发送到浏览器，最后将这些静态标记“激活”为客户端上完全可交互的应用程序。")]),e._v(" "),r("p",[e._v("即：SSR 大致意思是 vue 在客户端将标签渲染成的整个 html 片段的工作在服务端完成，服务端形成的 html 片段直接返回给客户端这个过程就叫做服务端渲染。")])]),e._v(" "),r("h2",{attrs:{id:"内容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内容"}},[e._v("#")]),e._v(" 内容")]),e._v(" "),r("ul",[r("li",[e._v("ssr 的优缺点")])]),e._v(" "),r("h3",{attrs:{id:"一、ssr-的优缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、ssr-的优缺点"}},[e._v("#")]),e._v(" 一、ssr 的优缺点")]),e._v(" "),r("ul",[r("li",[e._v("服务端渲染的优点")]),e._v(" "),r("li",[e._v("服务端渲染的缺点")])]),e._v(" "),r("h4",{attrs:{id:"_1-1-服务端渲染的优点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-服务端渲染的优点"}},[e._v("#")]),e._v(" 1.1 服务端渲染的优点")]),e._v(" "),r("ul",[r("li",[e._v("更好的 SEO：因为 SPA 页面的内容是通过 Ajax 获取，而搜索引擎爬取工具并不会等待 Ajax 异步完成后再抓取页面内容，所以在 SPA 中是抓取不到页面通过 Ajax 获取到的内容；而 SSR 是直接由服务端返回已经渲染好的页面（数据已经包含在页面中），所以搜索引擎爬取工具可以抓取渲染好的页面；")]),e._v(" "),r("li",[e._v("更快的内容到达时间（首屏加载更快）：SPA 会等待所有 Vue 编译后的 js 文件都下载完成后，才开始进行页面的渲染，文件下载等需要一定的时间等，所以首屏渲染需要一定的时间；SSR 直接由服务端渲染好页面直接返回显示，无需等待下载 js 文件及再去渲染等，所以 SSR 有更快的内容到达时间；")])]),e._v(" "),r("h4",{attrs:{id:"_1-2-服务端渲染的缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-服务端渲染的缺点"}},[e._v("#")]),e._v(" 1.2 服务端渲染的缺点")]),e._v(" "),r("ul",[r("li",[e._v("更多的开发条件限制：例如服务端渲染只支持 beforCreate 和 created 两个钩子函数，这会导致一些外部扩展库需要特殊处理，才能在服务端渲染应用程序中运行；并且与可以部署在任何静态文件服务器上的完全静态单页面应用程序 SPA 不同，服务端渲染应用程序，需要处于 Node.js server 运行环境；")]),e._v(" "),r("li",[e._v("更多的服务器负载：在 Node.js 中渲染完整的应用程序，显然会比仅仅提供静态文件的 server 更加大量占用 CPU 资源 (CPU-intensive - CPU 密集)，因此如果你预料在高流量环境 ( high traffic ) 下使用，请准备相应的服务器负载，并明智地采用缓存策略。")])]),e._v(" "),r("h3",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/senntyou/blogs/blob/master/web-extend/5.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("细说后端模板渲染、客户端渲染、node 中间层、服务器端渲染（ssr）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5cb6c36e6fb9a068af37aa35",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue SSR 踩坑之旅"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/amandakelake/blog/issues/60",target:"_blank",rel:"noopener noreferrer"}},[e._v("后端渲染、客户端渲染(CSR)、同构应用(SSR)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://mp.weixin.qq.com/s/uf_joal0F2csGggfqaYETg",target:"_blank",rel:"noopener noreferrer"}},[e._v("从头开始，彻底理解服务端渲染原理(8 千字汇总长文)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://mp.weixin.qq.com/s/EowqAuFQ9-0xOQIxqMvrog",target:"_blank",rel:"noopener noreferrer"}},[e._v("花椒前端基于 Docker 的 SSR 持续开发集成环境实践"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://juejin.im/post/5bc7ea48e51d450e46289eab",target:"_blank",rel:"noopener noreferrer"}},[e._v("React 中同构（SSR）原理脉络梳理"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://mp.weixin.qq.com/s/vVuP425SrH9m7pk46jnzmw",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue 预渲染插件 prerender-spa-plugin 使用全记录"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"联系作者"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#联系作者"}},[e._v("#")]),e._v(" 联系作者")]),e._v(" "),r("div",{attrs:{align:"center"}},[r("p",[e._v("\n        平凡世界，贵在坚持。\n    ")]),e._v(" "),r("img",{attrs:{src:e.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);t.default=s.exports}}]);