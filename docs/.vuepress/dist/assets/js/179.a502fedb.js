(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{457:function(s,t,e){"use strict";e.r(t);var a=e(4),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"vuex-学习及原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex-学习及原理","aria-hidden":"true"}},[s._v("#")]),s._v(" vuex 学习及原理")]),s._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),e("p",[s._v("本人平时学习及收集内容，欢迎参入一起讨论。")]),s._v(" "),e("h2",{attrs:{id:"内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内容","aria-hidden":"true"}},[s._v("#")]),s._v(" 内容")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E4%B8%80%E3%80%81vuex-%E4%BB%8B%E7%BB%8D"}},[s._v("Vuex 介绍")])]),s._v(" "),e("li",[e("a",{attrs:{href:"#%E4%BA%8C%E3%80%81vuex-%E7%9A%84%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88"}},[s._v("Vuex 的原理是什么")])]),s._v(" "),e("li",[e("a",{attrs:{href:"#%E4%B8%89%E3%80%81%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E4%BD%BF%E7%94%A8-vuex"}},[s._v("什么时候使用 Vuex")])]),s._v(" "),e("li",[e("a",{attrs:{href:"#%E5%9B%9B%E3%80%81%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-vuex"}},[s._v("如何使用 Vuex")])])]),s._v(" "),e("h3",{attrs:{id:"一、vuex-介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、vuex-介绍","aria-hidden":"true"}},[s._v("#")]),s._v(" 一、Vuex 介绍")]),s._v(" "),e("p",[s._v("Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。")]),s._v(" "),e("h3",{attrs:{id:"二、vuex-的原理是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、vuex-的原理是什么","aria-hidden":"true"}},[s._v("#")]),s._v(" 二、Vuex 的原理是什么")]),s._v(" "),e("p",[e("img",{attrs:{src:"vuex.png",alt:"images"}})]),s._v(" "),e("p",[s._v("Vuex 实现了一个单向数据流，在全局拥有一个 State 存放数据，当组件要更改 State 中的数据时，必须通过 Mutation 进行，Mutation 同时提供了订阅者模式供外部插件调用获取 State 数据的更新。而当所有异步操作(常见调用后端接口异步获取更新数据)或批量的同步操作需要走 Action，但 Action 也是无法直接修改 State 的，还是需要通过 Mutation 来修改 State 的数据。最后，根据 State 的变化，渲染到视图上。")]),s._v(" "),e("p",[s._v("vuex 主要包括以下几个模块：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("Vue Components")]),s._v("：Vue 组件。HTML 页面上，负责接收用户操作等交互行为，执行 dispatch 方法触发对应 action 进行回应。")]),s._v(" "),e("li",[e("code",[s._v("dispatch")]),s._v("：操作行为触发方法，是唯一能执行 action 的方法。")]),s._v(" "),e("li",[e("code",[s._v("State")]),s._v("：页面状态管理容器对象。集中存储 Vue components 中 data 对象的零散数据，全局唯一，以进行统一的状态管理。页面显示所需的数据从该对象中进行读取，利用 Vue 的细粒度数据响应机制来进行高效的状态更新。")]),s._v(" "),e("li",[e("code",[s._v("Getter")]),s._v("：state 对象读取方法。图中没有单独列出该模块，应该被包含在了 render 中，Vue Components 通过该方法读取全局 state 对象。")]),s._v(" "),e("li",[e("code",[s._v("Mutation")]),s._v("："),e("strong",[s._v("状态改变操作方法，由 actions 中的 commit('mutation 名称')来触发。")]),s._v(" 是 Vuex 修改 state 的唯一推荐方法。该方法只能进行同步操作，且方法名只能全局唯一。操作之中会有一些 hook 暴露出来，以进行 state 的监控等。")]),s._v(" "),e("li",[e("code",[s._v("Action")]),s._v("："),e("strong",[s._v("操作行为处理模块,由组件中的"),e("code",[s._v("$store.dispatch('action 名称', data1)")]),s._v("来触发。然后由 commit()来触发 mutation 的调用 , 间接更新 state。")]),s._v(" 负责处理 Vue Components 接收到的所有交互行为。包含同步/异步操作，支持多个同名方法，按照注册的顺序依次触发。向后台 API 请求的操作就在这个模块中进行，包括触发其他 action 以及提交 mutation 的操作。该模块提供了 Promise 的封装，以支持 action 的链式触发。")])]),s._v(" "),e("h3",{attrs:{id:"三、什么时候使用-vuex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、什么时候使用-vuex","aria-hidden":"true"}},[s._v("#")]),s._v(" 三、什么时候使用 Vuex")]),s._v(" "),e("p",[s._v("虽然 Vuex 可以帮助我们管理共享状态，但也附带了更多的概念和框架。这需要对短期和长期效益进行权衡。")]),s._v(" "),e("p",[s._v("如果您的应用够简单，您最好不要使用 Vuex,因为使用 Vuex 可能是繁琐冗余的。一个简单的"),e("code",[s._v("global event bus")]),s._v("就跢您所需了。但是，"),e("strong",[s._v("如果您需要构建一个中大型单页应用，您很可能会考虑如何更好地在组件外部管理状态，Vuex 将会成为自然而然的选择。")])]),s._v(" "),e("h3",{attrs:{id:"四、如何使用-vuex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、如何使用-vuex","aria-hidden":"true"}},[s._v("#")]),s._v(" 四、如何使用 Vuex")]),s._v(" "),e("h4",{attrs:{id:"_4-1-创建一个store-js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-创建一个store-js","aria-hidden":"true"}},[s._v("#")]),s._v(" 4.1 创建一个"),e("code",[s._v("store.js")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import Vue from 'vue'\nimport Vuex from 'vuex'\nVue.use(Vuex)\nconst store = new Vuex.Store({\n    state: {\n        count: 0\n    },\n    mutations: {// 包含了多个直接更新state函数的对象\n        INCREMENT(state) {\n            state.count = state.count + 1;\n        },\n        DECREMENT(state) {\n            state.count = state.count - 1;\n        }\n    },\n    getters: {   // 当读取属性值时自动调用并返回属性值\n        evenOrOdd(state) {\n            return state.count % 2 === 0 ? \"偶数\" : \"奇数\";\n        }\n    },\n    actions: { // 包含了多个对应事件回调函数的对象\n        incrementIfOdd({ commit, state }) { // 带条件的action\n            if (state.count % 2 === 1) {\n                commit('INCREMENT')\n            }\n        },\n        incrementAsync({ commit }) { //异步的action\n            setInterval(() => {\n                commit('INCREMENT')\n            }, 2000);\n        }\n\n    }\n})\nexport default store //用export default 封装代码，让外部可以引用\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br")])]),e("h4",{attrs:{id:"_4-2-在-main-js-文件中引入-store-js-文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-在-main-js-文件中引入-store-js-文件","aria-hidden":"true"}},[s._v("#")]),s._v(" 4.2 在 main.js 文件中引入 store.js 文件")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import store from './store'\nnew Vue({\n  el: '#app',\n  router,\n  store,//注册上vuex的store: 所有组件对象都多一个属性$store\n  components: { App },\n  template: '<App/>'\n})\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h4",{attrs:{id:"_4-3-新建一个模板-helloworld-vue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-新建一个模板-helloworld-vue","aria-hidden":"true"}},[s._v("#")]),s._v(" 4.3 新建一个模板 HelloWorld.vue")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<template>\n  <div class="hello">\n    <p>click {{count}} times,count is {{evenOrOdd}}</p>\n    <button @click="increment">+</button>\n    <button @click="decrement">-</button>\n    <button @click="incrementIfOdd">increment if odd</button>\n    <button @click="incrementAsync">increment async</button>\n  </div>\n</template>\n<script>\nexport default {\n  name: "HelloWorld",\n  computed: {\n    count() {\n      return this.$store.state.count;\n    },\n    evenOrOdd() {\n      return this.$store.getters.evenOrOdd;\n    }\n  },\n  methods: {\n    increment() {\n      this.$store.commit("INCREMENT");\n    },\n    decrement() {\n      this.$store.commit("DECREMENT");\n    },\n    // 只有是奇数才加1\n    incrementIfOdd() {\n      this.$store.dispatch("incrementIfOdd"); //触发store中对应的action调用\n    },\n    // 过两秒才加1\n    incrementAsync() {\n      this.$store.dispatch("incrementAsync");\n    }\n  }\n};\n<\/script>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br")])]),e("p",[s._v("由于 store 中的状态是响应式的，当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。"),e("strong",[s._v("在组件中调用 store 中的状态简单到仅需要在计算属性中返回即可。改变 store 中的状态的唯一途径就是显式地提交 (commit) mutations。")])]),s._v(" "),e("h3",{attrs:{id:"五、使用-vuex-的注意点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五、使用-vuex-的注意点","aria-hidden":"true"}},[s._v("#")]),s._v(" 五、使用 Vuex 的注意点")]),s._v(" "),e("h4",{attrs:{id:"_5-1-如何在-mutations-里传递参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-如何在-mutations-里传递参数","aria-hidden":"true"}},[s._v("#")]),s._v(" 5.1 如何在 Mutations 里传递参数")]),s._v(" "),e("p",[s._v("先"),e("code",[s._v("store.js")]),s._v("文件里给 add 方法加上一个参数 n")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(" mutations: {\n    INCREMENT(state,n) {\n      state.count+=n;\n    },\n    DECREMENT(state){\n        state.count--;\n    }\n  }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("然后在 HelloWorld.vue 里修改按钮的 commit( )方法传递的参数")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(' increment() {\n      return this.$store.commit("INCREMENT",2);\n    },\n decrement() {\n      return this.$store.commit("DECREMENT");\n    }\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h4",{attrs:{id:"_5-2-如何理解-getters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-如何理解-getters","aria-hidden":"true"}},[s._v("#")]),s._v(" 5.2 如何理解 getters")]),s._v(" "),e("p",[s._v("**getter 从表面是获得的意思，可以把他看作在获取数据之前进行的一种再编辑，相当于对数据的一个过虑和加工。**getters 就像计算属性一样，getter 的返回值会根据它的依赖被缓存起来，且只有当它的依赖值发生了改变才会被重新计算。")]),s._v(" "),e("p",[s._v("例如：要对 store.js 文件中的 count 进行操作，在它输出前，给它加上 100。")]),s._v(" "),e("p",[s._v("首先要在 store.js 里 Vuex.Store()里引入 getters")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("getters:{\n     count:state=>state.count+=100\n  }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("然后在 HelloWorld.vue 中对 computed 进行配置，在 vue 的构造器里边只能有一个 computed 属性，如果你写多个，只有最后一个 computed 属性可用，所以要用展开运算符”…”对上节写的 computed 属性进行一个改造。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('computed: {\n   ...mapGetters(["count"])\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h4",{attrs:{id:"_5-3-actions-和-mutations-区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-actions-和-mutations-区别","aria-hidden":"true"}},[s._v("#")]),s._v(" 5.3 actions 和 mutations 区别")]),s._v(" "),e("p",[s._v("actions 和上面的 Muations 功能基本一样，不同点是，"),e("strong",[s._v("actions 是异步的改变 state 状态，而 Mutation 是同步改变状态。")])]),s._v(" "),e("p",[s._v("同步的意义在于这样每一个 mutation 执行完成后都可以对应到一个新的状态，这样 devtools 就可以打个 snapshot 存下来，然后就可以随便 time-travel 了。如果你开着 devtool 调用一个异步的 action，你可以清楚地看到它所调用的 mutation 是何时被记录下来的，并且可以立刻查看它们对应的状态")]),s._v(" "),e("h3",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/ljianshu/Blog/issues/36",target:"_blank",rel:"noopener noreferrer"}},[s._v("从头开始学习 Vuex"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/qQxUCbPBYSq9vU7dvDOCzg",target:"_blank",rel:"noopener noreferrer"}},[s._v("学习 vuex 源码整体架构，打造属于自己的状态管理库"),e("OutboundLink")],1)])]),s._v(" "),e("h2",{attrs:{id:"联系作者"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#联系作者","aria-hidden":"true"}},[s._v("#")]),s._v(" 联系作者")]),s._v(" "),e("div",{attrs:{align:"center"}},[e("p",[s._v("\n        平凡世界，贵在坚持。\n    ")]),s._v(" "),e("img",{attrs:{src:s.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);t.default=n.exports}}]);