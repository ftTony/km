(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{365:function(s,n,a){"use strict";a.r(n);var e=a(4),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承","aria-hidden":"true"}},[s._v("#")]),s._v(" 继承")]),s._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("p",[s._v("本人平时学习及收集内容，欢迎参入一起讨论。")]),s._v(" "),a("h2",{attrs:{id:"内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内容","aria-hidden":"true"}},[s._v("#")]),s._v(" 内容")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E4%B8%80%E3%80%81%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BF"}},[s._v("原型链继承")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BA%8C%E3%80%81%E5%80%9F%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%BB%A7%E6%89%BF"}},[s._v("借用构造函数继承")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B8%89%E3%80%81%E7%BB%84%E5%90%88%E7%BB%A7%E6%89%BF"}},[s._v("组合继承")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E5%9B%9B%E3%80%81%E5%8E%9F%E5%9E%8B%E5%BC%8F%E7%BB%A7%E6%89%BF"}},[s._v("原型式继承")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BA%94%E3%80%81%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%A7%E6%89%BF"}},[s._v("寄生式继承")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E5%85%AD%E3%80%81%E5%AF%84%E7%94%9F%E7%BB%84%E5%90%88%E5%BC%8F%E7%BB%A7%E6%89%BF"}},[s._v("寄生组合式继承")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B8%83%E3%80%81%E6%B7%B7%E5%85%A5%E6%96%B9%E5%BC%8F%E7%BB%A7%E6%89%BF%E5%A4%9A%E4%B8%AA%E5%AF%B9%E8%B1%A1"}},[s._v("混入方式继承多个对象")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E5%85%AB%E3%80%81ES6%E7%B1%BB%E7%BB%A7%E6%89%BFextends"}},[s._v("ES6类继承extends")])])]),s._v(" "),a("h3",{attrs:{id:"一、原型链继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、原型链继承","aria-hidden":"true"}},[s._v("#")]),s._v(" 一、原型链继承")]),s._v(" "),a("p",[s._v("构造函数、原型和实例之间的关系：每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个原型对象的指针。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function SuperType() {\n    this.property = true;\n}\n\nSuperType.prototype.getSuperValue = function() {\n    return this.property;\n}\n\nfunction SubType() {\n    this.subproperty = false;\n}\n\n// 这里是关键，创建SuperType的实例，并将该实例赋值给SubType.prototype\nSubType.prototype = new SuperType(); \n\nSubType.prototype.getSubValue = function() {\n    return this.subproperty;\n}\n\nvar instance = new SubType();\nconsole.log(instance.getSuperValue()); // true\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("p",[a("img",{attrs:{src:"extends01.png",alt:""}})]),s._v(" "),a("p",[s._v("注意：不能使用对象字面量创建原型方法。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function SuperType(){\n    this.property=true;\n}\n\nSuperType.prototype.getSuperValue=function(){\n    return this.property;\n};\n\nfunction SubType(){\n    this.subproperty=false;\n}\n\n//继承了SuperType\nSubType.prototype=new SuperType();\n\n// 使用字面量添加新方法，会导致上一行代码无效\nSubType.prototype={\n    getSubValue:function(){\n        return this.subproperty;\n    },\n    someOtherMethod:function(){\n        return false;\n    }\n};\n\nvar instance=new SubType();\nalert(instance.getSuperValue());    // error!\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("p",[s._v("原型链方案存在的缺点")]),s._v(" "),a("ul",[a("li",[s._v("多个实例对引用类型的操作会被篡改")]),s._v(" "),a("li",[s._v("不能向超类型的构造函数中传递参数")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('\nfunction SuperType(){\n    this.colors=["red","blue","green"];\n}\nfunction SubType(){}\n\nSubType.prototype=new SuperType();\n\nvar instance1=new SubType();\ninstance1.colors.push(\'black\');\nalert(instance1.colors); //"red,blue,green,black"\n\nvar instance2 = new SubType(); \nalert(instance2.colors); //"red,blue,green,black"\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h3",{attrs:{id:"二、借用构造函数继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、借用构造函数继承","aria-hidden":"true"}},[s._v("#")]),s._v(" 二、借用构造函数继承")]),s._v(" "),a("p",[s._v("在子类型构造函数中内部调用超类型构造函数。通过使用apply()和call()方法执行构造函数。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    function  SuperType(){\n        this.color=["red","green","blue"];\n    }\n    function  SubType(){\n        //继承自SuperType\n        SuperType.call(this);\n    }\n    var instance1 = new SubType();\n    instance1.color.push("black");\n    alert(instance1.color);//"red,green,blue,black"\n\n    var instance2 = new SubType();\n    alert(instance2.color);//"red,green,blue"\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("缺点：")]),s._v(" "),a("ul",[a("li",[s._v("只能继承父类的实例属性和方法，不能继承原型属性/方法")]),s._v(" "),a("li",[s._v("无法实现利用，每个子类都有父类实例函数的副本，影响性能")])]),s._v(" "),a("h3",{attrs:{id:"三、组合继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、组合继承","aria-hidden":"true"}},[s._v("#")]),s._v(" 三、组合继承")]),s._v(" "),a("p",[s._v("组合继承指的是将原型链和借用构造函数的技术组合到一块，从而发挥二者之长的一种继承模式。用原型链实现对原型属性和方法的继承，用借用构造函数的技术来实现实例属性的继承。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('\n    function SuperType(name){\n    this.name = name;\n    this.colors = ["red", "blue", "green"];\n    }\n    SuperType.prototype.sayName = function(){\n    alert(this.name);\n    };\n\n    function SubType(name, age){\n    // 继承属性\n    // 第二次调用SuperType()\n    SuperType.call(this, name);\n    this.age = age;\n    }\n\n    // 继承方法\n    // 构建原型链\n    // 第一次调用SuperType()\n    SubType.prototype = new SuperType(); \n    // 重写SubType.prototype的constructor属性，指向自己的构造函数SubType\n    SubType.prototype.constructor = SubType; \n    SubType.prototype.sayAge = function(){\n        alert(this.age);\n    };\n\n    var instance1 = new SubType("Nicholas", 29);\n    instance1.colors.push("black");\n    alert(instance1.colors); //"red,blue,green,black"\n    instance1.sayName(); //"Nicholas";\n    instance1.sayAge(); //29\n\n    var instance2 = new SubType("Greg", 27);\n    alert(instance2.colors); //"red,blue,green"\n    instance2.sayName(); //"Greg";\n    instance2.sayAge(); //27\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br")])]),a("p",[s._v("优点：融合原型链继承和构造函数的优点，是 JavaScript 中最常用的继承模式。")]),s._v(" "),a("p",[s._v("缺点：会调用两次父构造函数")]),s._v(" "),a("h3",{attrs:{id:"四、原型式继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、原型式继承","aria-hidden":"true"}},[s._v("#")]),s._v(" 四、原型式继承")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function createObj(obj){\n    function F(){}\n    F.prototype=obj;\n    return new F();\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("缺点：")]),s._v(" "),a("ul",[a("li",[s._v("引用类型的属性值始终都会共享相应的值，存在篡改的可能。")]),s._v(" "),a("li",[s._v("无法传递参数")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    var person = {\n        name: 'kevin',\n        friends: ['daisy', 'kelly']\n    }\n\n    var person1 = createObj(person);\n    var person2 = createObj(person);\n\n    person1.name = 'person1';\n    console.log(person2.name); // kevin\n\n    person1.firends.push('taylor');\n    console.log(person2.friends); // [\"daisy\", \"kelly\", \"taylor\"]\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("注意：修改"),a("code",[s._v("person1.name")]),s._v("的值，"),a("code",[s._v("person2.name")]),s._v("的值并未发生改变，并不是因为"),a("code",[s._v("person1")]),s._v("和"),a("code",[s._v("person2")]),s._v("有独立的 "),a("code",[s._v("name")]),s._v(" 值，而是因为"),a("code",[s._v("person1.name = 'person1'")]),s._v("，给"),a("code",[s._v("person1")]),s._v("添加了 "),a("code",[s._v("name")]),s._v(" 值，并非修改了原型上的 "),a("code",[s._v("name")]),s._v(" 值。")]),s._v(" "),a("h3",{attrs:{id:"五、寄生式继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、寄生式继承","aria-hidden":"true"}},[s._v("#")]),s._v(" 五、寄生式继承")]),s._v(" "),a("p",[s._v("创建一个仅用于封装继承过程的函数，该函数在内部以某种形式来做增强对象，最后返回对象。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\nfunction createAnother(original){\n    var clone=createObj(original);     //通过调用createObj()函数创建一个新对象\n    clone.sayHi=function(){     // 以某种方式来增强对象\n        console.log('hi');\n    };\n    return clone;   //返回这个对象\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("缺点：")]),s._v(" "),a("ul",[a("li",[s._v("引用类型的属性值始终都会共享相应的值，存在篡改的可能。")]),s._v(" "),a("li",[s._v("无法传递参数")])]),s._v(" "),a("h3",{attrs:{id:"六、寄生组合式继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、寄生组合式继承","aria-hidden":"true"}},[s._v("#")]),s._v(" 六、寄生组合式继承")]),s._v(" "),a("p",[s._v("结合借用构造函数传递参数和寄生模式实现继承")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('\nfunction inheritPrototype(subType,superType){\n    var prototype=Object.create(superType.prototype);   // 创建对象，创建父类原型的一个副本\n    prototype.constructor=subType;  // 增加对象，弥补因重写原型而推动的默认的constructor\n    subType.prototype=prototype;\n}\n\n// 父类初始化实例属性和原型属性\nfunction SuperType(name){\n    this.name=name;\n    this.colors=[\'red\',\'blue\',\'green\'];\n}\nSuperType.prototype.sayName=function(){\n    alert(this.name);\n};\n\n// 借用构造函数传递增强子类实例属性（支持传参和避免篡改）\nfunction SubType(name,age){\n    SuperType.call(this,name);\n    this.age=age;\n}\n\n// 将父类原型指向子类\ninheritPrototype(SubType, SuperType);\n\n// 新增子类原型属性\nSubType.prototype.sayAge = function(){\n  alert(this.age);\n}\n\nvar instance1 = new SubType("xyc", 23);\nvar instance2 = new SubType("lxy", 23);\n\ninstance1.colors.push("2"); // ["red", "blue", "green", "2"]\ninstance2.colors.push("3"); // ["red", "blue", "green", "3"]\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br")])]),a("p",[a("strong",[s._v("这是最成熟的方法，也是现在库实现的方法")])]),s._v(" "),a("h3",{attrs:{id:"七、混入方式继承多个对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七、混入方式继承多个对象","aria-hidden":"true"}},[s._v("#")]),s._v(" 七、混入方式继承多个对象")]),s._v(" "),a("p",[s._v("Object.assign会把 OtherSuperClass原型上的函数拷贝到 MyClass原型上，使 MyClass 的所有实例都可用 OtherSuperClass 的方法。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\nfunction MyClass(){\n    SuperClass.call(this);\n    OtherSuperClass.call(this);\n}\n\n// 继承一个类\nMyClass.prototype=Object.create(SuperClass.prototype);\n// 混合其它\nObject.assign(MyClass.prototype, OtherSuperClass.prototype);\n// 重新指定constructor\nMyClass.prototype.constructor = MyClass;\n\nMyClass.prototype.myMethod = function() {\n     // do something\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"八、es6类继承extends"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八、es6类继承extends","aria-hidden":"true"}},[s._v("#")]),s._v(" 八、ES6类继承extends")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Rectangle{\n    // constructor\n    constructor(height,width){\n        this.height = height;\n        this.width = width;\n    }\n\n    // Getter\n    get area(){\n        return this.calcArea()\n    }\n\n    // Method\n    calcArea(){\n        return this.height * this.width;\n    }\n}\n\nconst rectangle=new Rectangle(10,20);\nconsole.log(rectangle.area);\n// 输出200\n\n//继承\nclass Square extends Rectangle{\n    constructor(length){\n        super(length,length);\n        // 如果子类中存在构造函数，则需要在使用“this”之前首先调用 super()。\n        this.name = 'Square';\n    }\n    get area() {\n        return this.height * this.width;\n    }\n}\n\nconst square = new Square(10);\nconsole.log(square.area);\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br")])]),a("p",[s._v("extends继承的核心代码如下，其实现和上述的寄生组合式继承方式一样")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\nfunction _inherits(subType,superType){\n\n    // 创建对象，创建父类原型的一个副本\n    // 增强对象，弥补因重写原型而失去的默认的constructor属性\n    // 指定对象，将新创建的对象赋值给子类的原型\n    subType.prototype=Object.create(superType && superType.prototype,{\n        constructor:{\n            value:subType,\n            enumerable:false,\n            writeable:true,\n            configurable:true\n        }\n    });\n\n    if(superType){\n        Object.setPrototypeOf ? Object.setPrototypeOf(subType,superType):subType.__proto__=superType;\n    }\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("h3",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),a("ul",[a("li",[s._v("《高程第三版》")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/yygmind/blog/issues/7",target:"_blank",rel:"noopener noreferrer"}},[s._v("JavaScript常用八种继承方案"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/16",target:"_blank",rel:"noopener noreferrer"}},[s._v("JavaScript深入之继承的多种方式和优缺点"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"联系作者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#联系作者","aria-hidden":"true"}},[s._v("#")]),s._v(" 联系作者")]),s._v(" "),a("div",{attrs:{align:"center"}},[a("p",[s._v("\n        平凡世界，贵在坚持。\n    ")]),s._v(" "),a("img",{attrs:{src:s.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);n.default=t.exports}}]);