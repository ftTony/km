(window.webpackJsonp=window.webpackJsonp||[]).push([[288],{509:function(a,t,e){"use strict";e.r(t);var r=e(13),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"webpack-原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack-原理"}},[a._v("#")]),a._v(" webpack 原理")]),a._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),e("p",[a._v("本人平时学习及收集内容，欢迎参入一起讨论。")]),a._v(" "),e("h2",{attrs:{id:"内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内容"}},[a._v("#")]),a._v(" 内容")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E4%B8%80%E3%80%81webpack-%E4%BA%8B%E4%BB%B6%E6%B5%81"}},[a._v("webpack 事件流")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E4%BA%8C%E3%80%81webpack-%E8%BF%90%E8%A1%8C%E6%B5%81%E7%A8%8B%E8%AF%A6%E8%A7%A3"}},[a._v("webpack 运行流程详解")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E4%B8%89%E3%80%81%E6%8A%BD%E8%B1%A1%E8%AF%AD%E6%B3%95%E6%A0%91%EF%BC%88ast%EF%BC%89"}},[a._v("抽象语法树（AST）")])])]),a._v(" "),e("h3",{attrs:{id:"一、webpack-事件流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、webpack-事件流"}},[a._v("#")]),a._v(" 一、webpack 事件流")]),a._v(" "),e("p",[a._v("Webpack 就像一条生产线，要经过一系列处理流程后才能将源文件转换成输出结果。 这条生产线上的每个处理流程的职责都是单一的，多个流程之间有存在依赖关系，只有完成当前处理后才能交给下一个流程去处理。 插件就像是一个插入到生产线中的一个功能，在特定的时机对生产线上的资源做处理。 Webpack 通过 "),e("a",{attrs:{href:"https://juejin.im/post/5abf33f16fb9a028e46ec352",target:"_blank",rel:"noopener noreferrer"}},[a._v("Tapable"),e("OutboundLink")],1),a._v(" 来组织这条复杂的生产线。 Webpack 在运行过程中会广播事件，插件只需要监听它所关心的事件，就能加入到这条生产线中，去改变生产线的运作。 Webpack 的事件流机制保证了插件的有序性，使得整个系统扩展性很好。")]),a._v(" "),e("h3",{attrs:{id:"二、webpack-运行流程详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、webpack-运行流程详解"}},[a._v("#")]),a._v(" 二、webpack 运行流程详解")]),a._v(" "),e("p",[a._v("Webpack 的运行流程是一个串行的过程，从启动到结束会依次执行以下流程。")]),a._v(" "),e("ul",[e("li",[a._v("初始化参数：从配置文件和 Shell 语句中读取与合并参数，得出最终的参数。")]),a._v(" "),e("li",[a._v("开始编译：用上一步得到的参数初始化 Compiler 对象，加载所有配置的插件，通过执行对象的 run 方法开始执行编译。")]),a._v(" "),e("li",[a._v("确定入口：根据配置中的 entry 找出所有入口文件。")]),a._v(" "),e("li",[a._v("编译模块：从入口文件出发，调用所有配置的 loader 对模块进行翻译，再找出该模块依赖的模块，再递归本步骤走到所有入口依赖的文件都经过了本步骤的处理。")]),a._v(" "),e("li",[a._v("完成模块编译：在经过第 4 步使用 loader 翻译完所有模块后，得到了每个模块被翻译后的最终内容及它们之间的依赖关系。")]),a._v(" "),e("li",[a._v("输出资源：根据入口和模块之间的依赖关系，组装成一个个包含多个模块的 Chunk，再将每个 Chunk 转换成一个单独的文件加入输出列表中，这是可以修改输出内容的最后机会。")]),a._v(" "),e("li",[a._v("输出完成：在确定好输出内容后，根据配置确定输出的路径和文件名，将文件的内容写入文件系统中。")])]),a._v(" "),e("p",[a._v("流程图：")]),a._v(" "),e("p",[e("img",{attrs:{src:"webpack02.jpg",alt:"images"}})]),a._v(" "),e("h3",{attrs:{id:"三、抽象语法树（ast）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、抽象语法树（ast）"}},[a._v("#")]),a._v(" 三、抽象语法树（AST）")]),a._v(" "),e("blockquote",[e("p",[a._v("在计算机科学中，抽象语法树（Abstract Syntax Tree，AST），或简称语法树（Syntax tree），是源代码语法结构的一种抽象表示。它以树状的形式表现编程语言的语法结构，树上的每个节点都表示源代码中的一种结构。之所以说语法是“抽象”的，是因为这里的语法并不会表示出真实语法中出现的每个细节。比如，嵌套括号被隐含在树的结构中，并没有以节点的形式呈现；而类似于 if-condition-then 这样的条件跳转语句，可以使用带有两个分支的节点来表示。")])]),a._v(" "),e("p",[a._v("实际上一段代码经过编译器的词分析、语法分析等阶段之后，会生成一个树状结构的“抽象语法树（AST）”，该语法树的每一个节点都对应着代码当中不同含义片段。")]),a._v(" "),e("p",[a._v("解释器是将 AST 翻译成目标语言并运行的工具。")]),a._v(" "),e("h3",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[a._v("#")]),a._v(" 参考资料")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/jerryOnlyZRJ/webpack-loader/blob/master/docs/webpack-principle.md",target:"_blank",rel:"noopener noreferrer"}},[a._v("Webpack 运行机制"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/uc4fVViv4u86TTX2XsMgFA",target:"_blank",rel:"noopener noreferrer"}},[a._v("【第 1617 期】Webpack 是怎样运行的?"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/58151131",target:"_blank",rel:"noopener noreferrer"}},[a._v("理解 webpack 原理，手写一个 100 行的 webpack"),e("OutboundLink")],1)])]),a._v(" "),e("h2",{attrs:{id:"联系作者"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#联系作者"}},[a._v("#")]),a._v(" 联系作者")]),a._v(" "),e("div",{attrs:{align:"center"}},[e("p",[a._v("\n        平凡世界，贵在坚持。\n    ")]),a._v(" "),e("img",{attrs:{src:a.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);t.default=s.exports}}]);