(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{267:function(t,a,r){"use strict";r.r(a);var e=r(4),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"http3-学习"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http3-学习","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP3 学习")]),t._v(" "),r("h2",{attrs:{id:"前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),r("p",[t._v("Google 在推 SPDY 的时候就已经意识到了 HTTP2 存在的问题，于是就另起炉灶搞了一个基于 UDP 协议的“QUIC”协议，让 HTTP 跑在 QUIC 上而不是 TCP 上。而这个“HTTP over QUIC”就是 HTTP 协议的下一个大版本，HTTP/3。它在 HTTP/2 的基础上又实现了质的飞跃，真正“完美”地解决了“队头阻塞”问题")]),t._v(" "),r("h2",{attrs:{id:"内容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内容","aria-hidden":"true"}},[t._v("#")]),t._v(" 内容")]),t._v(" "),r("ul",[r("li",[t._v("HTTP/2 的缺点")]),t._v(" "),r("li",[t._v("HTTP/3 简介")]),t._v(" "),r("li",[t._v("QUIC 协议特点")])]),t._v(" "),r("h3",{attrs:{id:"一、http-2-的缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、http-2-的缺点","aria-hidden":"true"}},[t._v("#")]),t._v(" 一、HTTP/2 的缺点")]),t._v(" "),r("ul",[r("li",[t._v("TCP 和 TCP+TLS 建立连接的延时")]),t._v(" "),r("li",[t._v("TCP 的队头阻塞并没有彻底解决")]),t._v(" "),r("li",[t._v("多路利用导致服务器压力上升")]),t._v(" "),r("li",[t._v("多路利用容易 Timeout")])]),t._v(" "),r("h4",{attrs:{id:"_1-1-tcp-和-tcp-tls-建立连接的延时"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-tcp-和-tcp-tls-建立连接的延时","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.1 TCP 和 TCP+TLS 建立连接的延时")]),t._v(" "),r("p",[t._v("TCP 连接需要和服务器进行"),r("strong",[t._v("三次握手")]),t._v("，即消耗完 1.5 个 RTT 之后才能进行数据传输。")]),t._v(" "),r("p",[t._v("TLS 连接有两个版本——TLS1.2 和 TLS1.3，每个版本建立连接所散弹的时间不同，大致需要 1~2 个 RTT。")]),t._v(" "),r("p",[t._v("RTT（Round-Trip Time）:往返时延。表示从发送端发送数据开始，到发送端收到来自收端的确认（接收端收到数据后便立即发送确认），总共经历的时延。")]),t._v(" "),r("h4",{attrs:{id:"_1-2-tcp-的队头阻塞并没有彻底解决"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-tcp-的队头阻塞并没有彻底解决","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.2 TCP 的队头阻塞并没有彻底解决")]),t._v(" "),r("p",[t._v("TCP 为了保证可靠传输，有一个“超时重传”机制，丢失的包必须等待等待重传确认。HTTP2 出现丢包时，整个 TCP 都要等待重传，那么就会阻塞该 TCP 连接中的所有请求。")]),t._v(" "),r("p",[r("img",{attrs:{src:"http3-01.jpg",alt:"images"}})]),t._v(" "),r("h4",{attrs:{id:"_1-3-多路复用导致服务器压力上升"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-多路复用导致服务器压力上升","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.3 多路复用导致服务器压力上升")]),t._v(" "),r("p",[t._v("多路复用没有限制同时请求数。请求的平均数量与往常相同，但实际会有许多请求的短暂爆发，导致瞬时 QPS 暴增。")]),t._v(" "),r("h4",{attrs:{id:"_1-4-多路复用容易-timeout"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-多路复用容易-timeout","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.4 多路复用容易 Timeout")]),t._v(" "),r("p",[t._v("大批量的请求同时发送，由于 HTTP2 连接内存在多个并行的流，而网络带宽和服务器资源有限，每个流的资源会被稀释，虽然它们开始时间相差更短，但却都可能超时。")]),t._v(" "),r("p",[t._v("即使是使用 Nginx 这样的负载均衡器，想正确进行节流也可能很棘手。其次，就算你向应用程序引入或调整")]),t._v(" "),r("h3",{attrs:{id:"二、http-3-简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、http-3-简介","aria-hidden":"true"}},[t._v("#")]),t._v(" 二、HTTP/3 简介")]),t._v(" "),r("h3",{attrs:{id:"三、quic-协议特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、quic-协议特点","aria-hidden":"true"}},[t._v("#")]),t._v(" 三、QUIC 协议特点")]),t._v(" "),r("ul",[r("li",[t._v("改进的拥塞控制、可靠传输")]),t._v(" "),r("li",[t._v("快速握手")]),t._v(" "),r("li",[t._v("集成了 TLS 1.3 加密")]),t._v(" "),r("li",[t._v("多路复用")]),t._v(" "),r("li",[t._v("连接迁移")])]),t._v(" "),r("h4",{attrs:{id:"_3-1-改进的拥塞控制、可靠传输"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-改进的拥塞控制、可靠传输","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.1 改进的拥塞控制、可靠传输")]),t._v(" "),r("p",[t._v("从拥塞算法和可靠传输本身来看，QUIC 只是按照 TCP 协议重新实现了一遍，那么 QUIC 协议到底改进在哪些方面呢？主要有如下几点：")]),t._v(" "),r("ol",[r("li",[t._v("可插拔—应用程序层面就能实现不同的拥塞控制算法")])]),t._v(" "),r("h4",{attrs:{id:"_3-2-快速握手功能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-快速握手功能","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.2 快速握手功能")]),t._v(" "),r("p",[t._v("由于 QUIC 是基于 UDP 的，所以 QUIC 可以实现 0-RTT 或者 1-RTT 来建立连接，可以大大提升首次打开页面的速度。")]),t._v(" "),r("h4",{attrs:{id:"_3-3-集成了-tls-1-3-加密"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-集成了-tls-1-3-加密","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.3 集成了 TLS 1.3 加密")]),t._v(" "),r("p",[t._v("TLS 1.3 支持 3 种基本密钥交换模式：")]),t._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("(EC)DHE（基于有限域或椭圆曲线的Diffie-Hellman）\nPSK - only\nPSK with (EC)DHE\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br")])]),r("h4",{attrs:{id:"_3-4-多路复用，彻底解决-tcp-中队头阻塞的问题。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-多路复用，彻底解决-tcp-中队头阻塞的问题。","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.4 多路复用，彻底解决 TCP 中队头阻塞的问题。")]),t._v(" "),r("h3",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://mp.weixin.qq.com/s/5jR7MrWQ9v3w_E8BhNWrpA",target:"_blank",rel:"noopener noreferrer"}},[t._v("解密 HTTP/2 与 HTTP/3 的新特性"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://mp.weixin.qq.com/s/qBD90RdofvYDNX2sSJWgNA",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP/3 要点"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://time.geekbang.org/column/article/150159",target:"_blank",rel:"noopener noreferrer"}},[t._v("31 ｜ HTTP/3：甩掉 TCP、TLS 的包袱，构建高效网络"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/102561034",target:"_blank",rel:"noopener noreferrer"}},[t._v("一文读懂 HTTP/1HTTP/2HTTP/3"),r("OutboundLink")],1)])]),t._v(" "),r("h2",{attrs:{id:"联系作者"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#联系作者","aria-hidden":"true"}},[t._v("#")]),t._v(" 联系作者")]),t._v(" "),r("div",{attrs:{align:"center"}},[r("p",[t._v("\n        平凡世界，贵在坚持。\n    ")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);a.default=s.exports}}]);