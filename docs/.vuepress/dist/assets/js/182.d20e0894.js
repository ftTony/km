(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{354:function(t,a,e){"use strict";e.r(a);var s=e(4),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vuex-学习及原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex-学习及原理","aria-hidden":"true"}},[t._v("#")]),t._v(" vuex 学习及原理")]),t._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("p",[t._v("本人平时学习及收集内容，欢迎参入一起讨论。")]),t._v(" "),e("h2",{attrs:{id:"内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内容","aria-hidden":"true"}},[t._v("#")]),t._v(" 内容")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E4%B8%80%E3%80%81vuex-%E4%BB%8B%E7%BB%8D"}},[t._v("Vuex 介绍")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E4%BA%8C%E3%80%81vuex-%E7%9A%84%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("Vuex 的原理是什么")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E4%B8%89%E3%80%81%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E4%BD%BF%E7%94%A8-vuex"}},[t._v("什么时候使用 Vuex")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E5%9B%9B%E3%80%81%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-vuex"}},[t._v("如何使用 Vuex")])])]),t._v(" "),e("h3",{attrs:{id:"一、vuex-介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、vuex-介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" 一、Vuex 介绍")]),t._v(" "),e("p",[t._v("Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。")]),t._v(" "),e("h3",{attrs:{id:"二、vuex-的原理是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、vuex-的原理是什么","aria-hidden":"true"}},[t._v("#")]),t._v(" 二、Vuex 的原理是什么")]),t._v(" "),e("p",[e("img",{attrs:{src:"vuex.png",alt:"images"}})]),t._v(" "),e("p",[t._v("Vuex 实现了一个单向数据流，在全局拥有一个 State 存放数据，当组件要更改 State 中的数据时，必须通过 Mutation 进行，Mutation 同时提供了订阅者模式供外部插件调用获取 State 数据的更新。而当所有异步操作(常见调用后端接口异步获取更新数据)或批量的同步操作需要走 Action，但 Action 也是无法直接修改 State 的，还是需要通过 Mutation 来修改 State 的数据。最后，根据 State 的变化，渲染到视图上。")]),t._v(" "),e("p",[t._v("vuex 主要包括以下几个模块：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Vue Components")]),t._v("：Vue 组件。HTML 页面上，负责接收用户操作等交互行为，执行 dispatch 方法触发对应 action 进行回应。")]),t._v(" "),e("li",[e("code",[t._v("dispatch")]),t._v("：操作行为触发方法，是唯一能执行action的方法。")]),t._v(" "),e("li",[e("code",[t._v("State")]),t._v("：页面状态管理容器对象。集中存储Vue components中data对象的零散数据，全局唯一，以进行统一的状态管理。页面显示所需的数据从该对象中进行读取，利用Vue的细粒度数据响应机制来进行高效的状态更新。")]),t._v(" "),e("li",[e("code",[t._v("Getter")]),t._v("：state对象读取方法。图中没有单独列出该模块，应该被包含在了render中，Vue Components通过该方法读取全局state对象。")]),t._v(" "),e("li",[e("code",[t._v("Mutation")]),t._v("：**状态改变操作方法，由actions中的commit('mutation 名称')来触发。**是Vuex修改state的唯一推荐方法。该方法只能进行同步操作，且方法名只能全局唯一。操作之中会有一些hook暴露出来，以进行state的监控等。")]),t._v(" "),e("li",[e("code",[t._v("Action")]),t._v("：**操作行为处理模块,由组件中的"),e("code",[t._v("$store.dispatch('action 名称', data1)")]),t._v("来触发。然后由commit()来触发mutation的调用 , 间接更新 state。**负责处理Vue Components接收到的所有交互行为。包含同步/异步操作，支持多个同名方法，按照注册的顺序依次触发。向后台API请求的操作就在这个模块中进行，包括触发其他action以及提交mutation的操作。该模块提供了Promise的封装，以支持action的链式触发。")])]),t._v(" "),e("h3",{attrs:{id:"三、什么时候使用-vuex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、什么时候使用-vuex","aria-hidden":"true"}},[t._v("#")]),t._v(" 三、什么时候使用 Vuex")]),t._v(" "),e("p",[t._v("虽然 Vuex 可以帮助我们管理共享状态，但也附带了更多的概念和框架。这需要对短期和长期效益进行权衡。")]),t._v(" "),e("p",[t._v("如果您的应用够简单，您最好不要使用 Vuex,因为使用 Vuex 可能是繁琐冗余的。一个简单的"),e("code",[t._v("global event bus")]),t._v("就跢您所需了。但是，"),e("strong",[t._v("如果您需要构建一个中大型单页应用，您很可能会考虑如何更好地在组件外部管理状态，Vuex 将会成为自然而然的选择。")])]),t._v(" "),e("h3",{attrs:{id:"四、如何使用-vuex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、如何使用-vuex","aria-hidden":"true"}},[t._v("#")]),t._v(" 四、如何使用 Vuex")]),t._v(" "),e("h4",{attrs:{id:"_4-1-创建一个store-js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-创建一个store-js","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.1 创建一个"),e("code",[t._v("store.js")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import Vue from 'vue'\nimport Vuex from 'vuex'\nVue.use(Vuex)\nconst store\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h3",{attrs:{id:"五、使用vuex的注意点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五、使用vuex的注意点","aria-hidden":"true"}},[t._v("#")]),t._v(" 五、使用Vuex的注意点")]),t._v(" "),e("h4",{attrs:{id:"_5-1-如何在mutations里传递参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-如何在mutations里传递参数","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.1 如何在Mutations里传递参数")]),t._v(" "),e("h4",{attrs:{id:"_5-2-如何理解getters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-如何理解getters","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.2 如何理解getters")]),t._v(" "),e("h4",{attrs:{id:"_5-3-actions和mutations区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-actions和mutations区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.3 actions和mutations区别")]),t._v(" "),e("p",[t._v("actions和上面的Muations功能基本一样，不同点是，"),e("strong",[t._v("actions是异步的改变state状态，而Mutation是同步改变状态。")])]),t._v(" "),e("p",[t._v("同步的意义在于这样每一个mutation执行完成后都可以对应到一个新的状态，这样devtools就可以打个snapshot存下来，然后就可以随便time-travel了。如果你开着devtool调用一个异步的action，你可以清楚地看到它所调用的mutation是何时被记录下来的，并且可以立刻查看它们对应的状态")]),t._v(" "),e("h3",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/ljianshu/Blog/issues/36",target:"_blank",rel:"noopener noreferrer"}},[t._v("从头开始学习 Vuex"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/qQxUCbPBYSq9vU7dvDOCzg",target:"_blank",rel:"noopener noreferrer"}},[t._v("学习 vuex 源码整体架构，打造属于自己的状态管理库"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"联系作者"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#联系作者","aria-hidden":"true"}},[t._v("#")]),t._v(" 联系作者")]),t._v(" "),e("div",{attrs:{align:"center"}},[e("p",[t._v("\n        平凡世界，贵在坚持。\n    ")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);a.default=r.exports}}]);