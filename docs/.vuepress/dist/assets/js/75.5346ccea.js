(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{296:function(s,a,t){"use strict";t.r(a);var e=t(13),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"css3——过滤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css3——过滤"}},[s._v("#")]),s._v(" CSS3——过滤")]),s._v(" "),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("p",[s._v("本人平时学习及收集内容，欢迎参入一起讨论。")]),s._v(" "),t("h2",{attrs:{id:"内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内容"}},[s._v("#")]),s._v(" 内容")]),s._v(" "),t("ul",[t("li",[s._v("什么是瀑布流布局")]),s._v(" "),t("li",[s._v("瀑布流的实现原理")]),s._v(" "),t("li",[s._v("瀑布流的优缺点")]),s._v(" "),t("li",[s._v("瀑布流的适用场景")]),s._v(" "),t("li",[s._v("几种常用的瀑布流布局")])]),s._v(" "),t("h3",{attrs:{id:"一、什么是瀑布流布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是瀑布流布局"}},[s._v("#")]),s._v(" 一、什么是瀑布流布局")]),s._v(" "),t("p",[t("code",[s._v("瀑布流")]),s._v("又称瀑布流式布局，是一种比较流行的页面布局方式，专业的英文名称为"),t("code",[s._v("Masonry Layouts")]),s._v("。与传统的分页显示不同，视觉表现为"),t("code",[s._v("参差不齐")]),s._v("的多栏布局。")]),s._v(" "),t("p",[t("img",{attrs:{src:"column-layout-01.png",alt:"images"}})]),s._v(" "),t("h3",{attrs:{id:"二、瀑布流的实现原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、瀑布流的实现原理"}},[s._v("#")]),s._v(" 二、瀑布流的实现原理")]),s._v(" "),t("p",[s._v("瀑布流本质上就是寻找之中高度最小的一列，并将新的元素添加到该列后面，只要有新的元素需要排列，就继续寻找所有列中的高度最小列，把后来的元素添加到高度最小列上。")]),s._v(" "),t("h4",{attrs:{id:"_2-1-图解基础瀑布流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-图解基础瀑布流"}},[s._v("#")]),s._v(" 2.1 图解基础瀑布流")]),s._v(" "),t("p",[s._v("我们看下为什么要永远寻找最小列？")]),s._v(" "),t("p",[s._v("先看图 1 的排列顺序，第一排元素的顶部会处于同一个高度，依次排列在顶端，第一排排满之后，第二排从左往右排列。然而这种排列方式很容易出现其中一列过长或其中一列过短的情况。")]),s._v(" "),t("p",[s._v("​ 为了解决图 1 中列可能过长或者过短的问题，我们按照图 2 的方式将元素放在最短的一列进行排列。")]),s._v(" "),t("p",[t("img",{attrs:{src:"column-layout-03.png",alt:"images"}})]),s._v(" "),t("h3",{attrs:{id:"三、瀑布流的优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、瀑布流的优缺点"}},[s._v("#")]),s._v(" 三、瀑布流的优缺点")]),s._v(" "),t("h4",{attrs:{id:"_3-1-优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-优点"}},[s._v("#")]),s._v(" 3.1 优点")]),s._v(" "),t("ul",[t("li",[s._v("节省空间，外表美观，更有艺术性。")]),s._v(" "),t("li",[s._v("对于触屏设备非常友好，通过向上滑动浏览")]),s._v(" "),t("li",[s._v("用户浏览时的观赏和思维不容易被打断，留存更容易。")])]),s._v(" "),t("h4",{attrs:{id:"_3-2-缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-缺点"}},[s._v("#")]),s._v(" 3.2 缺点")]),s._v(" "),t("ul",[t("li",[s._v("用户无法了解内容总长度，对内容没有宏观掌控。")]),s._v(" "),t("li",[s._v("用户无法了解现在所处的具体位置，不知道离终点还有多远。")]),s._v(" "),t("li",[s._v("回溯时不容易定位到之前看到的内容。")]),s._v(" "),t("li",[s._v("容易造成页面加载的负荷。")]),s._v(" "),t("li",[s._v("容易造成用户浏览的疲劳，没有短暂的休息时间。")])]),s._v(" "),t("h3",{attrs:{id:"三、瀑布流的适用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、瀑布流的适用场景"}},[s._v("#")]),s._v(" 三、瀑布流的适用场景")]),s._v(" "),t("p",[s._v("根据瀑布流的优缺点，我们不难得出在什么情况下选择瀑布是合理的选择：")]),s._v(" "),t("ul",[t("li",[s._v("内容以图片为主的时候，瀑布流是更好的选择。图片占用空间比较大，并且大脑理解的速度相比理解文字要快，短时间内可以扫过的内容很多，所以如果用分页显示的话用户务必会频繁的翻页，影响沉浸式的体验，而瀑布流可以解决这个问题")]),s._v(" "),t("li",[s._v("信息与信息之间相对独立时，瀑布流是更好的选择。如果信息关联性强，用户务必会进行大量的回溯操作去查看之前或者之后的信息，相反，如果信息相对独立的话，可以使用瀑布流，让用户同时接受来自不同地方的信息。")]),s._v(" "),t("li",[s._v("信息与搜索匹配比较模糊时，瀑布流是更好的选择，瀑布流给人的直观印象，就是同时显示的信息与用户搜索的匹配度大致一样，而分页显示的直观印象则是越靠上的信息被认为与用户的搜索越匹配。因此，当信息与搜索匹配度没有明显区分度时，可以采用瀑布流。")]),s._v(" "),t("li",[s._v("用户目的不强的时候，瀑布流是更好的选择。如果用户有特定需要查找的信息，分页查找定位更方便，而当目的性较弱的时候，瀑布流可以增加用户停留的时间和意想不到的收获。")])]),s._v(" "),t("h3",{attrs:{id:"四、几种常用的瀑布流布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、几种常用的瀑布流布局"}},[s._v("#")]),s._v(" 四、几种常用的瀑布流布局")]),s._v(" "),t("ul",[t("li",[s._v("multi-column")]),s._v(" "),t("li",[s._v("grid 布局")]),s._v(" "),t("li",[s._v("Flexbox 布局")])]),s._v(" "),t("h4",{attrs:{id:"_4-1-multi-column"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-multi-column"}},[s._v("#")]),s._v(" 4.1 multi-column")]),s._v(" "),t("p",[t("code",[s._v("multi-column")]),s._v("实现瀑布流主要依赖以下几个属性：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("column-count")]),s._v("：设置共有几列")]),s._v(" "),t("li",[t("code",[s._v("column-width")]),s._v("：设置每列宽度，列数由"),t("code",[s._v("总宽度")]),s._v("与"),t("code",[s._v("每列宽度")]),s._v("计算得出")]),s._v(" "),t("li",[t("code",[s._v("colunm-gap")]),s._v("：设置列与列之间的间距")])]),s._v(" "),t("p",[t("code",[s._v("column-count")]),s._v("和"),t("code",[s._v("column-width")]),s._v("都可以用来定义分栏的数目，而且并没有明确的优先级之分。优先级的计算取决与具体的场景。")]),s._v(" "),t("p",[s._v("计算方式为：计算"),t("code",[s._v("column-count")]),s._v(" 和 "),t("code",[s._v("column-width")]),s._v(" 转换后具体的列数，哪个小就用哪个。")]),s._v(" "),t("p",[s._v("具体代码如下：")]),s._v(" "),t("p",[t("strong",[s._v("CSS 代码")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(".masonry {\n    column-count: 3;\n    column-gap: 10px;\n    padding: 10px;\n}\n\n.masonry .item {\n    border: 1px solid #999;\n    margin-bottom: 10px;\n}\n\n.masonry .item img {\n    width: 100%;\n    vertical-align: middle;\n}\n\n.masonry .item .title {\n    display: block;\n    margin-left: 5px;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("p",[t("strong",[s._v("HTML 代码")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('<div class="masonry">\n        <div class="item"><img src="https://i.pinimg.com/236x/7f/24/8c/7f248c9e18abe79de0d6c79617e03361.jpg"><span\n                class="title">Consequatur in ipsa ab sapiente enim. Accusantium aut est voluptas sequi. Quibusdam neque\n                aperiam dolor. Excepturi sunt a minus fuga autem excepturi cupiditate. Fuga aspernatur incidunt\n                aliquid.</span></div>\n        <div class="item"><img src="https://i.pinimg.com/236x/a6/cd/0a/a6cd0a15d5b2909539dd7944201127d2.jpg"><span\n                class="title">Sit qui consequuntur vel quibusdam sit ea sint. Repellendus unde ducimus sed dolor sint\n                iste. Expedita voluptas iste adipisci eos. Impedit dignissimos ratione animi dolorem est.</span></div>\n        <div class="item"><img src="https://i.pinimg.com/236x/d7/fb/60/d7fb60b2321149a83ab5dbe94744ced6.jpg"><span\n                class="title">Fugiat deserunt doloremque molestiae veritatis beatae aut. Eveniet voluptas sunt\n                accusamus. Quis quos hic itaque. Eveniet est repellendus. Odit sed sint. Repellendus est et.</span>\n        </div>\n</div>\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[t("strong",[s._v("效果")])]),s._v(" "),t("p",[t("img",{attrs:{src:"column-layout-02.png",alt:"images"}})]),s._v(" "),t("p",[s._v("我们可以看到，虽然实现了"),t("code",[s._v("瀑布流")]),s._v("的效果，但奇怪的是例子中前两列的最后一个元素的"),t("code",[s._v("文本内容")]),s._v("被"),t("code",[s._v("自动断开")]),s._v("，一部分在当前列尾，一部分在下一列的列头。")]),s._v(" "),t("p",[s._v("这种展示方式是我们不希望看到的，我们希望的是每个元素都是独立的，前后不断开，此时我们需要使用"),t("code",[s._v("break-inside")]),s._v("来实现。")]),s._v(" "),t("p",[s._v("break-inside:auto | avoid")]),s._v(" "),t("ul",[t("li",[s._v("auto：元素可以中断")]),s._v(" "),t("li",[s._v("avoid：元素不能中断")])]),s._v(" "),t("p",[s._v("效果实现了，但由于"),t("code",[s._v("multi-column")]),s._v("布局中子元素排列顺序是先"),t("code",[s._v("从上往下")]),s._v("再"),t("code",[s._v("从左至右")]),s._v("，所以这种方式仅适用于数据固定不变的情况，对于滚动加载更多等可动态添加数据的情况就并不适用了。")]),s._v(" "),t("h4",{attrs:{id:"_4-2-grid-布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-grid-布局"}},[s._v("#")]),s._v(" 4.2 grid 布局")]),s._v(" "),t("p",[t("code",[s._v("Grid布局")]),s._v("是最强大的 CSS 布局方案。")]),s._v(" "),t("p",[s._v("它将网页划分成一个个网格，可以做生意组合不同的网格，做出各种各样的布局。以前，只能通过复杂的 CSS 框架达到的效果，现在浏览器内置了。")]),s._v(" "),t("h4",{attrs:{id:"_4-3-flexbox-布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-flexbox-布局"}},[s._v("#")]),s._v(" 4.3 Flexbox 布局")]),s._v(" "),t("h3",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://juejin.im/post/5ddb7a7c51882573520fb185",target:"_blank",rel:"noopener noreferrer"}},[s._v("「前端进阶」深度解析瀑布流布局"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://juejin.im/post/5e05acf0f265da33d158a1b1",target:"_blank",rel:"noopener noreferrer"}},[s._v("蘑菇街 PC 首页瀑布流实践"),t("OutboundLink")],1)])]),s._v(" "),t("h2",{attrs:{id:"联系作者"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#联系作者"}},[s._v("#")]),s._v(" 联系作者")]),s._v(" "),t("div",{attrs:{align:"center"}},[t("p",[s._v("\n        平凡世界，贵在坚持。\n    ")]),s._v(" "),t("img",{attrs:{src:s.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);a.default=n.exports}}]);