(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{388:function(e,r,t){"use strict";t.r(r);var o=t(13),v=Object(o.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"proxy-和-reflect"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#proxy-和-reflect"}},[e._v("#")]),e._v(" Proxy 和 Reflect")]),e._v(" "),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),t("p",[e._v("Proxy 用于个性某些操作的默认行为，等同于在语言层面做出修改，所以属于一种“元编程”，即对编程语言进行编程。")]),e._v(" "),t("p",[e._v("Proxy 可以理解成，在目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此提供了一种机制，可以对外界的访问进行过滤和必定。")]),e._v(" "),t("h2",{attrs:{id:"内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内容"}},[e._v("#")]),e._v(" 内容")]),e._v(" "),t("ul",[t("li",[e._v("概述")]),e._v(" "),t("li",[e._v("Proxy 实例的方法")]),e._v(" "),t("li",[e._v("this 问题")])]),e._v(" "),t("h3",{attrs:{id:"一、概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、概述"}},[e._v("#")]),e._v(" 一、概述")]),e._v(" "),t("p",[e._v("ES6 原生提供 Proxy 构造函数，用来生成 Proxy 实例。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var proxy = new Proxy(target,handler);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("code",[e._v("new Proxy()")]),e._v("表示生成一个"),t("code",[e._v("Proxy")]),e._v("实例，"),t("code",[e._v("target")]),e._v("参数表示所要拦截的目标对象，"),t("code",[e._v("handler")]),e._v("参数也是一个对象，用来寶拦截行为。")]),e._v(" "),t("h3",{attrs:{id:"二、proxy-实例的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、proxy-实例的方法"}},[e._v("#")]),e._v(" 二、Proxy 实例的方法")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("get(target,propKey,receiver)")]),e._v("：拦截对象属性的读取，比如"),t("code",[e._v("proxy.foo")]),e._v("和"),t("code",[e._v("proxy['foo']")]),e._v("。")]),e._v(" "),t("li",[t("strong",[e._v("set(target,propKey,value,receiver)")]),e._v("：拦截对象属性的设置，比如"),t("code",[e._v("proxy.foo = v")]),e._v("或"),t("code",[e._v("proxy['foo'] = v")]),e._v("，返回一个布尔值。")]),e._v(" "),t("li",[t("strong",[e._v("has(target,propKey)")]),e._v("：拦截"),t("code",[e._v("propKey in proxy")]),e._v("的操作，返回一个布尔值。")]),e._v(" "),t("li",[t("strong",[e._v("deleteProperty(target,propKey)")]),e._v("：拦截"),t("code",[e._v("delete proxy[propKey]")]),e._v("的操作，返回一个布尔值。")]),e._v(" "),t("li",[t("strong",[e._v("ownKeys(tarte)")]),e._v("：拦截"),t("code",[e._v("Object.getOwnPropertyNames(proxy)")]),e._v("、"),t("code",[e._v("Object.getOwnPropertySymbols(proxy)")]),e._v("、"),t("code",[e._v("Object.keys(proxy)")]),e._v("、"),t("code",[e._v("for...in")]),e._v("循环，返回一个数组。该方法返回目标对象所有自身的属性的属性名，而"),t("code",[e._v("Object.keys()")]),e._v("的返回结果仅包括目标对象自身的可遍历属性。")]),e._v(" "),t("li",[t("strong",[e._v("getOwnPropertyDescriptor(target,propKey)")]),e._v("：拦截"),t("code",[e._v("Object.getOwnPropertyDescriptor(proxy,propKey)")]),e._v("，返回属性的描述对象。")]),e._v(" "),t("li",[t("strong",[e._v("defineProperty(target,propKey,propDesc)")]),e._v("：拦截"),t("code",[e._v("Object.definedProperty(proxy,propKey,propDesc)")]),e._v("、"),t("code",[e._v("Object.definedProperties(proxy,propDescs)")]),e._v("，返回一个布尔值。")]),e._v(" "),t("li",[t("strong",[e._v("preventExtensions(target)")]),e._v("：拦截"),t("code",[e._v("Object.preventExtensions(proxy)")]),e._v("，返回一个布尔值。")]),e._v(" "),t("li",[t("strong",[e._v("getPrototypeOf(target)")]),e._v("：拦截"),t("code",[e._v("Object.getPrototypeOf(proxy)")]),e._v("，返回一个对象。")]),e._v(" "),t("li",[t("strong",[e._v("isExtensible(target)")]),e._v("：拦截"),t("code",[e._v("Object.isExtensible(proxy)")]),e._v(",返回一个布尔值。")]),e._v(" "),t("li",[t("strong",[e._v("setPrototypeOf(target,proto)")]),e._v("：拦截"),t("code",[e._v("Object.setPrototypeOf(proxy,proto)")]),e._v("，返回一个布尔值。如果目标对象是函数，那么还有两种额外操作可以拦截。")]),e._v(" "),t("li",[t("strong",[e._v("apply(target,object,args)")]),e._v("：拦截 Proxy 实例作为函数调用的操作，比如"),t("code",[e._v("proxy(...args)")]),e._v("、"),t("code",[e._v("proxy.call(object,...args)")]),e._v("、"),t("code",[e._v("proxy.apply(...)")]),e._v("。")]),e._v(" "),t("li",[t("strong",[e._v("construct(target,args)")]),e._v("：拦截 Proxy 实例作为构造函数调用的操作，比如"),t("code",[e._v("new Proxy(...args)")]),e._v("。")])]),e._v(" "),t("h3",{attrs:{id:"三、this-问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、this-问题"}},[e._v("#")]),e._v(" 三、this 问题")]),e._v(" "),t("p",[e._v("虽然 Proxy 可以代理针对目标对象的访问，但它不是目标对象的透明代理，即不做任何拦截的情况下，也无法保证与目标对象的行为一致。")]),e._v(" "),t("h3",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://es6.ruanyifeng.com/#docs/proxy",target:"_blank",rel:"noopener noreferrer"}},[e._v("ECMAScript 6 入门"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://yjhenan.gitbooks.io/-ecmascript-6/content/docs/proxy.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("《ECMAScript 6 入门》 第三版"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s/MfKjL8atgDInN3yTRDGk3Q",target:"_blank",rel:"noopener noreferrer"}},[e._v("ES6 之 Proxy 的巧用"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"联系作者"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#联系作者"}},[e._v("#")]),e._v(" 联系作者")]),e._v(" "),t("div",{attrs:{align:"center"}},[t("p",[e._v("\n        平凡世界，贵在坚持。\n    ")]),e._v(" "),t("img",{attrs:{src:e.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);r.default=v.exports}}]);