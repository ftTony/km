(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{255:function(t,e,s){"use strict";s.r(e);var a=s(4),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"http-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-模块","aria-hidden":"true"}},[t._v("#")]),t._v(" http 模块")]),t._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("Node.js 标准库提供了 http 模块，其中封装了一个高效的 HTTP 服务器和一个简易的 HTTP 客户端。Http.Server 是一个基于事件的 HTTP 服务器，它的核心由 Node.js 下层 C++部分实现，而接口由 JavaScript 封装，兼顾了高性能与简易性。")]),t._v(" "),s("h2",{attrs:{id:"内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内容","aria-hidden":"true"}},[t._v("#")]),t._v(" 内容")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E4%B8%80http-%E6%9C%8D%E5%8A%A1%E5%99%A8"}},[t._v("HTTP 服务器")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E4%BA%8Chttp-%E5%AE%A2%E6%88%B7%E7%AB%AF"}},[t._v("HTTP 客户端")])])]),t._v(" "),s("h3",{attrs:{id:"一、http-服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、http-服务器","aria-hidden":"true"}},[t._v("#")]),t._v(" 一、HTTP 服务器")]),t._v(" "),s("p",[t._v("接收来自客户端的请求，并将客户端请求的地址返回给客户端。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var http = require('http');\n\nhttp.createServer(function(req,res){\n    res.writeHead(200,{'Content-Type':'text/html'});\n    res.write('<h1>Node.js</h1>');\n    res.write('<h1>Hello World</h1>');\n}).listen(3000);\n\nconsole.log('HTTP server is listenging at port 3000.');\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("上面代码中，http.createServer 创建了一个 http.Server 的实例，将一个函数作为 HTTP 请求处理函数。最后该实例还调用了 listen 函数，启动服务器并监听 3000 端口。")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#11-httpserver-%E7%9A%84%E4%BA%8B%E4%BB%B6"}},[t._v("http.Server 的事件")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#12-httpserverrequest"}},[t._v("http.ServerRequest")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#13-%E8%8E%B7%E5%8F%96-get-%E8%AF%B7%E6%B1%82%E5%86%85%E5%AE%B9"}},[t._v("获取 GET 请求内容")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#14-%E8%8E%B7%E5%8F%96-post-%E8%AF%B7%E6%B1%82%E5%86%85%E5%AE%B9"}},[t._v("获取 POST 请求内容")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#15-httpserverresponse"}},[t._v("http.ServerResponse")])])]),t._v(" "),s("h4",{attrs:{id:"_1-1-http-server-的事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-http-server-的事件","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.1 http.Server 的事件")]),t._v(" "),s("p",[t._v("http.Server 是一个基于事件的 HTTP 服务器，所有的请求都被封装为独立的事件，开发者只需要对它的事件编写响应函数即可实现 HTTP 服务器的所有功能。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var http = require('http');\n\nvar server = new http.Server();\nserver.on('request',function(req,res){\n    res.writeHead(200,{'Content-Type':'text/html'});\n    res.write('<h1>Node.js</h1>');\n    res.end('<p>Hello World</p>')\n});\nserver.listen(3000);\n\nconsole.log('HTTP server is  listening at port 3000.');\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h4",{attrs:{id:"_1-2-http-serverrequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-http-serverrequest","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.2 http.ServerRequest")]),t._v(" "),s("p",[t._v("http.serverRequest 提供了以下 3 个事件用于控制请求体")]),t._v(" "),s("ul",[s("li",[t._v("data:当请求体数据到来时，该事件被触发。")]),t._v(" "),s("li",[t._v("end:当请求体数据传输完成时，该事件被触发，此后将不会再有数据到来。")]),t._v(" "),s("li",[t._v("close:用户当前请求结束时，该事件被触发。")])]),t._v(" "),s("p",[t._v("http.serverRequest 相关属性")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("名称")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("complete")]),t._v(" "),s("td",[t._v("客户端请求是否已经发送完成")])]),t._v(" "),s("tr",[s("td",[t._v("httpVersion")]),t._v(" "),s("td",[t._v("HTTP 协议版本，通常是 1.0 或 1.1")])]),t._v(" "),s("tr",[s("td",[t._v("method")]),t._v(" "),s("td",[t._v("HTTP 请求方法，如 GET、POST、PUT、DELETE 等")])]),t._v(" "),s("tr",[s("td",[t._v("url")]),t._v(" "),s("td",[t._v("原始的请求路径，例如 /static/image/x.jpg 或 /user?name=byvoid")])]),t._v(" "),s("tr",[s("td",[t._v("headers")]),t._v(" "),s("td",[t._v("HTTP 请求头")])]),t._v(" "),s("tr",[s("td",[t._v("trailers")]),t._v(" "),s("td",[t._v("HTTP 请求尾(不常见)")])]),t._v(" "),s("tr",[s("td",[t._v("connection")]),t._v(" "),s("td",[t._v("当前 HTTP 连接套接字，为 net.Socket 的实例")])]),t._v(" "),s("tr",[s("td",[t._v("socket")]),t._v(" "),s("td",[t._v("connection 属性的别名")])]),t._v(" "),s("tr",[s("td",[t._v("client")]),t._v(" "),s("td",[t._v("client 属性的别名")])])])]),t._v(" "),s("h4",{attrs:{id:"_1-3-获取-get-请求内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-获取-get-请求内容","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.3 获取 GET 请求内容")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var http = require('http');\nvar url = require('url');\nvar util = require('util');\nhttp.createServer(function(req,res){\n    res.writeHead(200,{'Content-Type':'text/plain'});\n    res.end(util.inspect(url.parse(req.url,true)));\n}).listen(3000);\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("通过 url.parse1，原始的 path 被解析为一个对象，其中 query 就是我们所谓的 GET 请求的内容，而路径则是 pathname。")]),t._v(" "),s("h4",{attrs:{id:"_1-4-获取-post-请求内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-获取-post-请求内容","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.4 获取 POST 请求内容")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var http = require('http');\nvar querystring = require('querystring');\nvar util = require('util');\nhttp.createServer(function(req,res){\n    var post = '';\n\n    req.on('data',function(chunk){\n        post +=chunk;\n    });\n\n    req.on('end',function(){\n        post = querystring.parse(post);\n        res.end(util.inspect(post);)\n    })\n}).listen(3000);\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("p",[t._v("通过 req 的 data 事件监听函数，每当接受到请求体的数据， 就累加到 post 变量中。")]),t._v(" "),s("h4",{attrs:{id:"_1-5-http-serverresponse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-http-serverresponse","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.5 http.ServerResponse")]),t._v(" "),s("p",[t._v("http.ServerResponse 是返回给客户端的信息，决定了用户最终能看到的结果。")]),t._v(" "),s("p",[t._v("http.ServerResponse 有三个重要的成员函数，用于返回响应头、响应内容以及结束 请求。")]),t._v(" "),s("ul",[s("li",[t._v("response.writeHead(statusCode, [headers]):向请求的客户端发送响应头。 statusCode 是 HTTP 状态码，如 200 (请求成功)、404 (未找到)等。headers 是一个类似关联数组的对象，表示响应头的每个属性。该函数在一个请求内最多只 能调用一次，如果不调用，则会自动生成一个响应头。")]),t._v(" "),s("li",[t._v("response.write(data, [encoding]):向请求的客户端发送响应内容。data 是 一个 Buffer 或字符串，表示要发送的内容。如果 data 是字符串，那么需要指定 encoding 来说明它的编码方式，默认是 utf-8。在 response.end 调用之前， response.write 可以被多次调用。")]),t._v(" "),s("li",[t._v("response.end([data], [encoding]):结束响应，告知客户端所有发送已经完 成。当所有要返回的内容发送完毕的时候，该函数 必须 被调用一次。它接受两个可 选参数，意义和 response.write 相同。如果不调用该函数，客户端将永远处于 等待状态。")])]),t._v(" "),s("h3",{attrs:{id:"二、http-客户端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、http-客户端","aria-hidden":"true"}},[t._v("#")]),t._v(" 二、HTTP 客户端")]),t._v(" "),s("p",[t._v("向服务器发起请求，并将服务器返回的内容打印到控制台。")]),t._v(" "),s("p",[t._v("http 模块提供了两个函数 http.request 和 http.get，功能是作为客户端向 HTTP 服务器发起请求。")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#21-httprequestoptions-callback"}},[t._v("http.request")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#22-httpgetoptions-callback"}},[t._v("http.get")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#23-httpclientrequest"}},[t._v("http.ClientRequest")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#24-httpclientresponse"}},[t._v("http.ClientResponse")])])]),t._v(" "),s("h4",{attrs:{id:"_2-1-http-request-options-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-http-request-options-callback","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1 http.request(options, callback)")]),t._v(" "),s("p",[t._v("接受两个参数，option 是 一个类似关联数组的对象，表示请求的参数，callback 是请求的回调函数。option 常用的参数如下所示。")]),t._v(" "),s("ul",[s("li",[t._v("host :请求网站的域名或 IP 地址。")]),t._v(" "),s("li",[t._v("port :请求网站的端口，默认 80。")]),t._v(" "),s("li",[t._v("method :请求方法，默认是 GET。")]),t._v(" "),s("li",[t._v("path :请求的相对于根的路径，默认是“/”。QueryString 应该包含在其中。\n例如 /search?query=byvoid。")]),t._v(" "),s("li",[t._v("headers :一个关联数组对象，为请求头的内容。")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var http = require('http');\nvar querystring = require('querystring');\n\nvar contents = querystring.stringfy({\n    name:'tony',\n    email:`fftony@163.com`,\n    address: 'Zijing 2#,Tsinghua University'\n});\n\nvar options = {\n    host:'www.fttony.com',\n    path:'/application/node/post.php',\n    method:'post',\n    headers:{\n        'Content-Type':'application/x-www-form-urlencoded',\n        'Content-Length':contents.length\n    }\n};\n\nvar req = http.request(options,function(res){\n    res.setEncoding('utf8');\n    res.on('data',function(data){\n        console.log(data);\n    })\n})\n\nreq.write(contents);\nreq.end();\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br")])]),s("h4",{attrs:{id:"_2-2-http-get-options-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-http-get-options-callback","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.2 http.get(options, callback)")]),t._v(" "),s("p",[t._v("http.get(options, callback) http 模块还提供了一个更加简便的方法用于处 理 GET 请求:http.get。它是 http.request 的简化版，唯一的区别在于 http.get 自动将请求方法设为了 GET 请求，同时不需要手动调用 req.end()。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\nvar http = require('http');\nhttp.get({host: 'www.byvoid.com'}, function(res) { res.setEncoding('utf8');\nres.on('data', function (data) {\n           console.log(data);\n         });\n});\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h4",{attrs:{id:"_2-3-http-clientrequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-http-clientrequest","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.3 http.ClientRequest")]),t._v(" "),s("p",[t._v("http.ClientRequest 是由 http.request 或 http.get 返回产生的对象，表示一\n个已经产生而且正在进行中的 HTTP 请求。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var http = require('http');\nvar req = http.get({host: 'www.byvoid.com'});\nreq.on('response', function(res) { res.setEncoding('utf8'); res.on('data', function (data) {\n        console.log(data);\n      });\n});\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("http.ClientRequest 还提供了以下函数。")]),t._v(" "),s("ul",[s("li",[t._v("request.abort():终止正在发送的请求。")]),t._v(" "),s("li",[t._v("request.setTimeout(timeout, [callback]):设置请求超时时间，timeout 为\n毫秒数。当请求超时以后，callback 将会被调用。")])]),t._v(" "),s("h4",{attrs:{id:"_2-4-http-clientresponse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-http-clientresponse","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.4 http.ClientResponse")]),t._v(" "),s("p",[t._v("http.ClientResponse 与 http.ServerRequest 相似，提供了三个事件 data、end\n和 close，分别在数据到达、传输结束和连接结束时触发，其中 data 事件传递一个参数 chunk，表示接收到的数据。")]),t._v(" "),s("p",[t._v("ClientResponse 的属性")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("名称")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("statusCode")]),t._v(" "),s("td",[t._v("HTTP 状态码，如 200、404、500")])]),t._v(" "),s("tr",[s("td",[t._v("httpVersion")]),t._v(" "),s("td",[t._v("HTTP 协议版本，通常是 1.0 或 1.1")])]),t._v(" "),s("tr",[s("td",[t._v("headers")]),t._v(" "),s("td",[t._v("HTTP 请求头")])]),t._v(" "),s("tr",[s("td",[t._v("trailers")]),t._v(" "),s("td",[t._v("HTTP 请求尾(不常见)")])])])]),t._v(" "),s("p",[t._v("http.ClientResponse 还提供了以下几个特殊的函数。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("response.setEncoding([encoding]):设置默认的编码，当 data 事件被触发\n时，数据将会以 encoding 编码。默认值是 null，即不编码，以 Buffer 的形式存储。常用编码为 utf8。")])]),t._v(" "),s("li",[s("p",[t._v("response.pause():暂停接收数据和发送事件，方便实现下载功能。")])]),t._v(" "),s("li",[s("p",[t._v("response.resume():从暂停的状态中恢复。")])])]),t._v(" "),s("h3",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ul",[s("li",[t._v("《nodejs 开发指南》")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/chyingp/nodejs-learning-guide/blob/master/%E6%A8%A1%E5%9D%97/http.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("http 模块概览"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"联系作者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#联系作者","aria-hidden":"true"}},[t._v("#")]),t._v(" 联系作者")]),t._v(" "),s("div",{attrs:{align:"center"}},[s("p",[t._v("\n        平凡世界，贵在坚持。\n    ")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);e.default=r.exports}}]);