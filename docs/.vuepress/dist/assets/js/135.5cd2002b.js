(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{355:function(s,n,a){"use strict";a.r(n);var e=a(13),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[s._v("#")]),s._v(" 闭包")]),s._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("p",[s._v("本人平时学习及收集内容，欢迎参入一起讨论。")]),s._v(" "),a("h2",{attrs:{id:"内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内容"}},[s._v("#")]),s._v(" 内容")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E4%B8%80%E9%97%AD%E5%8C%85%E5%AE%9A%E4%B9%89"}},[s._v("闭包定义")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BA%8C%E9%97%AD%E5%8C%85%E7%89%B9%E7%82%B9"}},[s._v("闭包特点")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B8%89%E9%97%AD%E5%8C%85%E4%BC%98%E7%82%B9%E5%8F%8A%E7%BC%BA%E7%82%B9"}},[s._v("闭包优点及缺点")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E5%9B%9B%E9%97%AD%E5%8C%85%E7%9A%84%E5%BA%94%E7%94%A8"}},[s._v("闭包的应用")])])]),s._v(" "),a("h3",{attrs:{id:"一、闭包定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、闭包定义"}},[s._v("#")]),s._v(" 一、闭包定义")]),s._v(" "),a("p",[a("strong",[s._v("闭包")]),s._v("是指有权访问另一个函数作用域中的变量的函数，创建闭包的最常见的方式就是在一个函数内创建另一个函数，通过另一个函数访问这个函数的局部变量（高程第3版）")]),s._v(" "),a("p",[s._v("MDN 对闭包的定义为："),a("strong",[s._v("闭包是指那些能够访问自由变量的函数。")])]),s._v(" "),a("p",[s._v("其中"),a("strong",[s._v("自由变量")]),s._v("，指在函数中使用的，但既不是函数参数arguments也不是函数的局部变量的变量，其实就是另外一个函数作用域中的变量。")]),s._v(" "),a("h3",{attrs:{id:"二、闭包特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、闭包特点"}},[s._v("#")]),s._v(" 二、闭包特点")]),s._v(" "),a("p",[s._v("2.1 定义在一个函数内部的函数。\n2.2 函数内部可以引用函数外部的参数和变量。\n2.3 作为一个函数变量的一个引用，当函数返回时，其处于激活状态。\n3.4 当一个函数返回时，一个闭包就是一个没有释放资源的栈区。函数的参数和变量不会被垃圾回收机制回收。")]),s._v(" "),a("h3",{attrs:{id:"三、闭包优点及缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、闭包优点及缺点"}},[s._v("#")]),s._v(" 三、闭包优点及缺点")]),s._v(" "),a("p",[a("strong",[s._v("优点")])]),s._v(" "),a("p",[s._v("3.1 希望一个变量长期驻扎在内存中\n3.2 避免全局变量的污染\n3.3 私有成员的存在")]),s._v(" "),a("p",[a("strong",[s._v("缺点")])]),s._v(" "),a("p",[s._v("闭包的缺点就是常驻内存，会增大内存使用量，使用不当很容易造成内存泄露。")]),s._v(" "),a("h3",{attrs:{id:"四、闭包的应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、闭包的应用"}},[s._v("#")]),s._v(" 四、闭包的应用")]),s._v(" "),a("h4",{attrs:{id:"_4-1-维护函数内的变量安全-避免全局变量的污染。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-维护函数内的变量安全-避免全局变量的污染。"}},[s._v("#")]),s._v(" 4.1 维护函数内的变量安全,避免全局变量的污染。")]),s._v(" "),a("p",[s._v("函数a中i只有函数b才能访问，而无法通过其他途径访问到。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function xzavier(){\n    var i = 1;\n    i++;\n    console.log(i);\n}\nxzavier();   //2 \nconsole.log(x);   // x is not defined                 \nxzavier();   //2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h4",{attrs:{id:"_4-2-维持一个变量不被回收。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-维持一个变量不被回收。"}},[s._v("#")]),s._v(" 4.2 维持一个变量不被回收。")]),s._v(" "),a("p",[s._v("由于闭包，函数a中i的一直存在于内存中，因此每次执行c()，都会给i自加1，且i不被垃圾回收机制回收。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    function a() {  \n        var i = 1;  \n        function b() { \n            console.log(i++); \n        }  \n        return b; \n    }\n    var c = a(); \n    c();  //1\n    c();  //2\n    c();  //3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h4",{attrs:{id:"_4-3-通过第1点的特性设计私有的方法和属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-通过第1点的特性设计私有的方法和属性"}},[s._v("#")]),s._v(" 4.3 通过第1点的特性设计私有的方法和属性")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var xzavier = (function(){\n    var i = 1;\n    var s = 'xzavier';\n    function f(){\n        i++;\n        console.log(i);\n    }\n    return {\n        i:i,\n        s:s,             \n        f:f\n    }\n})();\nxzavier.s;     //'xzavier'\nxzavier.s;     //1\nxzavier.f()    //2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h4",{attrs:{id:"_4-4-操作dom获取目标元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-操作dom获取目标元素"}},[s._v("#")]),s._v(" 4.4 操作DOM获取目标元素")]),s._v(" "),a("p",[s._v("方法2即使用了闭包的方法，当然操作DOM还是有别的方法的，比如事件委托就比较好用。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ul id=\"test\">\n    <li>first</li>\n    <li>second</li>\n    <li>third</li>\n</ul>\n// 方法一：this方法\nvar lis = document.getElementById('test').getElementsByTagName('li');\nfor(var i = 0;i < 3;i++){\n    lis[i].index = i;\n    lis[i].onclick = function(){\n        console.log(this.index);\n    };\n} \n// 方法二：闭包方法\nvar lis = document.getElementById('test').getElementsByTagName('li');\nfor(var i = 0;i < 3;i++){\n    lis[i].index = i;\n    lis[i].onclick = (function(val){\n        return function() {\n            console.log(val);\n        }\n    })(i);\n}\n// 方法三 事件委托方法\nvar oUl = document.getElementById('test');\noUl.addEventListener('click',function(e){\n    var lis = e.target;\n    console.log(lis); \n});\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("h4",{attrs:{id:"_4-5-封装模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-封装模块"}},[s._v("#")]),s._v(" 4.5 封装模块")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var Xzavier = function(){       \n    var name = "xzavier";       \n    return {    \n       getName : function(){    \n           return name;    \n       },    \n       setName : function(newName){    \n           name = newName;    \n       }    \n    }    \n}();    \n\nconsole.log(person.name); //undefined，变量作用域为函数内部，外部无法访问    \nconsole.log(person.getName()); // "xzavier" \nperson.setName("xz");    \nconsole.log(person.getName());  //"xz"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h4",{attrs:{id:"_4-6-实现类和继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-实现类和继承"}},[s._v("#")]),s._v(" 4.6 实现类和继承")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('function Xzavier(){       \n    var name = "xzavier";       \n    return {    \n       getName : function(){    \n           return name;    \n       },    \n       setName : function(newName){    \n           name = newName;    \n       }    \n    }    \n}\n\nvar xz = new Xzavier();  //Xzavier就是一个类，可以实例化\nconsole.log(xz.getName());  // "xzavier"  \n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h3",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000006855822",target:"_blank",rel:"noopener noreferrer"}},[s._v("详解js闭包"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/Un057KVwWgJxEcUHSVZKbw",target:"_blank",rel:"noopener noreferrer"}},[s._v("动画：什么是闭包？"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"联系作者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#联系作者"}},[s._v("#")]),s._v(" 联系作者")]),s._v(" "),a("div",{attrs:{align:"center"}},[a("p",[s._v("\n        平凡世界，贵在坚持。\n    ")]),s._v(" "),a("img",{attrs:{src:s.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);n.default=t.exports}}]);