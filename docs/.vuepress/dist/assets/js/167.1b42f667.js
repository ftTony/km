(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{448:function(a,e,s){"use strict";s.r(e);var n=s(4),t=Object(n.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"diff-算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法","aria-hidden":"true"}},[a._v("#")]),a._v(" diff 算法")]),a._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),s("p",[a._v("本人平时学习及收集内容，欢迎参入一起讨论。")]),a._v(" "),s("h2",{attrs:{id:"内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内容","aria-hidden":"true"}},[a._v("#")]),a._v(" 内容")]),a._v(" "),s("ul",[s("li",[a._v("virtual dom")]),a._v(" "),s("li",[a._v("分析diff")]),a._v(" "),s("li",[a._v("算法实现")])]),a._v(" "),s("h3",{attrs:{id:"一、virtual-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、virtual-dom","aria-hidden":"true"}},[a._v("#")]),a._v(" 一、virtual dom")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"二、分析diff"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、分析diff","aria-hidden":"true"}},[a._v("#")]),a._v(" 二、分析diff")]),a._v(" "),s("p",[a._v("一篇相当经典的文章"),s("a",{attrs:{href:"https://calendar.perfplanet.com/2013/diff/",target:"_blank",rel:"noopener noreferrer"}},[a._v("React’s diff algorithm"),s("OutboundLink")],1),a._v("中的图，react的diff其实和vue的diff大同小异。所以这张图能很好解释过程。"),s("strong",[a._v("比较只会在同层级进行，不会跨层级比较。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"vue09.png",alt:"images"}})]),a._v(" "),s("p",[a._v("举个形象的例子。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("\x3c!-- 之前 --\x3e\n<div>           \x3c!-- 层级1 --\x3e\n  <p>            \x3c!-- 层级2 --\x3e\n    <b> aoy </b>   \x3c!-- 层级3 --\x3e   \n    <span>diff</Span>\n  </P> \n</div>\n\n\x3c!-- 之后 --\x3e\n<div>            \x3c!-- 层级1 --\x3e\n  <p>             \x3c!-- 层级2 --\x3e\n      <b> aoy </b>        \x3c!-- 层级3 --\x3e\n  </p>\n  <span>diff</Span>\n</div>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br")])]),s("p",[a._v("我们可能期望将"),s("code",[a._v("<span>")]),a._v("直接移动到"),s("code",[a._v("<p>")]),a._v("的后边，这是最优的操作。但是实际的diff操作是移除"),s("code",[a._v("<p>")]),a._v("里的"),s("code",[a._v("<span>")]),a._v("再创建一个新的"),s("code",[a._v("<span>")]),a._v("插到"),s("code",[a._v("<p>")]),a._v("的后边。因为新加的"),s("code",[a._v("<span>")]),a._v("在层级2，旧的在层级3，属于不同层级的比较。")]),a._v(" "),s("h4",{attrs:{id:"源码分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#源码分析","aria-hidden":"true"}},[a._v("#")]),a._v(" 源码分析")]),a._v(" "),s("h3",{attrs:{id:"三、算法实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、算法实现","aria-hidden":"true"}},[a._v("#")]),a._v(" 三、算法实现")]),a._v(" "),s("ul",[s("li",[a._v("用JS对象模拟DOM树")]),a._v(" "),s("li",[a._v("比较两棵虚拟DOM树的差异")]),a._v(" "),s("li",[a._v("把差异应用到真正的DOM树上")])]),a._v(" "),s("h4",{attrs:{id:"_3-1-用js对象模拟dom树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-用js对象模拟dom树","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.1 用JS对象模拟DOM树")]),a._v(" "),s("p",[a._v("用JavaScript来表示一个DOM节点是很简单的事情，你只需要记录它的节点类型、属性，还有子节点：")]),a._v(" "),s("p",[a._v("element.js")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function Element(tagName,props,children){\n    this.tagName = tagName\n    this.props = props\n    this.children = children\n}\n\nmodule.exports = function(tagName,props,children){\n  return new Element(tagName,props,children)\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("p",[a._v("例如上面的DOM结构就可以简单的表示：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var el = require('./element')\n\nvar ul = el('ul',{id:'list'},[\n  el('li',{class:'item'},['Item 1']),\n  el('li',{class:'item'},['Item 2']),\n  el('li',{class:'item'},['Item 3']),\n])\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[a._v("现在"),s("code",[a._v("ul")]),a._v("只是一个JavaScript对象表示的DOM结构，页面上并没有这个结构。我们可以根据这个"),s("code",[a._v("ul")]),a._v("构建真正的"),s("code",[a._v("<ul>")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Element.prototype.render = function(){\n  var el = document.createElement(this.tagName) // 根据tagName构建\n  var props = this.props\n\n  for(var propName in props){ // 设置节点的DOM属性\n    var propValue = props[propName]\n    el.setAttribute(propName,propValue)\n  }\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("h4",{attrs:{id:"_3-2-比较两棵虚拟dom树的差异"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-比较两棵虚拟dom树的差异","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.2 比较两棵虚拟DOM树的差异")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code")]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"})]),s("h4",{attrs:{id:"_3-3-把差异应用到真正的dom树上"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-把差异应用到真正的dom树上","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.3 把差异应用到真正的DOM树上")]),a._v(" "),s("p",[a._v("因为步骤一所构建的构建的JavaScript对象树和"),s("code",[a._v("render")]),a._v("出来真正的DOM树的信息、结构是一样的。所以我们可以对那棵DOM树也进行尝试优先的遍历，遍历的时候从步骤二生成的"),s("code",[a._v("patches")]),a._v("对象中找出当前遍历的节点差异，然后进DOM操作。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function patch(node,patches){\n  var walker = {index:0}\n  dfsWalk(node,walker,patches)\n}\n\nfunction dfsWalk(node,walker,patches){\n  var currentPatches = patches[walker.index]  // 从patches拿出当前节点的差异\n\n  var len = node.childNodes ? node.childNodes.length:0\n  for(var i=0;i<len;i++){\n    var child = node.childNodes[i]\n    walker.index++\n    dfsWalk(child, walker, patches)\n  }\n\n  if(currentPatches){\n    applyPatches(node, currentPatches) // 对当前节点进行DOM操作\n  }\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br")])]),s("p",[a._v("applyPathes,根据不同类型的差异对当前节点进行DOM操作：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function applyPatches (node, currentPatches) {\n  currentPatches.forEach(function (currentPatch) {\n    switch (currentPatch.type) {\n      case REPLACE:\n        node.parentNode.replaceChild(currentPatch.node.render(), node)\n        break\n      case REORDER:\n        reorderChildren(node, currentPatch.moves)\n        break\n      case PROPS:\n        setProps(node, currentPatch.props)\n        break\n      case TEXT:\n        node.textContent = currentPatch.content\n        break\n      default:\n        throw new Error('Unknown patch type ' + currentPatch.type)\n    }\n  })\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br")])]),s("h3",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[a._v("#")]),a._v(" 参考资料")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/livoras/blog/issues/13",target:"_blank",rel:"noopener noreferrer"}},[a._v("如何实现一个 Virtual DOM 算法"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/aooy/blog/issues/2",target:"_blank",rel:"noopener noreferrer"}},[a._v("Diff 算法"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/livoras/simple-virtual-dom",target:"_blank",rel:"noopener noreferrer"}},[a._v("simple-virtual-dom"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s/EeN7E8uQS4R_JJloPX8fCQ",target:"_blank",rel:"noopener noreferrer"}},[a._v("揭秘 Vue 中的 Virtual Dom"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s/9nB2bfDczNFRpUTiBwup8Q",target:"_blank",rel:"noopener noreferrer"}},[a._v("Virtual Dom 和 Diff 算法"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/81752104",target:"_blank",rel:"noopener noreferrer"}},[a._v("【Vue原理】Diff - 白话版"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/29450092",target:"_blank",rel:"noopener noreferrer"}},[a._v("VirtualDOM与diff(Vue实现)"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s/oAlVmZ4Hbt2VhOwFEkNEhw",target:"_blank",rel:"noopener noreferrer"}},[a._v("虚拟 DOM 到底是什么？"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://www.404forest.com/2019/03/07/modern-web-development-tech-analysis-virtual-dom/",target:"_blank",rel:"noopener noreferrer"}},[a._v("现代前端科技解析 —— Virtual DOM"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.im/post/5d36cc575188257aea108a74",target:"_blank",rel:"noopener noreferrer"}},[a._v("深入剖析：Vue核心之虚拟DOM"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.im/post/5c8e5e4951882545c109ae9c",target:"_blank",rel:"noopener noreferrer"}},[a._v("让虚拟DOM和DOM-diff不再成为你的绊脚石"),s("OutboundLink")],1)])]),a._v(" "),s("h2",{attrs:{id:"联系作者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#联系作者","aria-hidden":"true"}},[a._v("#")]),a._v(" 联系作者")]),a._v(" "),s("div",{attrs:{align:"center"}},[s("p",[a._v("\n        平凡世界，贵在坚持。\n    ")]),a._v(" "),s("img",{attrs:{src:a.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);e.default=t.exports}}]);