(window.webpackJsonp=window.webpackJsonp||[]).push([[173],{360:function(a,s,e){"use strict";e.r(s);var n=e(4),t=Object(n.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"diff-算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法","aria-hidden":"true"}},[a._v("#")]),a._v(" diff 算法")]),a._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),e("p",[a._v("本人平时学习及收集内容，欢迎参入一起讨论。")]),a._v(" "),e("h2",{attrs:{id:"内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内容","aria-hidden":"true"}},[a._v("#")]),a._v(" 内容")]),a._v(" "),e("ul",[e("li",[a._v("分析 diff")]),a._v(" "),e("li",[a._v("算法实现")])]),a._v(" "),e("h3",{attrs:{id:"一、分析-diff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、分析-diff","aria-hidden":"true"}},[a._v("#")]),a._v(" 一、分析 diff")]),a._v(" "),e("p",[a._v("一篇相当经典的文章"),e("a",{attrs:{href:"https://calendar.perfplanet.com/2013/diff/",target:"_blank",rel:"noopener noreferrer"}},[a._v("React’s diff algorithm"),e("OutboundLink")],1),a._v("中的图，react 的 diff 其实和 vue 的 diff 大同小异。所以这张图能很好解释过程。"),e("strong",[a._v("比较只会在同层级进行，不会跨层级比较。")])]),a._v(" "),e("p",[e("img",{attrs:{src:"vue09.png",alt:"images"}})]),a._v(" "),e("p",[a._v("举个形象的例子。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\x3c!-- 之前 --\x3e\n<div>           \x3c!-- 层级1 --\x3e\n  <p>            \x3c!-- 层级2 --\x3e\n    <b> aoy </b>   \x3c!-- 层级3 --\x3e\n    <span>diff</Span>\n  </P>\n</div>\n\n\x3c!-- 之后 --\x3e\n<div>            \x3c!-- 层级1 --\x3e\n  <p>             \x3c!-- 层级2 --\x3e\n      <b> aoy </b>        \x3c!-- 层级3 --\x3e\n  </p>\n  <span>diff</Span>\n</div>\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br")])]),e("p",[a._v("我们可能期望将"),e("code",[a._v("<span>")]),a._v("直接移动到"),e("code",[a._v("<p>")]),a._v("的后边，这是最优的操作。但是实际的 diff 操作是移除"),e("code",[a._v("<p>")]),a._v("里的"),e("code",[a._v("<span>")]),a._v("再创建一个新的"),e("code",[a._v("<span>")]),a._v("插到"),e("code",[a._v("<p>")]),a._v("的后边。因为新加的"),e("code",[a._v("<span>")]),a._v("在层级 2，旧的在层级 3，属于不同层级的比较。")]),a._v(" "),e("h4",{attrs:{id:"源码分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#源码分析","aria-hidden":"true"}},[a._v("#")]),a._v(" 源码分析")]),a._v(" "),e("h3",{attrs:{id:"二、算法实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、算法实现","aria-hidden":"true"}},[a._v("#")]),a._v(" 二、算法实现")]),a._v(" "),e("ul",[e("li",[a._v("用 JS 对象模拟 DOM 树")]),a._v(" "),e("li",[a._v("比较两棵虚拟 DOM 树的差异")]),a._v(" "),e("li",[a._v("把差异应用到真正的 DOM 树上")])]),a._v(" "),e("h4",{attrs:{id:"_3-1-用-js-对象模拟-dom-树"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-用-js-对象模拟-dom-树","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.1 用 JS 对象模拟 DOM 树")]),a._v(" "),e("p",[a._v("用 JavaScript 来表示一个 DOM 节点是很简单的事情，你只需要记录它的节点类型、属性，还有子节点：")]),a._v(" "),e("p",[a._v("element.js")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function Element(tagName,props,children){\n    this.tagName = tagName\n    this.props = props\n    this.children = children\n}\n\nmodule.exports = function(tagName,props,children){\n  return new Element(tagName,props,children)\n}\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br")])]),e("p",[a._v("例如上面的 DOM 结构就可以简单的表示：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var el = require('./element')\n\nvar ul = el('ul',{id:'list'},[\n  el('li',{class:'item'},['Item 1']),\n  el('li',{class:'item'},['Item 2']),\n  el('li',{class:'item'},['Item 3']),\n])\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("p",[a._v("现在"),e("code",[a._v("ul")]),a._v("只是一个 JavaScript 对象表示的 DOM 结构，页面上并没有这个结构。我们可以根据这个"),e("code",[a._v("ul")]),a._v("构建真正的"),e("code",[a._v("<ul>")]),a._v(":")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Element.prototype.render = function(){\n  var el = document.createElement(this.tagName) // 根据tagName构建\n  var props = this.props\n\n  for(var propName in props){ // 设置节点的DOM属性\n    var propValue = props[propName]\n    el.setAttribute(propName,propValue)\n  }\n}\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br")])]),e("h4",{attrs:{id:"_3-2-比较两棵虚拟-dom-树的差异"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-比较两棵虚拟-dom-树的差异","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.2 比较两棵虚拟 DOM 树的差异")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h4",{attrs:{id:"_3-3-把差异应用到真正的-dom-树上"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-把差异应用到真正的-dom-树上","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.3 把差异应用到真正的 DOM 树上")]),a._v(" "),e("p",[a._v("因为步骤一所构建的构建的 JavaScript 对象树和"),e("code",[a._v("render")]),a._v("出来真正的 DOM 树的信息、结构是一样的。所以我们可以对那棵 DOM 树也进行尝试优先的遍历，遍历的时候从步骤二生成的"),e("code",[a._v("patches")]),a._v("对象中找出当前遍历的节点差异，然后进 DOM 操作。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function patch(node,patches){\n  var walker = {index:0}\n  dfsWalk(node,walker,patches)\n}\n\nfunction dfsWalk(node,walker,patches){\n  var currentPatches = patches[walker.index]  // 从patches拿出当前节点的差异\n\n  var len = node.childNodes ? node.childNodes.length:0\n  for(var i=0;i<len;i++){\n    var child = node.childNodes[i]\n    walker.index++\n    dfsWalk(child, walker, patches)\n  }\n\n  if(currentPatches){\n    applyPatches(node, currentPatches) // 对当前节点进行DOM操作\n  }\n}\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br")])]),e("p",[a._v("applyPathes,根据不同类型的差异对当前节点进行 DOM 操作：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function applyPatches (node, currentPatches) {\n  currentPatches.forEach(function (currentPatch) {\n    switch (currentPatch.type) {\n      case REPLACE:\n        node.parentNode.replaceChild(currentPatch.node.render(), node)\n        break\n      case REORDER:\n        reorderChildren(node, currentPatch.moves)\n        break\n      case PROPS:\n        setProps(node, currentPatch.props)\n        break\n      case TEXT:\n        node.textContent = currentPatch.content\n        break\n      default:\n        throw new Error('Unknown patch type ' + currentPatch.type)\n    }\n  })\n}\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br")])]),e("h3",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[a._v("#")]),a._v(" 参考资料")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/aooy/blog/issues/2",target:"_blank",rel:"noopener noreferrer"}},[a._v("Diff 算法"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/livoras/simple-virtual-dom",target:"_blank",rel:"noopener noreferrer"}},[a._v("simple-virtual-dom"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/9nB2bfDczNFRpUTiBwup8Q",target:"_blank",rel:"noopener noreferrer"}},[a._v("Virtual Dom 和 Diff 算法"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/81752104",target:"_blank",rel:"noopener noreferrer"}},[a._v("【Vue 原理】Diff - 白话版"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/29450092",target:"_blank",rel:"noopener noreferrer"}},[a._v("VirtualDOM 与 diff(Vue 实现)"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.im/post/5c8e5e4951882545c109ae9c",target:"_blank",rel:"noopener noreferrer"}},[a._v("让虚拟 DOM 和 DOM-diff 不再成为你的绊脚石"),e("OutboundLink")],1)])]),a._v(" "),e("h2",{attrs:{id:"联系作者"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#联系作者","aria-hidden":"true"}},[a._v("#")]),a._v(" 联系作者")]),a._v(" "),e("div",{attrs:{align:"center"}},[e("p",[a._v("\n        平凡世界，贵在坚持。\n    ")]),a._v(" "),e("img",{attrs:{src:a.$withBase("/about/contact.png")}})])])}),[],!1,null,null,null);s.default=t.exports}}]);