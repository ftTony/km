(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{427:function(n,e,s){"use strict";s.r(e);var a=s(13),t=Object(a.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"虚拟-dom-解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟-dom-解析"}},[n._v("#")]),n._v(" 虚拟 DOM 解析")]),n._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[n._v("#")]),n._v(" 前言")]),n._v(" "),s("p",[n._v("本人平时学习及收集内容，欢迎参入一起讨论。")]),n._v(" "),s("h2",{attrs:{id:"内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内容"}},[n._v("#")]),n._v(" 内容")]),n._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E4%B8%80%E3%80%81%E8%99%9A%E6%8B%9F-DOM-%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9"}},[n._v("虚拟 DOM 的优缺点")])]),n._v(" "),s("li",[s("a",{attrs:{href:"#%E4%BA%8C%E3%80%81%E8%99%9A%E6%8B%9F-DOM-%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86"}},[n._v("虚拟 DOM 的实现原理")])]),n._v(" "),s("li",[s("a",{attrs:{href:"#%E4%B8%89%E3%80%81%60JS%60%E5%AF%B9%E8%B1%A1%E6%A8%A1%E6%8B%9F%60DOM%60%E6%A0%91"}},[s("code",[n._v("JS")]),n._v("对象模拟"),s("code",[n._v("DOM")]),n._v("树")])]),n._v(" "),s("li",[s("a",{attrs:{href:"#%E5%9B%9B%E3%80%81diff-%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0"}},[n._v("diff 算法实现")])]),n._v(" "),s("li",[s("a",{attrs:{href:"#%E4%BA%94%E3%80%81pach-%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0"}},[n._v("pach 方法实现")])]),n._v(" "),s("li",[s("a",{attrs:{href:"#%E5%85%AD%E3%80%81%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90"}},[n._v("源码分析")])])]),n._v(" "),s("h3",{attrs:{id:"一、虚拟-dom-的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、虚拟-dom-的优缺点"}},[n._v("#")]),n._v(" 一、虚拟 DOM 的优缺点")]),n._v(" "),s("p",[n._v("DOM 引擎、JS 引擎相互独立，但又工作在同一线程（主线程）JS 代码调用 DOM API 必须挂起 JS 引擎、转换传入参数数据、激活 DOM 引擎，DOM 重绘后南转换可能有的返回值，最后激活 JS 引擎并继续执行频繁的 DOM API 调用，且浏览器厂商不做“批量处理”优化，引擎间切换的单位代价将那事积累若其中有强制重绘的 DOM API 调用，重新计算布局、重新绘制图像引起更大的性能消耗。")]),n._v(" "),s("ul",[s("li",[n._v("优点")]),n._v(" "),s("li",[n._v("缺点")])]),n._v(" "),s("h4",{attrs:{id:"优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[n._v("#")]),n._v(" 优点")]),n._v(" "),s("ul",[s("li",[s("strong",[n._v("保证性能下限")]),n._v("：框架的虚拟 DOM 需要甜酸任何上层 API 可能产生的操作，它的一些 DOM 操作的实现必须是普适的，所以它的性能并不是最优的；但是比起粗暴的 DOM 操作性能要好很多，因此框架的虚拟 DOM 至少可以保证在你不需要手动优化的情况下，依然可以提供还不错的性能，即保证性能的下限；")]),n._v(" "),s("li",[s("strong",[n._v("无需手动操作 DOM")]),n._v("：我们不再需要手动去操作 DOM，只需要写好 View-Model 的代码逻辑，框架会根据虚拟 DOM 和数据双向绑定，帮我们以可预期的方式更新视图，极大提高我们的开发效率；")]),n._v(" "),s("li",[s("strong",[n._v("跨平台")]),n._v("：虚拟 DOM 本质上是 JavaScript 对象，而 DOM 与平台强相关，相比之下虚拟 DOM 可以进行更方便地跨平台操作，例如服务器渲染、weex 开发等等。")])]),n._v(" "),s("h4",{attrs:{id:"缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[n._v("#")]),n._v(" 缺点")]),n._v(" "),s("ul",[s("li",[s("strong",[n._v("无法进行极致优化")]),n._v("：虽然虽然虚拟 DOM+合理的优化，足以应对绝大部分应用的性能需求，但在一些性能要求极高的应用中虚拟 DOM 无法进行针对性的极致优化。")])]),n._v(" "),s("h3",{attrs:{id:"二、虚拟-dom-的实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、虚拟-dom-的实现原理"}},[n._v("#")]),n._v(" 二、虚拟 DOM 的实现原理")]),n._v(" "),s("p",[n._v("虚拟 DOM 的实现原理主要包括以下 3 部分：")]),n._v(" "),s("ul",[s("li",[n._v("用 JavaScript 对象模拟真实 DOM 树，对真实 DOM 进行抽象；")]),n._v(" "),s("li",[n._v("diff 算法 — 比较两棵虚拟 DOM 树的差异；")]),n._v(" "),s("li",[n._v("pach 算法 — 将两个虚拟 DOM 对象的差异应用到真正的 DOM 树。")])]),n._v(" "),s("h3",{attrs:{id:"三、js对象模拟dom树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、js对象模拟dom树"}},[n._v("#")]),n._v(" 三、"),s("code",[n._v("JS")]),n._v("对象模拟"),s("code",[n._v("DOM")]),n._v("树")]),n._v(" "),s("p",[n._v("用 JavaScript 来表示一个 DOM 节点是很简单的事情，你只需要记录它的节点类型、属性，还有子节点：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function Element(tagName,props,children){\n    if(!(this instanceof Element)){\n        if(!_.isArray(children) && children !=null){\n            children = _.slice(arguments,2).filter(_.truthy)\n        }\n        return new Element(tagName,props,children)\n    }\n\n    if(_.isArray(props)){\n        children = props\n        props = {}\n    }\n\n    this.tagName = tagName\n    this.props = props || {}\n    this.chilren = children || []\n    this.key = props ? props.key: 666\n\n    var count = 0\n\n    _.each(this.children,function(child,i){\n        if(child instanceof Element){\n            count += child.count\n        }else{\n            children[i] = '' +child\n        }\n        count++\n    })\n\n    this.count = count\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br")])]),s("p",[n._v("如何将"),s("code",[n._v("ul")]),n._v("渲染页面上真实的"),s("code",[n._v("DOM")]),n._v("结构，相关渲染函数如下：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("Element.prototype.render = function(){\n    var el = document.createElement(this.tagName)\n    var props = this.props\n\n    for(var propName in props){\n        var propValue = props[propName]\n        _.setAttr(el,propName,propValue)\n    }\n\n    _.each(this.children,function(child){\n        var childEl = (child instanceof Element)?child.render():document.createTextNode(child)\n        el.appendChild(childEl)\n    })\n\n    return el\n}\n\nmodule.exports = Element\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br")])]),s("h3",{attrs:{id:"四、diff-算法实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、diff-算法实现"}},[n._v("#")]),n._v(" 四、diff 算法实现")]),n._v(" "),s("ul",[s("li",[n._v("深度优先遍历，记录差异")]),n._v(" "),s("li",[n._v("差异类型")]),n._v(" "),s("li",[n._v("列表对比算法")]),n._v(" "),s("li",[n._v("实例输出")])]),n._v(" "),s("p",[s("code",[n._v("diff")]),n._v("算法用来比较两棵"),s("code",[n._v("Virtual DOM")]),n._v("树的差异，如果需要两棵树的完全比较，那么"),s("code",[n._v("diff")]),n._v("算法的时间复杂为"),s("code",[n._v("O(n^3)")]),n._v("。但是前端当中，你很少会跨越层级地移动"),s("code",[n._v("DOM")]),n._v("元素，所以"),s("code",[n._v("Virtual DOM")]),n._v("只会对同一个层级的元素进行对比，如下图所示，"),s("code",[n._v("div")]),n._v("只会和同一层级的"),s("code",[n._v("div")]),n._v("对比，第二层级会跟第二层级对比，这样算法复杂度就可以达到"),s("code",[n._v("O(n)")]),n._v("。")]),n._v(" "),s("p",[s("img",{attrs:{src:"vue-diff-12.png",alt:"images"}})]),n._v(" "),s("h4",{attrs:{id:"_4-1-深度优先遍历，记录差异"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-深度优先遍历，记录差异"}},[n._v("#")]),n._v(" 4.1 深度优先遍历，记录差异")]),n._v(" "),s("p",[n._v("在实际的代码中，会对新旧两棵树进行一个深度优先的遍历，这样每个节点都会有一个唯一的标记：")]),n._v(" "),s("p",[s("a",{attrs:{href:"vue-diff-13.png"}},[n._v("images")])]),n._v(" "),s("p",[n._v("在深度优先遍历的时候，每遍历到一个节点就把该节点和新的树进行对比。如果有差异的话就记录到一个对象里面。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function diff(oldTree,newTree){\n    var index= 0\n    var patches = {}\n    dfsWalk(oldTree,newTree,index,patches)\n    return patches\n}\n\n// 对两棵树进行深度优先遍历\nfunction dfsWalk(){\n    var currentPatch = []\n    if(typeof (oldNode) === 'string' && typeof (newNode) === 'string'){\n        // 文本内容改变\n        if(newNode !== oldNode){\n            currentPath.push({type:patch.TEXT,content:newNode})\n        }\n    }else if(newNode!==null && oldNode.tagName === newNode.tagName && oldNode.key === newNode.key){\n        // 节点相同，比较属性\n        var propsPatches = diffProps(oldNode,newNode)\n        if(propsPatches){\n            currentPatch.push({type:patch.PROPS,props:propsPatches})\n        }\n\n        // 比较子节点，如果子节点有'ignore'属性，则不需要比较\n        if(!isIgnoreChild(newNode)){\n            diffChildren(oldNode.children,newNode.children,index,patches,currentPatch)\n        }\n    }else if(newNode!==null){\n        // 新节点和旧节点不同，用replace替换\n        currentPatch.push({type:patch.REPLACE,node:newNode})\n    }\n\n    if(currentPatch.length){\n        patches[index] = currentPatch\n    }\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br")])]),s("p",[n._v("从以上可以得出，"),s("code",[n._v("patchs[1]")]),n._v("表示"),s("code",[n._v("p")]),n._v("，"),s("code",[n._v("patches[3]")]),n._v("表示"),s("code",[n._v("ul")]),n._v("，以此类推。")]),n._v(" "),s("h3",{attrs:{id:"_4-2-差异类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-差异类型"}},[n._v("#")]),n._v(" 4.2 差异类型")]),n._v(" "),s("p",[s("code",[n._v("DOM")]),n._v(" 操作导致的差异类型包括以下几种：")]),n._v(" "),s("ul",[s("li",[n._v("节点替换：节点改变了，例如将上面的"),s("code",[n._v("div")]),n._v("换成"),s("code",[n._v("h1")]),n._v("；")]),n._v(" "),s("li",[n._v("顺序互换：移动、删除、新增子节点，例如上面"),s("code",[n._v("div")]),n._v("的子节点，把"),s("code",[n._v("p")]),n._v("和"),s("code",[n._v("ul")]),n._v("顺序互换；")]),n._v(" "),s("li",[n._v("属性更改：修改了节点的属性，例如把上面"),s("code",[n._v("li")]),n._v("的"),s("code",[n._v("class")]),n._v("样式类删除；")]),n._v(" "),s("li",[n._v("文本改变：改变文本节点的文本内容，例如将上面"),s("code",[n._v("p")]),n._v("节点的文本内容理性为"),s("code",[n._v("Real DOM")]),n._v("；")])]),n._v(" "),s("p",[n._v("以上描述的几种差异类型在代码中定义如下所示：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("var REPLACE = 0 // 替换原先的节点\nvar REORDER = 1 // 重新排序\nvar PROPS = 2 // 修改了节点的属性\nvar TEXT = 3 // 文本内容改变\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("h4",{attrs:{id:"_4-3-列表对比算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-列表对比算法"}},[n._v("#")]),n._v(" 4.3 列表对比算法")]),n._v(" "),s("p",[n._v("子节点的对比算法，例如"),s("code",[n._v("p，ul，div")]),n._v("的顺序换成了"),s("code",[n._v("div，p，ul")]),n._v("。这个该怎么对比？如果按照同层级进行顺序对比的话，它们都会被替换掉。如"),s("code",[n._v("p")]),n._v("和"),s("code",[n._v("div")]),n._v("的"),s("code",[n._v("tagName")]),n._v("不同，"),s("code",[n._v("p")]),n._v("会被"),s("code",[n._v("div")]),n._v("所替代。最终，三个节点都会被替换，这样"),s("code",[n._v("DOM")]),n._v("开销就非常大。而实际上是不需要替换节点，而只需要经过节点移动就可以达到，我们只需知道怎么进行移动。")]),n._v(" "),s("p",[n._v("将这个总是抽象出来其实就是字符串的最小编辑距离问题（"),s("code",[n._v("Edition Distance")]),n._v("），最常见的解决方法是"),s("code",[n._v("Levenshtein Distance")]),n._v("，"),s("code",[n._v("Levenshtein Distance")]),n._v("是一个度量两个字符序列之间差异的字符串度量标准，两个单词之间的"),s("code",[n._v("Levenshtein Distance")]),n._v("是将一个单词转换为另一个单词所需的单字符编辑（插入、删除或替换）的最小数量。"),s("code",[n._v("Levenshtein Distance")]),n._v("是 1965 年由苏联数学家 Vladimir Levenshtein 发明的。"),s("code",[n._v("Levenshtein Distance")]),n._v("也被称为编辑距离，通过"),s("strong",[n._v("动态规则")]),n._v("求解，时间复杂度为 "),s("code",[n._v("O(M*N)")]),n._v("。")]),n._v(" "),s("p",[n._v("定义：对两个字符串"),s("code",[n._v("a、b")]),n._v("，则他们的"),s("code",[n._v("Levenshtein Distance")]),n._v("为：")]),n._v(" "),s("p",[s("a",{attrs:{href:"vue-diff-14.png"}},[n._v("images")])]),n._v(" "),s("p",[n._v("示例：字符串"),s("code",[n._v("a")]),n._v("和"),s("code",[n._v("b")]),n._v("，"),s("code",[n._v('a="abcde"，b="cabef"')]),n._v("，根据上面给出的计算公式，则他们的"),s("code",[n._v("Levenshtein Distance")]),n._v("的计算过程如下：")]),n._v(" "),s("p",[s("a",{attrs:{href:"vue-diff-15.png"}},[n._v("images")])]),n._v(" "),s("p",[n._v("本文的"),s("code",[n._v("demo")]),n._v("使用插件"),s("code",[n._v("list-diff2")]),n._v("算法进行比较，该算法的时间复杂"),s("code",[n._v("O(n*m)")]),n._v("，虽然该算法并非最优的算法，但是用于对于"),s("code",[n._v("dom")]),n._v("元素的常规操作是足够的。")]),n._v(" "),s("h4",{attrs:{id:"_4-4-实例输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-实例输出"}},[n._v("#")]),n._v(" 4.4 实例输出")]),n._v(" "),s("p",[n._v("两个虚拟"),s("code",[n._v("DOM")]),n._v("对象如下图所示，其中"),s("code",[n._v("ul1")]),n._v("表示原有的虚拟"),s("code",[n._v("DOM")]),n._v("树，"),s("code",[n._v("ul2")]),n._v("表示改变后的虚拟"),s("code",[n._v("DOM")]),n._v("树")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("var ul1 = el('div',{id: 'virtual-dom'},[\n    el('p',{},['Virtual DOM']),\n    el('ul',{id:'list'},[\n        el('li',{class:'item'},['Item 1']),\n        el('li',{class:'item'},['Item 2']),\n        el('li',{class:'item'},['Item 3'])\n    ]),\n    el('div',{},['Hello World'])\n])\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br")])]),s("p",[n._v("我们查看输出的两个虚拟"),s("code",[n._v("DOM")]),n._v("对象之间的差异对象如下图所示，我们能通过差异对象得到，两个虚拟"),s("code",[n._v("DOM")]),n._v("对象之间进行了哪些变化，从而根据这个差异对象（"),s("code",[n._v("patches")]),n._v("）更改原先的真实"),s("code",[n._v("DOM")]),n._v("结构，从而将页面的"),s("code",[n._v("DOM")]),n._v("结构进行更改。")]),n._v(" "),s("p",[s("img",{attrs:{src:"vue-diff-16.png",alt:"images"}})]),n._v(" "),s("h3",{attrs:{id:"五、pach-方法实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、pach-方法实现"}},[n._v("#")]),n._v(" 五、pach 方法实现")]),n._v(" "),s("ul",[s("li",[n._v("深度优先遍历"),s("code",[n._v("DOM")]),n._v("树")]),n._v(" "),s("li",[n._v("对原有"),s("code",[n._v("DOM")]),n._v("树进行"),s("code",[n._v("DOM")]),n._v("操作")]),n._v(" "),s("li",[n._v("DOM 结构改变")])]),n._v(" "),s("h4",{attrs:{id:"_5-1-深度优先遍历-dom-树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-深度优先遍历-dom-树"}},[n._v("#")]),n._v(" 5.1 深度优先遍历 DOM 树")]),n._v(" "),s("p",[n._v("所构建的"),s("code",[n._v("JavaScript")]),n._v("对象树和"),s("code",[n._v("render")]),n._v("出来真正的"),s("code",[n._v("DOM")]),n._v("树的信息、结构是一样的。所以我们可以对那棵"),s("code",[n._v("DOM")]),n._v("树也进行深度优先的遍历，遍历的时候从上一个步骤生成的"),s("code",[n._v("patches")]),n._v("对象中找出当前遍历的节点差异")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function patch(node,patches){\n    var walker = {index: 0}\n    dfsWalk(node,walker,patches)\n}\n\nfunction dfsWalk(node,walker,patches){\n    // 从patches拿出当前节点的差异\n    var currentPatches = patches[walker.index]\n\n    var len = node.childNodes ? node.childNodes.length:0\n\n    // 深度遍历子节点\n    for(var i = 0; i< len;i++){\n        var child = node.childNodes[i]\n        walker.index++\n        dfsWalk(child,walker,patches)\n    }\n    // 对当前节点进行DOM操作\n    if(currentPatches){\n        applyPatches(node,currentPatches)\n    }\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br")])]),s("h4",{attrs:{id:"_5-2-对原有-dom-树进行-dom-操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-对原有-dom-树进行-dom-操作"}},[n._v("#")]),n._v(" 5.2 对原有 DOM 树进行 DOM 操作")]),n._v(" "),s("p",[n._v("我们根据不同类型的差异对当前节点进行不同的"),s("code",[n._v("DOM")]),n._v("操作 ，例如如果进行了节点替换，就进行节点替换"),s("code",[n._v("DOM")]),n._v("操作 ；如果节点文本发生了改变，则进行文本替换的"),s("code",[n._v("DOM")]),n._v("操作 ；以及子节点重排属性改变等"),s("code",[n._v("DOM")]),n._v("操作，相关代码如"),s("code",[n._v("applyPathes")]),n._v("所示：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function applyPatches (node, currentPatches) {\n  currentPatches.forEach(function (currentPatch) {\n    switch (currentPatch.type) {\n      case REPLACE:\n        node.parentNode.replaceChild(currentPatch.node.render(), node)\n        break\n      case REORDER:\n        reorderChildren(node, currentPatch.moves)\n        break\n      case PROPS:\n        setProps(node, currentPatch.props)\n        break\n      case TEXT:\n        node.textContent = currentPatch.content\n        break\n      default:\n        throw new Error('Unknown patch type ' + currentPatch.type)\n    }\n  })\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br")])]),s("h4",{attrs:{id:"_5-3-dom-结构改变"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-dom-结构改变"}},[n._v("#")]),n._v(" 5.3 DOM 结构改变")]),n._v(" "),s("p",[n._v("通过将上一步骤得到的两个"),s("code",[n._v("DOM")]),n._v("对象之间的差异，应用到第一个（原先）"),s("code",[n._v("DOM")]),n._v("结构中，我们看到"),s("code",[n._v("DOM")]),n._v("结构进行了预期的变化，如下图所示：")]),n._v(" "),s("p",[s("img",{attrs:{src:"vue-diff-17.png",alt:"images"}})]),n._v(" "),s("h3",{attrs:{id:"六、源码分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、源码分析"}},[n._v("#")]),n._v(" 六、源码分析")]),n._v(" "),s("h4",{attrs:{id:"_6-1-vmode模拟dom树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-vmode模拟dom树"}},[n._v("#")]),n._v(" 6.1 "),s("code",[n._v("VMode")]),n._v("模拟"),s("code",[n._v("DOM")]),n._v("树")]),n._v(" "),s("p",[n._v("在"),s("code",[n._v("Vue.js")]),n._v("中，"),s("code",[n._v("Virtual DOM")]),n._v("是用"),s("code",[n._v("VNode")]),n._v("这个"),s("code",[n._v("Class")]),n._v("去描述，它定义在"),s("code",[n._v("src/core/vdom/vnode.js")]),n._v("中，从以下代码块中可以看到"),s("code",[n._v("Vue.js")]),n._v("中的"),s("code",[n._v("Virtual DOM")]),n._v("的定义较为复杂一些，因为它这里包含了很多"),s("code",[n._v("Vue.js")]),n._v("的特性。实际上"),s("code",[n._v("Vue.js")]),n._v("中"),s("code",[n._v("Virtual DOM")]),n._v("是借鉴了一个开源库"),s("a",{attrs:{href:"https://github.com/snabbdom/snabbdom",target:"_blank",rel:"noopener noreferrer"}},[n._v("snabbdom"),s("OutboundLink")],1),n._v("的实现，然后加入了一些"),s("code",[n._v("Vue.js")]),n._v("的一些特性。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("export default class VNode {\n  tag: string | void;\n  data: VNodeData | void;\n  children: ?Array<VNode>;\n  text: string | void;\n  elm: Node | void;\n  ns: string | void;\n  context: Component | void; // rendered in this component's scope\n  key: string | number | void;\n  componentOptions: VNodeComponentOptions | void;\n  componentInstance: Component | void; // component instance\n  parent: VNode | void; // component placeholder node\n\n  // strictly internal\n  raw: boolean; // contains raw HTML? (server only)\n  isStatic: boolean; // hoisted static node\n  isRootInsert: boolean; // necessary for enter transition check\n  isComment: boolean; // empty comment placeholder?\n  isCloned: boolean; // is a cloned node?\n  isOnce: boolean; // is a v-once node?\n  asyncFactory: Function | void; // async component factory function\n  asyncMeta: Object | void;\n  isAsyncPlaceholder: boolean;\n  ssrContext: Object | void;\n  fnContext: Component | void; // real context vm for functional nodes\n  fnOptions: ?ComponentOptions; // for SSR caching\n  devtoolsMeta: ?Object; // used to store functional render context for devtools\n  fnScopeId: ?string; // functional scope id support\n\n  constructor (\n    tag?: string,\n    data?: VNodeData,\n    children?: ?Array<VNode>,\n    text?: string,\n    elm?: Node,\n    context?: Component,\n    componentOptions?: VNodeComponentOptions,\n    asyncFactory?: Function\n  ) {\n    this.tag = tag\n    this.data = data\n    this.children = children\n    this.text = text\n    this.elm = elm\n    this.ns = undefined\n    this.context = context\n    this.fnContext = undefined\n    this.fnOptions = undefined\n    this.fnScopeId = undefined\n    this.key = data && data.key\n    this.componentOptions = componentOptions\n    this.componentInstance = undefined\n    this.parent = undefined\n    this.raw = false\n    this.isStatic = false\n    this.isRootInsert = true\n    this.isComment = false\n    this.isCloned = false\n    this.isOnce = false\n    this.asyncFactory = asyncFactory\n    this.asyncMeta = undefined\n    this.isAsyncPlaceholder = false\n  }\n\n  // DEPRECATED: alias for componentInstance for backwards compat.\n  /* istanbul ignore next */\n  get child (): Component | void {\n    return this.componentInstance\n  }\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br")])]),s("p",[n._v("这里有几个核心的属性")]),n._v(" "),s("ul",[s("li",[s("code",[n._v("tag")]),n._v("属性即这个"),s("code",[n._v("vnode")]),n._v("的标签属性")]),n._v(" "),s("li",[s("code",[n._v("data")]),n._v("属性包含了最后渲染成真实"),s("code",[n._v("dom")]),n._v("节点后，节点上的"),s("code",[n._v("class")]),n._v("，"),s("code",[n._v("attribute")]),n._v("，"),s("code",[n._v("style")]),n._v("以及绑定的事件")]),n._v(" "),s("li",[s("code",[n._v("children")]),n._v("属性是"),s("code",[n._v("vnode")]),n._v("的子节点")]),n._v(" "),s("li",[s("code",[n._v("text")]),n._v("属性是文本属性")]),n._v(" "),s("li",[s("code",[n._v("elm")]),n._v("属性为这个"),s("code",[n._v("vnode")]),n._v("对应的真实"),s("code",[n._v("dom")]),n._v("节点")]),n._v(" "),s("li",[s("code",[n._v("key")]),n._v("属性"),s("code",[n._v("vnode")]),n._v("的标记，在"),s("code",[n._v("diff")]),n._v("过程中可以提高"),s("code",[n._v("diff")]),n._v("的效率")])]),n._v(" "),s("p",[s("strong",[n._v("源码创建 VNode 过程")])]),n._v(" "),s("p",[n._v("我们在实例化一个"),s("code",[n._v("vue")]),n._v("实例，也即"),s("code",[n._v("new Vue()")]),n._v("时，实际上是执行"),s("code",[n._v("src/core/instance/index.js")]),n._v("中定义的"),s("code",[n._v("Function")]),n._v("函数。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function Vue(options){\n    if(process.env.NODE_ENV !=='production' && !(this instanceof Vue)){\n         warn('Vue is a constructor and should be called with the `new` keyword')\n    }\n    this._init(options)\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br")])]),s("p",[n._v("通过查看"),s("code",[n._v("Vue")]),n._v("的"),s("code",[n._v("function")]),n._v("，我们知道"),s("code",[n._v("Vue")]),n._v("只能通过"),s("code",[n._v("new")]),n._v("关键字初始化，然后调用"),s("code",[n._v("this._init")]),n._v("方法，该方法在"),s("code",[n._v("src/core/instance/init.js")]),n._v("中定义。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("Vue.prototype._init = function(options){\n    const vm = this\n\n    // 省略一系列其它初始化的代码\n\n    if(vm.$options.el){\n        console.log('');\n        vm.$mount(vm.$options.el)\n    }\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br")])]),s("p",[s("strong",[n._v("Vue 实例挂载")])]),n._v(" "),s("p",[s("code",[n._v("Vue")]),n._v("中是通过"),s("code",[n._v("$mount")]),n._v("实例方法去挂载"),s("code",[n._v("dom")]),n._v("的，下面我们通过分析"),s("code",[n._v("compiler")]),n._v("版本的"),s("code",[n._v("mount")]),n._v("实现，相关源码在目录``文件中定义：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("const mount = Vue.prototype.$mount\nVue.prototype.$mount = function(el,hydrating){\n    el = el && query(el)\n    // 省略一系列初始化以及逻辑判断代码\n    return mount.call(this, el, hydrating)\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br")])]),s("p",[n._v("我们发现最终还是调用用原先原型上的"),s("code",[n._v("$mount")]),n._v("方法挂载，原先原型上的"),s("code",[n._v("$mount")]),n._v("方法在"),s("code",[n._v("src/platforms/web/runtime/index.js")]),n._v("中定义。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("Vue.prototype.$mount = function(el,hydrating){\n    el = el && inBrowser ? query(el) : undefined\n    return mountCompon(this,el,hydrating)\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("p",[n._v("我们发现"),s("code",[n._v("$mount")]),n._v("方法实际上会去调用"),s("code",[n._v("mountComponent")]),n._v("方法，这个方法定义在"),s("code",[n._v("src/core/instance/lifecycle.js")]),n._v("文件中")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("export function mountComponent(vm,el,hydrating){\n    vm.$el = el\n     // 省略一系列其它代码\n  let updateComponent\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = () => {\n      // 生成虚拟 vnode\n      const vnode = vm._render()\n      // 更新 DOM\n      vm._update(vnode, hydrating)\n\n    }\n  } else {\n    updateComponent = () => {\n      vm._update(vm._render(), hydrating)\n    }\n  }\n\n  // 实例化一个渲染Watcher，在它的回调函数中会调用 updateComponent 方法\n  new Watcher(vm, updateComponent, noop, {\n    before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate')\n      }\n    }\n  }, true /* isRenderWatcher */)\n  hydrating = false\n\n  return vm\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br")])]),s("p",[n._v("从上面的代码可以看到，"),s("code",[n._v("mountComponent")]),n._v("核心就是先实例化一个渲染"),s("code",[n._v("Watcher")]),n._v("，在它的回调函数中会调用"),s("code",[n._v("updateComponent")]),n._v("方法，在此方法")]),n._v(" "),s("p",[s("strong",[n._v("创建虚拟 Node")])]),n._v(" "),s("p",[s("code",[n._v("Vue")]),n._v("的"),s("code",[n._v("_render")]),n._v("方法是实例的一个私有方法，它用来把实例渲染成一个虚拟"),s("code",[n._v("Node")]),n._v("。它的定义在"),s("code",[n._v("src/core/instance/render.js")]),n._v("文件中：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('Vue.prototype._render = function(){\n     const vm = this\n     const {render,_parentVnode} = vm.$options\n     let vnode\n     try{\n         // 省略一系列代码\n         currentRenderingInstance = vm\n         // 调用createElement 方法来返回vnode\n         vnode = render.call(vm._renderProxy,vm.$createElement)\n     }catch(e){\n         handleError(e,vm,`render`){}\n     }\n     vnode.parent = _parentVnode\n     console.log("vnode...:",vnode)\n     return vnode\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br")])]),s("p",[s("code",[n._v("Vue.js")]),n._v("利用"),s("code",[n._v("_createElement")]),n._v("方法创建"),s("code",[n._v("VNode")]),n._v("，它定义在"),s("code",[n._v("src/core/vdom/create-elemenet.js")]),n._v("中：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("export function _createElement (\n  context: Component,\n  tag?: string | Class<Component> | Function | Object,\n  data?: VNodeData,\n  children?: any,\n  normalizationType?: number\n): VNode | Array<VNode> {\n\n  // 省略一系列非主线代码\n\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    // 场景是 render 函数不是编译生成的\n    children = normalizeChildren(children)\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    // 场景是 render 函数是编译生成的\n    children = simpleNormalizeChildren(children)\n  }\n  let vnode, ns\n  if (typeof tag === 'string') {\n    let Ctor\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag)\n    if (config.isReservedTag(tag)) {\n      // 创建虚拟 vnode\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      )\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag)\n    } else {\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      )\n    }\n  } else {\n    vnode = createComponent(tag, data, context, children)\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) applyNS(vnode, ns)\n    if (isDef(data)) registerDeepBindings(data)\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br")])]),s("p",[s("code",[n._v("_createElement")]),n._v("方法有 5 个参数，"),s("code",[n._v("context")]),n._v("表示 VNode 的上下文环境，它是"),s("code",[n._v("Component")]),n._v("类型；"),s("code",[n._v("tag")]),n._v("表示标签，它可以是一个字符串，也可以是一个"),s("code",[n._v("Component")]),n._v(";"),s("code",[n._v("data")]),n._v("表示 VNode 的数据，它是一个"),s("code",[n._v("VNodeData")]),n._v("类型，可以在"),s("code",[n._v("flow/vnode.js")]),n._v("中找到它的定义；"),s("code",[n._v("children")]),n._v("表示当前 VNode 的子节点，它是任意类型的，需要被规范为标准的"),s("code",[n._v("VNode")]),n._v("数组；")]),n._v(" "),s("h4",{attrs:{id:"_6-2-diff-过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-diff-过程"}},[n._v("#")]),n._v(" 6.2 diff 过程")]),n._v(" "),s("p",[s("code",[n._v("Vue.js")]),n._v("源码实例化了一个"),s("code",[n._v("watcher")]),n._v("，这个~被添加到了在模板当中所绑定变量的依赖当中，一旦"),s("code",[n._v("model")]),n._v("中的响应式的数据发生了变化，这些响应式的数据所的"),s("code",[n._v("dep")]),n._v("数组便会调用"),s("code",[n._v("dep.notify()")]),n._v("方法完成所有依赖遍历执行的工作，这包括视图的更新，即"),s("code",[n._v("updateComponent")]),n._v("方法的调用。"),s("code",[n._v("watcher")]),n._v("和"),s("code",[n._v("updateComponent")]),n._v("方法定义在"),s("code",[n._v("src/core/instance/lifecycle.js")]),n._v("文件中。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("export function mountComponent(vm,el,hydrating){\n    vm.$el = el\n    // 省略一系列其它代码\n    let updateComponent\n\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark){\n        updateComponent = () => {\n            // 生成虚拟 vnode\n            const vnode = vm._render()\n            // 更新DOM\n            vm._update(vnode,hydrating)\n        }\n    }else{\n        updateComponent = () => {\n            vm._update(vm._render(),hydrating)\n        }\n    }\n\n    // 实例化一个渲染Watcher，在它的回调函数中会调用 updateComponent方法\n    new Watcher(vm,updateComponent,noop,{\n        before (){\n            if(vm._isMounted && !vm._isDestroyed){\n                callHook(vm,'beforeUpdate')\n            }\n        }\n    },true)\n    hydrating = false\n\n    return vm\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br")])]),s("p",[n._v("完成视图的更新工作事实上就是调用了"),s("code",[n._v("vm._update")]),n._v("方法，这个方法的"),s("code",[n._v("Vnode")]),n._v("，调用的"),s("code",[n._v("vm._update")]),n._v("方法定义在"),s("code",[n._v("src/core/instance/lifecycle.js")]),n._v("中。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("Vue.prototype._update = function(vnode,hydrating){\n    const vm = this\n    const prevEl = vm.$el\n    const prevVnode = vm._vnode\n    const restoreActiveInstance = setActiveInstance(vm)\n    vm._vnode = vnode\n    if (!prevVnode) {\n      // 第一个参数为真实的node节点，则为初始化\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */)\n    } else {\n      // 如果需要diff的prevVnode存在，那么对prevVnode和vnode进行diff\n      vm.$el = vm.__patch__(prevVnode, vnode)\n    }\n    restoreActiveInstance()\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el\n    }\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br")])]),s("p",[n._v("在这个方法当中最为关键的就是"),s("code",[n._v("vm.__patch__")]),n._v("方法，这也是整个"),s("code",[n._v("virtual-dom")]),n._v("当中最为核心的方法，主要完成了"),s("code",[n._v("prevVnode")]),n._v("和"),s("code",[n._v("vnode")]),n._v("的"),s("code",[n._v("diff")]),n._v("过程并根据需要操作的"),s("code",[n._v("vdom")]),n._v("节点打"),s("code",[n._v("patch")]),n._v("，最后生成新的真实"),s("code",[n._v("dom")]),n._v("节点并完成视图的更新工作。")]),n._v(" "),s("p",[n._v("接下来，让我们看下"),s("code",[n._v("vm.__patch__")]),n._v("的逻辑过程，"),s("code",[n._v("vm.__patch__")]),n._v("方法定义在"),s("code",[n._v("src/core/vdom/patch.js")]),n._v("中。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function patch(oldVnode,vnode,hydrating,removeOnly){\n    .....\n    if(isUndef(oldVnode)){\n        // 当oldVnode不存在时，创建新的节点\n        isInitialPatch = true\n        createElm(vnode,insertedVnodeQueue)\n    }else{\n        // 对oldVnode和vnode进行diff，并对oldVnode打patch\n      const isRealElement = isDef(oldVnode.nodeType)\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly)\n      }\n    ......\n    }\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br")])]),s("p",[n._v("在"),s("code",[n._v("patch")]),n._v("方法中，我们看到会分为两种情况，一种是当"),s("code",[n._v("oldVnode")]),n._v("不存在时，会创建新的节点；另一种则是已经存在"),s("code",[n._v("oldVnode")]),n._v("，那么会对"),s("code",[n._v("oldVnode")]),n._v("和"),s("code",[n._v("vnode")]),n._v("进行"),s("code",[n._v("diff")]),n._v("及"),s("code",[n._v("patch")]),n._v("的过程。其中"),s("code",[n._v("patch")]),n._v("过程中会调用"),s("code",[n._v("sameVnode")]),n._v("方法来对传入的 2 个"),s("code",[n._v("vnode")]),n._v("进行基本属性的比较，只有当基本属性相同的情况下才认为这 2 个"),s("code",[n._v("vnode")]),n._v("只是局部发生了更新，然后才会对这 2 个"),s("code",[n._v("vnode")]),n._v("进行"),s("code",[n._v("diff")]),n._v("，如果 2 个"),s("code",[n._v("vnode")]),n._v("的基本属性存在不一致的情况，那么就会直接跳过"),s("code",[n._v("diff")]),n._v("的过程，进而依据"),s("code",[n._v("vnode")]),n._v("新建一个真实的"),s("code",[n._v("dom")]),n._v("，同时删除老的"),s("code",[n._v("dom")]),n._v("节点。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function sameVnode(a,b){\n    return (a.key === b.key && a.tag === b.tag && a.isComment === b.isComment && isDef(a.data) === isDef(b.data) && sameInputType(a,b))\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])]),s("p",[s("code",[n._v("diff")]),n._v("过程中主要是通过调用"),s("code",[n._v("patchVnode")]),n._v("方法进行的：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function patchVnode(oldVnode,vnode,insertedVnodeQueue,ownerArray,index,removeOnly){\n......\n    const elm = vnode.elm = oldVnode.elm\n    const oldCh = oldVnode.children\n    const ch = vnode.children\n    // 如果vnode没有文本节点\n    if (isUndef(vnode.text)) {\n      // 如果oldVnode的children属性存在且vnode的children属性也存在\n      if (isDef(oldCh) && isDef(ch)) {\n        // updateChildren，对子节点进行diff\n        if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly)\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch)\n        }\n        // 如果oldVnode的text存在，那么首先清空text的内容,然后将vnode的children添加进去\n        if (isDef(oldVnode.text)) nodeOps.setTextContent(elm, '')\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue)\n      } else if (isDef(oldCh)) {\n        // 删除elm下的oldchildren\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1)\n      } else if (isDef(oldVnode.text)) {\n        // oldVnode有子节点，而vnode没有，那么就清空这个节点\n        nodeOps.setTextContent(elm, '')\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      // 如果oldVnode和vnode文本属性不同，那么直接更新真是dom节点的文本元素\n      nodeOps.setTextContent(elm, vnode.text)\n    }\n    ......\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br")])]),s("p",[n._v("从以上代码得知。")]),n._v(" "),s("p",[s("code",[n._v("diff")]),n._v("过程中分了好几种情况，"),s("code",[n._v("oldCh")]),n._v("为"),s("code",[n._v("oldVnode")]),n._v("的子节点，"),s("code",[n._v("ch")]),n._v("为"),s("code",[n._v("Vnode")]),n._v("的子节点：")]),n._v(" "),s("ul",[s("li",[n._v("首先进行文本节点的判断，若"),s("code",[n._v("oldVnode.text !== vnode.text")]),n._v("，那么就会直接进行文本节点的替换；")]),n._v(" "),s("li",[n._v("在"),s("code",[n._v("vnode")]),n._v("没有文本节点的情况下，进入子节点的"),s("code",[n._v("diff")]),n._v("；")]),n._v(" "),s("li",[n._v("当"),s("code",[n._v("oldCh")]),n._v("和"),s("code",[n._v("ch")]),n._v("都在存在且不相同的情况下，调用"),s("code",[n._v("updateChildren")]),n._v("对子节点进行"),s("code",[n._v("diff")]),n._v(";")]),n._v(" "),s("li",[n._v("若"),s("code",[n._v("oldCh")]),n._v("不存在，"),s("code",[n._v("ch")]),n._v("存在，首先清空"),s("code",[n._v("oldVnode")]),n._v("的文本节点，同时调用"),s("code",[n._v("addVnodes")]),n._v("方法将"),s("code",[n._v("ch")]),n._v("添加到"),s("code",[n._v("elm")]),n._v("真实"),s("code",[n._v("dom")]),n._v("节点当中；")]),n._v(" "),s("li",[n._v("若"),s("code",[n._v("oldCh")]),n._v("存在，"),s("code",[n._v("ch")]),n._v("不存在，则删除"),s("code",[n._v("elm")]),n._v("真实节点下的"),s("code",[n._v("oldCh")]),n._v("子节点；")]),n._v(" "),s("li",[n._v("若"),s("code",[n._v("oldVnode")]),n._v("有文本节点，而"),s("code",[n._v("vnode")]),n._v("没有，那么就清空这个文本节点。")])]),n._v(" "),s("p",[s("strong",[n._v("子节点"),s("code",[n._v("diff")]),n._v("流程分析")])]),n._v(" "),s("p",[n._v("分析一下"),s("code",[n._v("updateChildren")]),n._v("方法，它也是整个"),s("code",[n._v("diff")]),n._v("过程中最重要的环节，以下为"),s("code",[n._v("Vue.js")]),n._v("的源码过程，为了更形象理解"),s("code",[n._v("diff")]),n._v("过程，我们给出相关的示意图来讲解。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('// 循环更新子节点\nfunction updateChildren(parentElm,oldCh,newCh,insertedVnodeQueue,removeOnly){\n    // 为oldCh和newCh分别建立索引，为之后遍历的依据\n    let oldStartIdx = 0     // oldChildren开始索引\n    let newStartIdx = 0     // newChildren开始索引\n    let oldEndIdx = oldCh.length - 1    // oldChilren结束索引\n    let oldStartVnode = oldCh[0]    // oldChildren中所有示处理节点中的第一个\n    let oldEndVnode = oldCh[oldEndIdx] // oldChildren中所有未处理节点中的最后一个\n    let newEndIdx = newCh.length - 1    // newChildren结束索引\n    let newStartVnode = newCh[0]    // newChildren中所有未处理节点中的第一个\n    let newEndVnode = newCh[newEndIdx]  // newChildren中所有未处理节点的最后一个\n    let oldKeyToIdx, idxInOld, vnodeToMove, refElm\n\n    // 以"新前"、"新后"、"旧前"、"旧后"的方式开始比对节点\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx] // 如果oldStartVnode不存在，则直接路过，比对下一个\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx]\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n          // 如果新前与旧前节点相同，就把两个节点进行patch更新\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx)\n        oldStartVnode = oldCh[++oldStartIdx]\n        newStartVnode = newCh[++newStartIdx]\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        // 如果新后与旧后节点相同，就把两个节点进行patch更新\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx)\n        oldEndVnode = oldCh[--oldEndIdx]\n        newEndVnode = newCh[--newEndIdx]\n      } else if (sameVnode(oldStartVnode, newEndVnode)) {\n          // 如果新后与旧前节点相同，先把两个节点进行patch更新，然后把旧前节点移动到oldChildren中所有未处理节点之后\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx)\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm))\n        oldStartVnode = oldCh[++oldStartIdx]\n        newEndVnode = newCh[--newEndIdx]\n      } else if (sameVnode(oldEndVnode, newStartVnode)) {\n        // 如果新前与旧后节点相同，先把两个节点进行patch更新，然后把旧后节点移动到oldChilren中所有未处理节点之前\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx)\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm)\n        oldEndVnode = oldCh[--oldEndIdx]\n        newStartVnode = newCh[++newStartIdx]\n      } else {\n        // 如果不属于以上四种情况，就进行常规的循环比对patch\n        if (isUndef(oldKeyToIdx)) oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx)\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx)\n        // 如果在oldChildren里找不到当前循环的newChildren里的子节点\n        if (isUndef(idxInOld)) {\n        // 新增节点并插入到合适位置\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx)\n        } else {\n            //  如果在oldChildren里找到了当前循环的newChildren里的子节点\n          vnodeToMove = oldCh[idxInOld]\n          // 如果两个节点相同\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n              // 调用patchVnode更新节点\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx)\n            oldCh[idxInOld] = undefined\n            // canmove表示是否需要移动节点，如果为true表示需要移动，则移动节点，如果为false则不用移动\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm)\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx)\n          }\n        }\n        newStartVnode = newCh[++newStartIdx]\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n        /**\n         *  如果oldChildrend比newChildrend先循环完毕，\n         *  那么newChildren里面剩余的节点都是需要新增的节点，\n         *  把[newStartIdx,newEndIdx]之间的所有节点都插入到DOM中\n         */\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue)\n    } else if (newStartIdx > newEndIdx) {\n      /**\n       *  如果newChildren比oldChildren先循环完毕，\n       *  那么oldChildren里面剩余的节点都是需要删除的节点\n       *  把[oldStartIdx,oldEndIdx]之间的所有节点都删除\n       */\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx)\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br"),s("span",{staticClass:"line-number"},[n._v("71")]),s("br"),s("span",{staticClass:"line-number"},[n._v("72")]),s("br"),s("span",{staticClass:"line-number"},[n._v("73")]),s("br"),s("span",{staticClass:"line-number"},[n._v("74")]),s("br"),s("span",{staticClass:"line-number"},[n._v("75")]),s("br"),s("span",{staticClass:"line-number"},[n._v("76")]),s("br"),s("span",{staticClass:"line-number"},[n._v("77")]),s("br"),s("span",{staticClass:"line-number"},[n._v("78")]),s("br"),s("span",{staticClass:"line-number"},[n._v("79")]),s("br"),s("span",{staticClass:"line-number"},[n._v("80")]),s("br"),s("span",{staticClass:"line-number"},[n._v("81")]),s("br"),s("span",{staticClass:"line-number"},[n._v("82")]),s("br"),s("span",{staticClass:"line-number"},[n._v("83")]),s("br"),s("span",{staticClass:"line-number"},[n._v("84")]),s("br"),s("span",{staticClass:"line-number"},[n._v("85")]),s("br"),s("span",{staticClass:"line-number"},[n._v("86")]),s("br")])]),s("p",[n._v("在开始遍历"),s("code",[n._v("diff")]),n._v("前，首先给"),s("code",[n._v("oldCh")]),n._v("和"),s("code",[n._v("newCh")]),n._v("分别分配一个"),s("code",[n._v("startIndex")]),n._v("和"),s("code",[n._v("endIndex")]),n._v("来作为遍历的索引，当"),s("code",[n._v("oldCh")]),n._v("或者"),s("code",[n._v("newCh")]),n._v("遍历完后（"),s("code",[n._v("startIndex >= endIndex")]),n._v("），就停止"),s("code",[n._v("oldCh")]),n._v("和"),s("code",[n._v("newCh")]),n._v("的"),s("code",[n._v("diff")]),n._v("过程。接下来通过实例来看下整个"),s("code",[n._v("diff")]),n._v("的过程。")]),n._v(" "),s("p",[s("strong",[n._v("无"),s("code",[n._v("key")]),n._v("的"),s("code",[n._v("diff")]),n._v("过程")])]),n._v(" "),s("p",[n._v("我们通过以下示意图对以上代码过程进行讲解：")]),n._v(" "),s("ol",[s("li",[n._v("首先从第一个节点开始比较，不管是"),s("code",[n._v("oldCh")]),n._v("还是"),s("code",[n._v("newCh")]),n._v("的起始或者终止节点都不存在"),s("code",[n._v("sameVnode")]),n._v("，同时节点属性中是不带"),s("code",[n._v("key")]),n._v("标记的，因此第一轮的"),s("code",[n._v("diff")]),n._v("完后，"),s("code",[n._v("newCh")]),n._v("的"),s("code",[n._v("startVnode")]),n._v("被添加到"),s("code",[n._v("oldStartVnode")]),n._v("的前面，同时"),s("code",[n._v("newStartIndex")]),n._v("前移一位；")])]),n._v(" "),s("p",[s("img",{attrs:{src:"vue-diff-01.png",alt:"images"}})]),n._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[n._v("第二轮的"),s("code",[n._v("diff")]),n._v("中，满足"),s("code",[n._v("sameVnode(oldStartVnode,newStartVnode)")]),n._v("，因此对这 2 个"),s("code",[n._v("vnode")]),n._v("进行"),s("code",[n._v("diff")]),n._v("，最后将"),s("code",[n._v("patch")]),n._v("打到"),s("code",[n._v("oldStartVnode")]),n._v("上，同时"),s("code",[n._v("oldStartVnode")]),n._v("和"),s("code",[n._v("newStartIndex")]),n._v("都向前移动一位；")])]),n._v(" "),s("p",[s("img",{attrs:{src:"vue-diff-02.png",alt:"images"}})]),n._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[n._v("第三轮的"),s("code",[n._v("diff")]),n._v("中，满足"),s("code",[n._v("sameVnode(oldEndVnode,newStartVnode)")]),n._v("，那么首先对"),s("code",[n._v("oldEndVnode")]),n._v("和"),s("code",[n._v("newStartVnode")]),n._v("进行"),s("code",[n._v("diff")]),n._v("，并对"),s("code",[n._v("oldEndVnode")]),n._v("进行"),s("code",[n._v("patch")]),n._v("，并完成"),s("code",[n._v("oldEndVnode")]),n._v("移位的操作，最后"),s("code",[n._v("newStartIndex")]),n._v("前移一位，"),s("code",[n._v("oldStartVnode")]),n._v("后移一位；")])]),n._v(" "),s("p",[s("img",{attrs:{src:"vue-diff-03.png",alt:"images"}})]),n._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[n._v("第四轮的"),s("code",[n._v("diff")]),n._v("中，过程同步骤 3；")])]),n._v(" "),s("p",[s("img",{attrs:{src:"vue-diff-04.png",alt:"images"}})]),n._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[n._v("第五轮的"),s("code",[n._v("diff")]),n._v("中，同过程 1；")])]),n._v(" "),s("p",[s("img",{attrs:{src:"vue-diff-05.png",alt:"images"}})]),n._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[n._v("遍历的过程结束后，"),s("code",[n._v("newStartIdx > newEndIdx")]),n._v("，说明此时"),s("code",[n._v("oldCh")]),n._v("存在多余的节点，那么最后就需要将这些多余的节点删除。")])]),n._v(" "),s("p",[s("img",{attrs:{src:"vue-diff-06.png",alt:"images"}})]),n._v(" "),s("p",[s("strong",[n._v("有"),s("code",[n._v("key")]),n._v("的"),s("code",[n._v("diff")]),n._v("过程")])]),n._v(" "),s("p",[n._v("在"),s("code",[n._v("vnode")]),n._v("不带"),s("code",[n._v("key")]),n._v("的情况下，每一轮的"),s("code",[n._v("diff")]),n._v("过程当中都是"),s("code",[n._v("起始")]),n._v("和"),s("code",[n._v("结束")]),n._v("节点进行比较，直到"),s("code",[n._v("oldCh")]),n._v("或者"),s("code",[n._v("newCh")]),n._v("被遍历完。而当为"),s("code",[n._v("vnode")]),n._v("引入"),s("code",[n._v("key")]),n._v("属性后，在每一轮的"),s("code",[n._v("diff")]),n._v("过程中，当"),s("code",[n._v("起始")]),n._v("和"),s("code",[n._v("结束")]),n._v("节点都没有找到"),s("code",[n._v("sameVnode")]),n._v("时，然后再判断在"),s("code",[n._v("newStartVnode")]),n._v("的属性中是否有"),s("code",[n._v("key")]),n._v("，且是否在"),s("code",[n._v("oldKeyToIndex")]),n._v("中找到对应的节点：")]),n._v(" "),s("ul",[s("li",[n._v("如果不存在这个"),s("code",[n._v("key")]),n._v("，那么就将这个"),s("code",[n._v("newStartVnode")]),n._v("作为新的节点创建且插入到原有的"),s("code",[n._v("root")]),n._v("的子节点中；")]),n._v(" "),s("li",[n._v("如果存在这个"),s("code",[n._v("key")]),n._v("，那么就取出"),s("code",[n._v("oldCh")]),n._v("中的存在这个"),s("code",[n._v("key")]),n._v("的"),s("code",[n._v("vnode")]),n._v("，然后再进行"),s("code",[n._v("diff")]),n._v("的过程；")])]),n._v(" "),s("p",[n._v("通过以上分析，给"),s("code",[n._v("vdom")]),n._v("上添加"),s("code",[n._v("key")]),n._v("属性后，遍历"),s("code",[n._v("diff")]),n._v("的过程中，当"),s("strong",[n._v("起始点，结束点")]),n._v("的"),s("strong",[n._v("搜寻")]),n._v("及"),s("code",[n._v("diff")]),n._v("出现还是无法切尔西的情况下时，就会用"),s("code",[n._v("key")]),n._v("来作为唯一标识，来进行"),s("code",[n._v("diff")]),n._v("，这样就可以提高"),s("code",[n._v("diff")]),n._v("效率。")]),n._v(" "),s("p",[n._v("带有"),s("code",[n._v("key")]),n._v("属性的"),s("code",[n._v("vnode")]),n._v("的"),s("code",[n._v("diff")]),n._v("过程可见下图：")]),n._v(" "),s("ol",[s("li",[n._v("首先从第一个节点开始比较，不管是"),s("code",[n._v("oldCh")]),n._v("还是"),s("code",[n._v("newCh")]),n._v("的起始或者终止节点都不存在"),s("code",[n._v("sameVnode")]),n._v("，但节点属性中是带"),s("code",[n._v("key")]),n._v("标记的，然后在"),s("code",[n._v("oldKeyToIndx")]),n._v("中找到对应的节点，这样第一轮"),s("code",[n._v("diff")]),n._v("过后"),s("code",[n._v("oldCh")]),n._v("上的"),s("code",[n._v("B节点")]),n._v("被删除了，但是"),s("code",[n._v("newCh")]),n._v("上的"),s("code",[n._v("B节点")]),n._v("上"),s("code",[n._v("elm")]),n._v("属性保持对"),s("code",[n._v("oldCh")]),n._v("上"),s("code",[n._v("B节点")]),n._v("的"),s("code",[n._v("elm")]),n._v("引用。")])]),n._v(" "),s("p",[s("img",{attrs:{src:"vue-diff-07.png",alt:"images"}})]),n._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[n._v("第二轮的"),s("code",[n._v("diff")]),n._v("中，满足"),s("code",[n._v("sameVnode(oldStartVnode,newStartVnode)")]),n._v("，因此对这 2 个"),s("code",[n._v("vnode")]),n._v("进行"),s("code",[n._v("diff")]),n._v("，最后将"),s("code",[n._v("patch")]),n._v("打到"),s("code",[n._v("oldStartVnode")]),n._v("上，同时"),s("code",[n._v("oldStartVnode")]),n._v("和"),s("code",[n._v("newStartIndex")]),n._v("都向前移动一位；")])]),n._v(" "),s("p",[s("img",{attrs:{src:"vue-diff-08.png",alt:"images"}})]),n._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[n._v("第三轮的"),s("code",[n._v("diff")]),n._v("中，满足"),s("code",[n._v("sameVnode(oldEndVnode,newStartVnode)")]),n._v("，那么首先对"),s("code",[n._v("oldEndVnode")]),n._v("和"),s("code",[n._v("newStartVnode")]),n._v("进行"),s("code",[n._v("diff")]),n._v("，并对"),s("code",[n._v("oldEndVnode")]),n._v("进行"),s("code",[n._v("patch")]),n._v("，并完成"),s("code",[n._v("oldEndVnode")]),n._v("移位的操作，最后"),s("code",[n._v("newStartIndex")]),n._v("前移一位，"),s("code",[n._v("oldStartVnode")]),n._v("后移一位；")])]),n._v(" "),s("p",[s("img",{attrs:{src:"vue-diff-09.png",alt:"images"}})]),n._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[n._v("第四轮的"),s("code",[n._v("diff")]),n._v("中，过程同步骤 2；")])]),n._v(" "),s("p",[s("img",{attrs:{src:"vue-diff-10.png",alt:"images"}})]),n._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[n._v("第五轮的"),s("code",[n._v("diff")]),n._v("中，因为此时"),s("code",[n._v("oldStartIndex")]),n._v("已经大于"),s("code",[n._v("oldEndIndex")]),n._v("，所以将剩余的"),s("code",[n._v("Vnode")]),n._v("队列插入队列最后。")])]),n._v(" "),s("p",[s("img",{attrs:{src:"vue-diff-11.png",alt:"images"}})]),n._v(" "),s("h4",{attrs:{id:"_6-3-patch-过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-patch-过程"}},[n._v("#")]),n._v(" 6.3 patch 过程")]),n._v(" "),s("p",[n._v("介绍"),s("code",[n._v("diff")]),n._v("过程中，我们会看到"),s("code",[n._v("nodeOps")]),n._v("相关的方法对真实"),s("code",[n._v("DOM")]),n._v("结构进行操作，"),s("code",[n._v("nodeOps")]),n._v("定义在"),s("code",[n._v("src/platforms/web/runtime/node-ops.js")]),n._v("中，其为基本"),s("code",[n._v("DOM")]),n._v("操作，这里就不在详细介绍。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("export function createElementNS (namespace: string, tagName: string): Element {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nexport function createTextNode (text: string): Text {\n  return document.createTextNode(text)\n}\n\nexport function createComment (text: string): Comment {\n  return document.createComment(text)\n}\n\nexport function insertBefore (parentNode: Node, newNode: Node, referenceNode: Node) {\n  parentNode.insertBefore(newNode, referenceNode)\n}\n\nexport function removeChild (node: Node, child: Node) {\n  node.removeChild(child)\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br")])]),s("h4",{attrs:{id:"_6-4-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-总结"}},[n._v("#")]),n._v(" 6.4 总结")]),n._v(" "),s("p",[n._v("通过前三小节解析，我们从主线上把模板和数据如何渲染成最终的"),s("code",[n._v("DOM")]),n._v("的过程分析完毕了，我们可以通过下图更直观看到从初始化"),s("code",[n._v("Vue")]),n._v("到最终渲染的整个过程。")]),n._v(" "),s("p",[s("img",{attrs:{src:"vue-diff.png",alt:"images"}})]),n._v(" "),s("h3",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[n._v("#")]),n._v(" 参考资料")]),n._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/livoras/blog/issues/13",target:"_blank",rel:"noopener noreferrer"}},[n._v("如何实现一个 Virtual DOM 算法"),s("OutboundLink")],1)]),n._v(" "),s("li",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s/EeN7E8uQS4R_JJloPX8fCQ",target:"_blank",rel:"noopener noreferrer"}},[n._v("揭秘 Vue 中的 Virtual Dom"),s("OutboundLink")],1)]),n._v(" "),s("li",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s/oAlVmZ4Hbt2VhOwFEkNEhw",target:"_blank",rel:"noopener noreferrer"}},[n._v("虚拟 DOM 到底是什么？"),s("OutboundLink")],1)]),n._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.im/post/5d36cc575188257aea108a74",target:"_blank",rel:"noopener noreferrer"}},[n._v("深入剖析：Vue 核心之虚拟 DOM"),s("OutboundLink")],1)]),n._v(" "),s("li",[s("a",{attrs:{href:"https://www.404forest.com/2019/03/07/modern-web-development-tech-analysis-virtual-dom/",target:"_blank",rel:"noopener noreferrer"}},[n._v("现代前端科技解析 —— Virtual DOM #"),s("OutboundLink")],1)]),n._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/aooy/blog/issues/2",target:"_blank",rel:"noopener noreferrer"}},[n._v("Diff 算法"),s("OutboundLink")],1)]),n._v(" "),s("li",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s/9nB2bfDczNFRpUTiBwup8Q",target:"_blank",rel:"noopener noreferrer"}},[n._v("Virtual Dom 和 Diff 算法"),s("OutboundLink")],1)]),n._v(" "),s("li",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/81752104",target:"_blank",rel:"noopener noreferrer"}},[n._v("【Vue 原理】Diff - 白话版"),s("OutboundLink")],1)]),n._v(" "),s("li",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/29450092",target:"_blank",rel:"noopener noreferrer"}},[n._v("VirtualDOM 与 diff(Vue 实现)"),s("OutboundLink")],1)]),n._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.im/post/5c8e5e4951882545c109ae9c",target:"_blank",rel:"noopener noreferrer"}},[n._v("让虚拟 DOM 和 DOM-diff 不再成为你的绊脚石"),s("OutboundLink")],1)]),n._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.im/post/5e53c9c051882549150ea5d3",target:"_blank",rel:"noopener noreferrer"}},[n._v("虚拟 Dom+Diff--Vue 源码动手写系列"),s("OutboundLink")],1)])]),n._v(" "),s("h2",{attrs:{id:"联系作者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#联系作者"}},[n._v("#")]),n._v(" 联系作者")]),n._v(" "),s("div",{attrs:{align:"center"}},[s("p",[n._v("\n        平凡世界，贵在坚持。\n    ")]),n._v(" "),s("img",{attrs:{src:n.$withBase("/about/contact.png")}})]),n._v("\n```\n")])}),[],!1,null,null,null);e.default=t.exports}}]);